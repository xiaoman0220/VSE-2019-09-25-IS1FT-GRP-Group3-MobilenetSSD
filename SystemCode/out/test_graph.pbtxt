node {
  name: "input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 300
        }
        dim {
          size: 300
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "identity_layer/Identity"
  op: "Identity"
  input: "input_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_mean_normalization/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\366B\000\000\352B\000\000\320B"
      }
    }
  }
}
node {
  name: "input_mean_normalization/sub"
  op: "Sub"
  input: "identity_layer/Identity"
  input: "input_mean_normalization/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_stddev_normalization/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 127.5
      }
    }
  }
}
node {
  name: "input_stddev_normalization/truediv"
  op: "RealDiv"
  input: "input_mean_normalization/sub"
  input: "input_stddev_normalization/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_channel_swap/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "input_channel_swap/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "input_channel_swap/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "input_channel_swap/strided_slice"
  op: "StridedSlice"
  input: "input_stddev_normalization/truediv"
  input: "input_channel_swap/strided_slice/stack"
  input: "input_channel_swap/strided_slice/stack_1"
  input: "input_channel_swap/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1_padding/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv1_padding/Pad"
  op: "Pad"
  input: "input_channel_swap/strided_slice"
  input: "conv1_padding/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv0/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv0/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1380131095647812
      }
    }
  }
}
node {
  name: "conv0/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1380131095647812
      }
    }
  }
}
node {
  name: "conv0/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv0/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1416255
    }
  }
}
node {
  name: "conv0/random_uniform/sub"
  op: "Sub"
  input: "conv0/random_uniform/max"
  input: "conv0/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0/random_uniform/mul"
  op: "Mul"
  input: "conv0/random_uniform/RandomUniform"
  input: "conv0/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0/random_uniform"
  op: "Add"
  input: "conv0/random_uniform/mul"
  input: "conv0/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/kernel/Assign"
  op: "Assign"
  input: "conv0/kernel"
  input: "conv0/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/kernel/read"
  op: "Identity"
  input: "conv0/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/kernel"
      }
    }
  }
}
node {
  name: "conv0/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv0/convolution"
  op: "Conv2D"
  input: "conv1_padding/Pad"
  input: "conv0/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/bn/gamma/Assign"
  op: "Assign"
  input: "conv0/bn/gamma"
  input: "conv0/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn/gamma/read"
  op: "Identity"
  input: "conv0/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/gamma"
      }
    }
  }
}
node {
  name: "conv0/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv0/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/bn/beta/Assign"
  op: "Assign"
  input: "conv0/bn/beta"
  input: "conv0/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn/beta/read"
  op: "Identity"
  input: "conv0/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/beta"
      }
    }
  }
}
node {
  name: "conv0/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv0/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv0/bn/moving_mean"
  input: "conv0/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn/moving_mean/read"
  op: "Identity"
  input: "conv0/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv0/bn/moving_variance"
  input: "conv0/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn/moving_variance/read"
  op: "Identity"
  input: "conv0/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv0/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0/bn/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv0/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0/bn/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "conv0/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0/bn/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "conv0/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0/bn/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "conv0/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0/bn/init"
  op: "NoOp"
  input: "^conv0/bn/beta/Assign"
  input: "^conv0/bn/gamma/Assign"
  input: "^conv0/bn/moving_mean/Assign"
  input: "^conv0/bn/moving_variance/Assign"
  input: "^conv0/kernel/Assign"
}
node {
  name: "conv0/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv0/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv0/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv0/convolution"
  input: "conv0/bn/gamma/read"
  input: "conv0/bn/beta/read"
  input: "conv0/bn/Const_4"
  input: "conv0/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn/Shape"
  op: "Shape"
  input: "conv0/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv0/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv0/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv0/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv0/bn/strided_slice"
  op: "StridedSlice"
  input: "conv0/bn/Shape"
  input: "conv0/bn/strided_slice/stack"
  input: "conv0/bn/strided_slice/stack_1"
  input: "conv0/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv0/bn/Shape_1"
  op: "Shape"
  input: "conv0/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv0/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv0/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv0/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv0/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv0/bn/Shape_1"
  input: "conv0/bn/strided_slice_1/stack"
  input: "conv0/bn/strided_slice_1/stack_1"
  input: "conv0/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv0/bn/Shape_2"
  op: "Shape"
  input: "conv0/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv0/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv0/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv0/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv0/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv0/bn/Shape_2"
  input: "conv0/bn/strided_slice_2/stack"
  input: "conv0/bn/strided_slice_2/stack_1"
  input: "conv0/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv0/bn/Rank/packed"
  op: "Pack"
  input: "conv0/bn/strided_slice"
  input: "conv0/bn/strided_slice_1"
  input: "conv0/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv0/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv0/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv0/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv0/bn/range"
  op: "Range"
  input: "conv0/bn/range/start"
  input: "conv0/bn/Rank"
  input: "conv0/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv0/bn/Prod/input"
  op: "Pack"
  input: "conv0/bn/strided_slice"
  input: "conv0/bn/strided_slice_1"
  input: "conv0/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv0/bn/Prod"
  op: "Prod"
  input: "conv0/bn/Prod/input"
  input: "conv0/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv0/bn/Cast"
  op: "Cast"
  input: "conv0/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv0/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv0/bn/sub"
  op: "Sub"
  input: "conv0/bn/Cast"
  input: "conv0/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0/bn/truediv"
  op: "RealDiv"
  input: "conv0/bn/Cast"
  input: "conv0/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0/bn/mul"
  op: "Mul"
  input: "conv0/bn/FusedBatchNorm:2"
  input: "conv0/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv0/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv0/bn/moving_mean/biased"
  input: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv0/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv0/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv0/bn/moving_mean/local_step"
  input: "conv0/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv0/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/sub"
  op: "Sub"
  input: "conv0/bn/moving_mean/biased/read"
  input: "conv0/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/mul"
  op: "Mul"
  input: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/sub"
  input: "conv0/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/conv0/bn/moving_mean"
  op: "AssignSub"
  input: "conv0/bn/moving_mean/biased"
  input: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv0/bn/moving_mean/local_step"
  input: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/read"
  op: "Identity"
  input: "conv0/bn/moving_mean/biased"
  input: "^conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/AssignAdd"
  input: "^conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/conv0/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/AssignAdd"
  input: "^conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/conv0/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/sub_1/x"
  input: "conv0/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv0/bn/moving_mean/local_step"
  input: "^conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/AssignAdd"
  input: "^conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/conv0/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/sub_1"
  input: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/AssignAdd"
  input: "^conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/conv0/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/sub_2/x"
  input: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/read"
  input: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv0/bn/moving_mean/read"
  input: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv0/bn/moving_mean"
  input: "conv0/bn/AssignMovingAvg/conv0/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv0/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv0/bn/moving_variance/biased"
  input: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv0/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv0/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv0/bn/moving_variance/local_step"
  input: "conv0/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv0/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/sub"
  op: "Sub"
  input: "conv0/bn/moving_variance/biased/read"
  input: "conv0/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/mul"
  op: "Mul"
  input: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/sub"
  input: "conv0/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/conv0/bn/moving_variance"
  op: "AssignSub"
  input: "conv0/bn/moving_variance/biased"
  input: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv0/bn/moving_variance/local_step"
  input: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/read"
  op: "Identity"
  input: "conv0/bn/moving_variance/biased"
  input: "^conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/AssignAdd"
  input: "^conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/conv0/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/AssignAdd"
  input: "^conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/conv0/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/sub_1/x"
  input: "conv0/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv0/bn/moving_variance/local_step"
  input: "^conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/AssignAdd"
  input: "^conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/conv0/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/sub_1"
  input: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/AssignAdd"
  input: "^conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/conv0/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/sub_2/x"
  input: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/read"
  input: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv0/bn/moving_variance/read"
  input: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv0/bn/moving_variance"
  input: "conv0/bn/AssignMovingAvg_1/conv0/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv0/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv0/convolution"
  input: "conv0/bn/gamma/read"
  input: "conv0/bn/beta/read"
  input: "conv0/bn/moving_mean/read"
  input: "conv0/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_1/Relu"
  op: "Relu"
  input: "conv0/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/dw/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/dw/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "conv1/dw/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "conv1/dw/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1/dw/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8394788
    }
  }
}
node {
  name: "conv1/dw/random_uniform/sub"
  op: "Sub"
  input: "conv1/dw/random_uniform/max"
  input: "conv1/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/dw/random_uniform/mul"
  op: "Mul"
  input: "conv1/dw/random_uniform/RandomUniform"
  input: "conv1/dw/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/dw/random_uniform"
  op: "Add"
  input: "conv1/dw/random_uniform/mul"
  input: "conv1/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/dw/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv1/dw/depthwise_kernel"
  input: "conv1/dw/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/depthwise_kernel/read"
  op: "Identity"
  input: "conv1/dw/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv1/dw/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/dw/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/dw/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_1/Relu"
  input: "conv1/dw/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv1/dw/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/bn/gamma/Assign"
  op: "Assign"
  input: "conv1/dw/bn/gamma"
  input: "conv1/dw/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn/gamma/read"
  op: "Identity"
  input: "conv1/dw/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/gamma"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/bn/beta/Assign"
  op: "Assign"
  input: "conv1/dw/bn/beta"
  input: "conv1/dw/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn/beta/read"
  op: "Identity"
  input: "conv1/dw/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/beta"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv1/dw/bn/moving_mean"
  input: "conv1/dw/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv1/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv1/dw/bn/moving_variance"
  input: "conv1/dw/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv1/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv1/dw/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv1/dw/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv1/dw/depthwise"
  input: "conv1/dw/bn/gamma/read"
  input: "conv1/dw/bn/beta/read"
  input: "conv1/dw/bn/Const_4"
  input: "conv1/dw/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn/Shape"
  op: "Shape"
  input: "conv1/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/dw/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1/dw/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/dw/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/dw/bn/strided_slice"
  op: "StridedSlice"
  input: "conv1/dw/bn/Shape"
  input: "conv1/dw/bn/strided_slice/stack"
  input: "conv1/dw/bn/strided_slice/stack_1"
  input: "conv1/dw/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1/dw/bn/Shape_1"
  op: "Shape"
  input: "conv1/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/dw/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/dw/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv1/dw/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/dw/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv1/dw/bn/Shape_1"
  input: "conv1/dw/bn/strided_slice_1/stack"
  input: "conv1/dw/bn/strided_slice_1/stack_1"
  input: "conv1/dw/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1/dw/bn/Shape_2"
  op: "Shape"
  input: "conv1/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/dw/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv1/dw/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv1/dw/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/dw/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv1/dw/bn/Shape_2"
  input: "conv1/dw/bn/strided_slice_2/stack"
  input: "conv1/dw/bn/strided_slice_2/stack_1"
  input: "conv1/dw/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1/dw/bn/Rank/packed"
  op: "Pack"
  input: "conv1/dw/bn/strided_slice"
  input: "conv1/dw/bn/strided_slice_1"
  input: "conv1/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/dw/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/dw/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1/dw/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/dw/bn/range"
  op: "Range"
  input: "conv1/dw/bn/range/start"
  input: "conv1/dw/bn/Rank"
  input: "conv1/dw/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/dw/bn/Prod/input"
  op: "Pack"
  input: "conv1/dw/bn/strided_slice"
  input: "conv1/dw/bn/strided_slice_1"
  input: "conv1/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/dw/bn/Prod"
  op: "Prod"
  input: "conv1/dw/bn/Prod/input"
  input: "conv1/dw/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/dw/bn/Cast"
  op: "Cast"
  input: "conv1/dw/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/dw/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv1/dw/bn/sub"
  op: "Sub"
  input: "conv1/dw/bn/Cast"
  input: "conv1/dw/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/dw/bn/truediv"
  op: "RealDiv"
  input: "conv1/dw/bn/Cast"
  input: "conv1/dw/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/dw/bn/mul"
  op: "Mul"
  input: "conv1/dw/bn/FusedBatchNorm:2"
  input: "conv1/dw/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv1/dw/bn/moving_mean/biased"
  input: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv1/dw/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv1/dw/bn/moving_mean/local_step"
  input: "conv1/dw/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv1/dw/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/sub"
  op: "Sub"
  input: "conv1/dw/bn/moving_mean/biased/read"
  input: "conv1/dw/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/mul"
  op: "Mul"
  input: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/sub"
  input: "conv1/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/conv1/dw/bn/moving_mean"
  op: "AssignSub"
  input: "conv1/dw/bn/moving_mean/biased"
  input: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv1/dw/bn/moving_mean/local_step"
  input: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv1/dw/bn/moving_mean/biased"
  input: "^conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/AssignAdd"
  input: "^conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/conv1/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/AssignAdd"
  input: "^conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/conv1/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/sub_1/x"
  input: "conv1/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv1/dw/bn/moving_mean/local_step"
  input: "^conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/AssignAdd"
  input: "^conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/conv1/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/sub_1"
  input: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/AssignAdd"
  input: "^conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/conv1/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/sub_2/x"
  input: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/read"
  input: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv1/dw/bn/moving_mean/read"
  input: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv1/dw/bn/moving_mean"
  input: "conv1/dw/bn/AssignMovingAvg/conv1/dw/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv1/dw/bn/moving_variance/biased"
  input: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv1/dw/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv1/dw/bn/moving_variance/local_step"
  input: "conv1/dw/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv1/dw/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/sub"
  op: "Sub"
  input: "conv1/dw/bn/moving_variance/biased/read"
  input: "conv1/dw/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/mul"
  op: "Mul"
  input: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/sub"
  input: "conv1/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/conv1/dw/bn/moving_variance"
  op: "AssignSub"
  input: "conv1/dw/bn/moving_variance/biased"
  input: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv1/dw/bn/moving_variance/local_step"
  input: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv1/dw/bn/moving_variance/biased"
  input: "^conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/AssignAdd"
  input: "^conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/conv1/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/AssignAdd"
  input: "^conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/conv1/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/sub_1/x"
  input: "conv1/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv1/dw/bn/moving_variance/local_step"
  input: "^conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/AssignAdd"
  input: "^conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/conv1/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/sub_1"
  input: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/AssignAdd"
  input: "^conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/conv1/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/sub_2/x"
  input: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/read"
  input: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv1/dw/bn/moving_variance/read"
  input: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv1/dw/bn/moving_variance"
  input: "conv1/dw/bn/AssignMovingAvg_1/conv1/dw/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/dw/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv1/dw/depthwise"
  input: "conv1/dw/bn/gamma/read"
  input: "conv1/dw/bn/beta/read"
  input: "conv1/dw/bn/moving_mean/read"
  input: "conv1/dw/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_2/Relu"
  op: "Relu"
  input: "conv1/dw/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "conv1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "conv1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4684220
    }
  }
}
node {
  name: "conv1/random_uniform/sub"
  op: "Sub"
  input: "conv1/random_uniform/max"
  input: "conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/random_uniform/mul"
  op: "Mul"
  input: "conv1/random_uniform/RandomUniform"
  input: "conv1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/random_uniform"
  op: "Add"
  input: "conv1/random_uniform/mul"
  input: "conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/kernel/Assign"
  op: "Assign"
  input: "conv1/kernel"
  input: "conv1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/kernel/read"
  op: "Identity"
  input: "conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
}
node {
  name: "conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/convolution"
  op: "Conv2D"
  input: "activation_2/Relu"
  input: "conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bn/gamma/Assign"
  op: "Assign"
  input: "conv1/bn/gamma"
  input: "conv1/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn/gamma/read"
  op: "Identity"
  input: "conv1/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/gamma"
      }
    }
  }
}
node {
  name: "conv1/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bn/beta/Assign"
  op: "Assign"
  input: "conv1/bn/beta"
  input: "conv1/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn/beta/read"
  op: "Identity"
  input: "conv1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/beta"
      }
    }
  }
}
node {
  name: "conv1/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv1/bn/moving_mean"
  input: "conv1/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn/moving_mean/read"
  op: "Identity"
  input: "conv1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv1/bn/moving_variance"
  input: "conv1/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn/moving_variance/read"
  op: "Identity"
  input: "conv1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv1/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv1/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv1/convolution"
  input: "conv1/bn/gamma/read"
  input: "conv1/bn/beta/read"
  input: "conv1/bn/Const_4"
  input: "conv1/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn/Shape"
  op: "Shape"
  input: "conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/bn/strided_slice"
  op: "StridedSlice"
  input: "conv1/bn/Shape"
  input: "conv1/bn/strided_slice/stack"
  input: "conv1/bn/strided_slice/stack_1"
  input: "conv1/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1/bn/Shape_1"
  op: "Shape"
  input: "conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv1/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv1/bn/Shape_1"
  input: "conv1/bn/strided_slice_1/stack"
  input: "conv1/bn/strided_slice_1/stack_1"
  input: "conv1/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1/bn/Shape_2"
  op: "Shape"
  input: "conv1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv1/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv1/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv1/bn/Shape_2"
  input: "conv1/bn/strided_slice_2/stack"
  input: "conv1/bn/strided_slice_2/stack_1"
  input: "conv1/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1/bn/Rank/packed"
  op: "Pack"
  input: "conv1/bn/strided_slice"
  input: "conv1/bn/strided_slice_1"
  input: "conv1/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/bn/range"
  op: "Range"
  input: "conv1/bn/range/start"
  input: "conv1/bn/Rank"
  input: "conv1/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/bn/Prod/input"
  op: "Pack"
  input: "conv1/bn/strided_slice"
  input: "conv1/bn/strided_slice_1"
  input: "conv1/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/bn/Prod"
  op: "Prod"
  input: "conv1/bn/Prod/input"
  input: "conv1/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/bn/Cast"
  op: "Cast"
  input: "conv1/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv1/bn/sub"
  op: "Sub"
  input: "conv1/bn/Cast"
  input: "conv1/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/bn/truediv"
  op: "RealDiv"
  input: "conv1/bn/Cast"
  input: "conv1/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/bn/mul"
  op: "Mul"
  input: "conv1/bn/FusedBatchNorm:2"
  input: "conv1/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv1/bn/moving_mean/biased"
  input: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv1/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv1/bn/moving_mean/local_step"
  input: "conv1/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv1/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/sub"
  op: "Sub"
  input: "conv1/bn/moving_mean/biased/read"
  input: "conv1/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/mul"
  op: "Mul"
  input: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/sub"
  input: "conv1/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/conv1/bn/moving_mean"
  op: "AssignSub"
  input: "conv1/bn/moving_mean/biased"
  input: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv1/bn/moving_mean/local_step"
  input: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/read"
  op: "Identity"
  input: "conv1/bn/moving_mean/biased"
  input: "^conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/AssignAdd"
  input: "^conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/conv1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/AssignAdd"
  input: "^conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/conv1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/sub_1/x"
  input: "conv1/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv1/bn/moving_mean/local_step"
  input: "^conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/AssignAdd"
  input: "^conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/conv1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/sub_1"
  input: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/AssignAdd"
  input: "^conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/conv1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/sub_2/x"
  input: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/read"
  input: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv1/bn/moving_mean/read"
  input: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv1/bn/moving_mean"
  input: "conv1/bn/AssignMovingAvg/conv1/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv1/bn/moving_variance/biased"
  input: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv1/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv1/bn/moving_variance/local_step"
  input: "conv1/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv1/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/sub"
  op: "Sub"
  input: "conv1/bn/moving_variance/biased/read"
  input: "conv1/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/mul"
  op: "Mul"
  input: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/sub"
  input: "conv1/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/conv1/bn/moving_variance"
  op: "AssignSub"
  input: "conv1/bn/moving_variance/biased"
  input: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv1/bn/moving_variance/local_step"
  input: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/read"
  op: "Identity"
  input: "conv1/bn/moving_variance/biased"
  input: "^conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/AssignAdd"
  input: "^conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/conv1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/AssignAdd"
  input: "^conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/conv1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/sub_1/x"
  input: "conv1/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv1/bn/moving_variance/local_step"
  input: "^conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/AssignAdd"
  input: "^conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/conv1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/sub_1"
  input: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/AssignAdd"
  input: "^conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/conv1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/sub_2/x"
  input: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/read"
  input: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv1/bn/moving_variance/read"
  input: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv1/bn/moving_variance"
  input: "conv1/bn/AssignMovingAvg_1/conv1/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv1/convolution"
  input: "conv1/bn/gamma/read"
  input: "conv1/bn/beta/read"
  input: "conv1/bn/moving_mean/read"
  input: "conv1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_3/Relu"
  op: "Relu"
  input: "conv1/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2_padding/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv2_padding/Pad"
  op: "Pad"
  input: "activation_3/Relu"
  input: "conv2_padding/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/dw/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/dw/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "conv2/dw/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "conv2/dw/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2/dw/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5651243
    }
  }
}
node {
  name: "conv2/dw/random_uniform/sub"
  op: "Sub"
  input: "conv2/dw/random_uniform/max"
  input: "conv2/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/dw/random_uniform/mul"
  op: "Mul"
  input: "conv2/dw/random_uniform/RandomUniform"
  input: "conv2/dw/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/dw/random_uniform"
  op: "Add"
  input: "conv2/dw/random_uniform/mul"
  input: "conv2/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/dw/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv2/dw/depthwise_kernel"
  input: "conv2/dw/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/depthwise_kernel/read"
  op: "Identity"
  input: "conv2/dw/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv2/dw/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/dw/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/dw/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv2_padding/Pad"
  input: "conv2/dw/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv2/dw/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/bn/gamma/Assign"
  op: "Assign"
  input: "conv2/dw/bn/gamma"
  input: "conv2/dw/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn/gamma/read"
  op: "Identity"
  input: "conv2/dw/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/gamma"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/bn/beta/Assign"
  op: "Assign"
  input: "conv2/dw/bn/beta"
  input: "conv2/dw/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn/beta/read"
  op: "Identity"
  input: "conv2/dw/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/beta"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv2/dw/bn/moving_mean"
  input: "conv2/dw/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv2/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv2/dw/bn/moving_variance"
  input: "conv2/dw/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv2/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv2/dw/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv2/dw/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2/dw/depthwise"
  input: "conv2/dw/bn/gamma/read"
  input: "conv2/dw/bn/beta/read"
  input: "conv2/dw/bn/Const_4"
  input: "conv2/dw/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn/Shape"
  op: "Shape"
  input: "conv2/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/dw/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv2/dw/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/dw/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/dw/bn/strided_slice"
  op: "StridedSlice"
  input: "conv2/dw/bn/Shape"
  input: "conv2/dw/bn/strided_slice/stack"
  input: "conv2/dw/bn/strided_slice/stack_1"
  input: "conv2/dw/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2/dw/bn/Shape_1"
  op: "Shape"
  input: "conv2/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/dw/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/dw/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2/dw/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/dw/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv2/dw/bn/Shape_1"
  input: "conv2/dw/bn/strided_slice_1/stack"
  input: "conv2/dw/bn/strided_slice_1/stack_1"
  input: "conv2/dw/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2/dw/bn/Shape_2"
  op: "Shape"
  input: "conv2/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/dw/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2/dw/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv2/dw/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/dw/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv2/dw/bn/Shape_2"
  input: "conv2/dw/bn/strided_slice_2/stack"
  input: "conv2/dw/bn/strided_slice_2/stack_1"
  input: "conv2/dw/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2/dw/bn/Rank/packed"
  op: "Pack"
  input: "conv2/dw/bn/strided_slice"
  input: "conv2/dw/bn/strided_slice_1"
  input: "conv2/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/dw/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/dw/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv2/dw/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/dw/bn/range"
  op: "Range"
  input: "conv2/dw/bn/range/start"
  input: "conv2/dw/bn/Rank"
  input: "conv2/dw/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/dw/bn/Prod/input"
  op: "Pack"
  input: "conv2/dw/bn/strided_slice"
  input: "conv2/dw/bn/strided_slice_1"
  input: "conv2/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/dw/bn/Prod"
  op: "Prod"
  input: "conv2/dw/bn/Prod/input"
  input: "conv2/dw/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/dw/bn/Cast"
  op: "Cast"
  input: "conv2/dw/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/dw/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv2/dw/bn/sub"
  op: "Sub"
  input: "conv2/dw/bn/Cast"
  input: "conv2/dw/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/dw/bn/truediv"
  op: "RealDiv"
  input: "conv2/dw/bn/Cast"
  input: "conv2/dw/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/dw/bn/mul"
  op: "Mul"
  input: "conv2/dw/bn/FusedBatchNorm:2"
  input: "conv2/dw/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv2/dw/bn/moving_mean/biased"
  input: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv2/dw/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv2/dw/bn/moving_mean/local_step"
  input: "conv2/dw/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv2/dw/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/sub"
  op: "Sub"
  input: "conv2/dw/bn/moving_mean/biased/read"
  input: "conv2/dw/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/mul"
  op: "Mul"
  input: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/sub"
  input: "conv2/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/conv2/dw/bn/moving_mean"
  op: "AssignSub"
  input: "conv2/dw/bn/moving_mean/biased"
  input: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv2/dw/bn/moving_mean/local_step"
  input: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv2/dw/bn/moving_mean/biased"
  input: "^conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/AssignAdd"
  input: "^conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/conv2/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/AssignAdd"
  input: "^conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/conv2/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/sub_1/x"
  input: "conv2/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv2/dw/bn/moving_mean/local_step"
  input: "^conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/AssignAdd"
  input: "^conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/conv2/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/sub_1"
  input: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/AssignAdd"
  input: "^conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/conv2/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/sub_2/x"
  input: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/read"
  input: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv2/dw/bn/moving_mean/read"
  input: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv2/dw/bn/moving_mean"
  input: "conv2/dw/bn/AssignMovingAvg/conv2/dw/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv2/dw/bn/moving_variance/biased"
  input: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv2/dw/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv2/dw/bn/moving_variance/local_step"
  input: "conv2/dw/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv2/dw/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/sub"
  op: "Sub"
  input: "conv2/dw/bn/moving_variance/biased/read"
  input: "conv2/dw/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/mul"
  op: "Mul"
  input: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/sub"
  input: "conv2/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/conv2/dw/bn/moving_variance"
  op: "AssignSub"
  input: "conv2/dw/bn/moving_variance/biased"
  input: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv2/dw/bn/moving_variance/local_step"
  input: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv2/dw/bn/moving_variance/biased"
  input: "^conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/AssignAdd"
  input: "^conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/conv2/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/AssignAdd"
  input: "^conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/conv2/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/sub_1/x"
  input: "conv2/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv2/dw/bn/moving_variance/local_step"
  input: "^conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/AssignAdd"
  input: "^conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/conv2/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/sub_1"
  input: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/AssignAdd"
  input: "^conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/conv2/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/sub_2/x"
  input: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/read"
  input: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv2/dw/bn/moving_variance/read"
  input: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv2/dw/bn/moving_variance"
  input: "conv2/dw/bn/AssignMovingAvg_1/conv2/dw/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/dw/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv2/dw/depthwise"
  input: "conv2/dw/bn/gamma/read"
  input: "conv2/dw/bn/beta/read"
  input: "conv2/dw/bn/moving_mean/read"
  input: "conv2/dw/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_4/Relu"
  op: "Relu"
  input: "conv2/dw/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "conv2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "conv2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6526762
    }
  }
}
node {
  name: "conv2/random_uniform/sub"
  op: "Sub"
  input: "conv2/random_uniform/max"
  input: "conv2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/random_uniform/mul"
  op: "Mul"
  input: "conv2/random_uniform/RandomUniform"
  input: "conv2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/random_uniform"
  op: "Add"
  input: "conv2/random_uniform/mul"
  input: "conv2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/kernel/Assign"
  op: "Assign"
  input: "conv2/kernel"
  input: "conv2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/kernel/read"
  op: "Identity"
  input: "conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
}
node {
  name: "conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/convolution"
  op: "Conv2D"
  input: "activation_4/Relu"
  input: "conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bn/gamma/Assign"
  op: "Assign"
  input: "conv2/bn/gamma"
  input: "conv2/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn/gamma/read"
  op: "Identity"
  input: "conv2/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/gamma"
      }
    }
  }
}
node {
  name: "conv2/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bn/beta/Assign"
  op: "Assign"
  input: "conv2/bn/beta"
  input: "conv2/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn/beta/read"
  op: "Identity"
  input: "conv2/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/beta"
      }
    }
  }
}
node {
  name: "conv2/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv2/bn/moving_mean"
  input: "conv2/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn/moving_mean/read"
  op: "Identity"
  input: "conv2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv2/bn/moving_variance"
  input: "conv2/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn/moving_variance/read"
  op: "Identity"
  input: "conv2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv2/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv2/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2/convolution"
  input: "conv2/bn/gamma/read"
  input: "conv2/bn/beta/read"
  input: "conv2/bn/Const_4"
  input: "conv2/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn/Shape"
  op: "Shape"
  input: "conv2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv2/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/bn/strided_slice"
  op: "StridedSlice"
  input: "conv2/bn/Shape"
  input: "conv2/bn/strided_slice/stack"
  input: "conv2/bn/strided_slice/stack_1"
  input: "conv2/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2/bn/Shape_1"
  op: "Shape"
  input: "conv2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv2/bn/Shape_1"
  input: "conv2/bn/strided_slice_1/stack"
  input: "conv2/bn/strided_slice_1/stack_1"
  input: "conv2/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2/bn/Shape_2"
  op: "Shape"
  input: "conv2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv2/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv2/bn/Shape_2"
  input: "conv2/bn/strided_slice_2/stack"
  input: "conv2/bn/strided_slice_2/stack_1"
  input: "conv2/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2/bn/Rank/packed"
  op: "Pack"
  input: "conv2/bn/strided_slice"
  input: "conv2/bn/strided_slice_1"
  input: "conv2/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv2/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/bn/range"
  op: "Range"
  input: "conv2/bn/range/start"
  input: "conv2/bn/Rank"
  input: "conv2/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/bn/Prod/input"
  op: "Pack"
  input: "conv2/bn/strided_slice"
  input: "conv2/bn/strided_slice_1"
  input: "conv2/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/bn/Prod"
  op: "Prod"
  input: "conv2/bn/Prod/input"
  input: "conv2/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/bn/Cast"
  op: "Cast"
  input: "conv2/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv2/bn/sub"
  op: "Sub"
  input: "conv2/bn/Cast"
  input: "conv2/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/bn/truediv"
  op: "RealDiv"
  input: "conv2/bn/Cast"
  input: "conv2/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/bn/mul"
  op: "Mul"
  input: "conv2/bn/FusedBatchNorm:2"
  input: "conv2/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv2/bn/moving_mean/biased"
  input: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv2/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv2/bn/moving_mean/local_step"
  input: "conv2/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv2/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/sub"
  op: "Sub"
  input: "conv2/bn/moving_mean/biased/read"
  input: "conv2/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/mul"
  op: "Mul"
  input: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/sub"
  input: "conv2/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/conv2/bn/moving_mean"
  op: "AssignSub"
  input: "conv2/bn/moving_mean/biased"
  input: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv2/bn/moving_mean/local_step"
  input: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/read"
  op: "Identity"
  input: "conv2/bn/moving_mean/biased"
  input: "^conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/AssignAdd"
  input: "^conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/conv2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/AssignAdd"
  input: "^conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/conv2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/sub_1/x"
  input: "conv2/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv2/bn/moving_mean/local_step"
  input: "^conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/AssignAdd"
  input: "^conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/conv2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/sub_1"
  input: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/AssignAdd"
  input: "^conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/conv2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/sub_2/x"
  input: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/read"
  input: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv2/bn/moving_mean/read"
  input: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv2/bn/moving_mean"
  input: "conv2/bn/AssignMovingAvg/conv2/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv2/bn/moving_variance/biased"
  input: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv2/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv2/bn/moving_variance/local_step"
  input: "conv2/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv2/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/sub"
  op: "Sub"
  input: "conv2/bn/moving_variance/biased/read"
  input: "conv2/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/mul"
  op: "Mul"
  input: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/sub"
  input: "conv2/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/conv2/bn/moving_variance"
  op: "AssignSub"
  input: "conv2/bn/moving_variance/biased"
  input: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv2/bn/moving_variance/local_step"
  input: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/read"
  op: "Identity"
  input: "conv2/bn/moving_variance/biased"
  input: "^conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/AssignAdd"
  input: "^conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/conv2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/AssignAdd"
  input: "^conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/conv2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/sub_1/x"
  input: "conv2/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv2/bn/moving_variance/local_step"
  input: "^conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/AssignAdd"
  input: "^conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/conv2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/sub_1"
  input: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/AssignAdd"
  input: "^conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/conv2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/sub_2/x"
  input: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/read"
  input: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv2/bn/moving_variance/read"
  input: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv2/bn/moving_variance"
  input: "conv2/bn/AssignMovingAvg_1/conv2/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv2/convolution"
  input: "conv2/bn/gamma/read"
  input: "conv2/bn/beta/read"
  input: "conv2/bn/moving_mean/read"
  input: "conv2/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_5/Relu"
  op: "Relu"
  input: "conv2/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/dw/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv3/dw/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "conv3/dw/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "conv3/dw/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv3/dw/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4030086
    }
  }
}
node {
  name: "conv3/dw/random_uniform/sub"
  op: "Sub"
  input: "conv3/dw/random_uniform/max"
  input: "conv3/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/dw/random_uniform/mul"
  op: "Mul"
  input: "conv3/dw/random_uniform/RandomUniform"
  input: "conv3/dw/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/dw/random_uniform"
  op: "Add"
  input: "conv3/dw/random_uniform/mul"
  input: "conv3/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/dw/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv3/dw/depthwise_kernel"
  input: "conv3/dw/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/depthwise_kernel/read"
  op: "Identity"
  input: "conv3/dw/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv3/dw/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv3/dw/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv3/dw/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_5/Relu"
  input: "conv3/dw/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv3/dw/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/bn/gamma/Assign"
  op: "Assign"
  input: "conv3/dw/bn/gamma"
  input: "conv3/dw/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn/gamma/read"
  op: "Identity"
  input: "conv3/dw/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/gamma"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/bn/beta/Assign"
  op: "Assign"
  input: "conv3/dw/bn/beta"
  input: "conv3/dw/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn/beta/read"
  op: "Identity"
  input: "conv3/dw/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/beta"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv3/dw/bn/moving_mean"
  input: "conv3/dw/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv3/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv3/dw/bn/moving_variance"
  input: "conv3/dw/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv3/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv3/dw/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv3/dw/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv3/dw/depthwise"
  input: "conv3/dw/bn/gamma/read"
  input: "conv3/dw/bn/beta/read"
  input: "conv3/dw/bn/Const_4"
  input: "conv3/dw/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn/Shape"
  op: "Shape"
  input: "conv3/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/dw/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv3/dw/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/dw/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/dw/bn/strided_slice"
  op: "StridedSlice"
  input: "conv3/dw/bn/Shape"
  input: "conv3/dw/bn/strided_slice/stack"
  input: "conv3/dw/bn/strided_slice/stack_1"
  input: "conv3/dw/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv3/dw/bn/Shape_1"
  op: "Shape"
  input: "conv3/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/dw/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/dw/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv3/dw/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/dw/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv3/dw/bn/Shape_1"
  input: "conv3/dw/bn/strided_slice_1/stack"
  input: "conv3/dw/bn/strided_slice_1/stack_1"
  input: "conv3/dw/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv3/dw/bn/Shape_2"
  op: "Shape"
  input: "conv3/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/dw/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv3/dw/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv3/dw/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/dw/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv3/dw/bn/Shape_2"
  input: "conv3/dw/bn/strided_slice_2/stack"
  input: "conv3/dw/bn/strided_slice_2/stack_1"
  input: "conv3/dw/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv3/dw/bn/Rank/packed"
  op: "Pack"
  input: "conv3/dw/bn/strided_slice"
  input: "conv3/dw/bn/strided_slice_1"
  input: "conv3/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3/dw/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/dw/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv3/dw/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/dw/bn/range"
  op: "Range"
  input: "conv3/dw/bn/range/start"
  input: "conv3/dw/bn/Rank"
  input: "conv3/dw/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/dw/bn/Prod/input"
  op: "Pack"
  input: "conv3/dw/bn/strided_slice"
  input: "conv3/dw/bn/strided_slice_1"
  input: "conv3/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3/dw/bn/Prod"
  op: "Prod"
  input: "conv3/dw/bn/Prod/input"
  input: "conv3/dw/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/dw/bn/Cast"
  op: "Cast"
  input: "conv3/dw/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/dw/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv3/dw/bn/sub"
  op: "Sub"
  input: "conv3/dw/bn/Cast"
  input: "conv3/dw/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/dw/bn/truediv"
  op: "RealDiv"
  input: "conv3/dw/bn/Cast"
  input: "conv3/dw/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/dw/bn/mul"
  op: "Mul"
  input: "conv3/dw/bn/FusedBatchNorm:2"
  input: "conv3/dw/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv3/dw/bn/moving_mean/biased"
  input: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv3/dw/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv3/dw/bn/moving_mean/local_step"
  input: "conv3/dw/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv3/dw/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/sub"
  op: "Sub"
  input: "conv3/dw/bn/moving_mean/biased/read"
  input: "conv3/dw/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/mul"
  op: "Mul"
  input: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/sub"
  input: "conv3/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/conv3/dw/bn/moving_mean"
  op: "AssignSub"
  input: "conv3/dw/bn/moving_mean/biased"
  input: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv3/dw/bn/moving_mean/local_step"
  input: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv3/dw/bn/moving_mean/biased"
  input: "^conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/AssignAdd"
  input: "^conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/conv3/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/AssignAdd"
  input: "^conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/conv3/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/sub_1/x"
  input: "conv3/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv3/dw/bn/moving_mean/local_step"
  input: "^conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/AssignAdd"
  input: "^conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/conv3/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/sub_1"
  input: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/AssignAdd"
  input: "^conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/conv3/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/sub_2/x"
  input: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/read"
  input: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv3/dw/bn/moving_mean/read"
  input: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv3/dw/bn/moving_mean"
  input: "conv3/dw/bn/AssignMovingAvg/conv3/dw/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv3/dw/bn/moving_variance/biased"
  input: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv3/dw/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv3/dw/bn/moving_variance/local_step"
  input: "conv3/dw/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv3/dw/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/sub"
  op: "Sub"
  input: "conv3/dw/bn/moving_variance/biased/read"
  input: "conv3/dw/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/mul"
  op: "Mul"
  input: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/sub"
  input: "conv3/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/conv3/dw/bn/moving_variance"
  op: "AssignSub"
  input: "conv3/dw/bn/moving_variance/biased"
  input: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv3/dw/bn/moving_variance/local_step"
  input: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv3/dw/bn/moving_variance/biased"
  input: "^conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/AssignAdd"
  input: "^conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/conv3/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/AssignAdd"
  input: "^conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/conv3/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/sub_1/x"
  input: "conv3/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv3/dw/bn/moving_variance/local_step"
  input: "^conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/AssignAdd"
  input: "^conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/conv3/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/sub_1"
  input: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/AssignAdd"
  input: "^conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/conv3/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/sub_2/x"
  input: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/read"
  input: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv3/dw/bn/moving_variance/read"
  input: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv3/dw/bn/moving_variance"
  input: "conv3/dw/bn/AssignMovingAvg_1/conv3/dw/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/dw/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv3/dw/depthwise"
  input: "conv3/dw/bn/gamma/read"
  input: "conv3/dw/bn/beta/read"
  input: "conv3/dw/bn/moving_mean/read"
  input: "conv3/dw/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_6/Relu"
  op: "Relu"
  input: "conv3/dw/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "conv3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "conv3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5612816
    }
  }
}
node {
  name: "conv3/random_uniform/sub"
  op: "Sub"
  input: "conv3/random_uniform/max"
  input: "conv3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/random_uniform/mul"
  op: "Mul"
  input: "conv3/random_uniform/RandomUniform"
  input: "conv3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/random_uniform"
  op: "Add"
  input: "conv3/random_uniform/mul"
  input: "conv3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/kernel/Assign"
  op: "Assign"
  input: "conv3/kernel"
  input: "conv3/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/kernel/read"
  op: "Identity"
  input: "conv3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/kernel"
      }
    }
  }
}
node {
  name: "conv3/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv3/convolution"
  op: "Conv2D"
  input: "activation_6/Relu"
  input: "conv3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/bn/gamma/Assign"
  op: "Assign"
  input: "conv3/bn/gamma"
  input: "conv3/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn/gamma/read"
  op: "Identity"
  input: "conv3/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/gamma"
      }
    }
  }
}
node {
  name: "conv3/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/bn/beta/Assign"
  op: "Assign"
  input: "conv3/bn/beta"
  input: "conv3/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn/beta/read"
  op: "Identity"
  input: "conv3/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/beta"
      }
    }
  }
}
node {
  name: "conv3/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv3/bn/moving_mean"
  input: "conv3/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn/moving_mean/read"
  op: "Identity"
  input: "conv3/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv3/bn/moving_variance"
  input: "conv3/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn/moving_variance/read"
  op: "Identity"
  input: "conv3/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv3/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv3/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv3/convolution"
  input: "conv3/bn/gamma/read"
  input: "conv3/bn/beta/read"
  input: "conv3/bn/Const_4"
  input: "conv3/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn/Shape"
  op: "Shape"
  input: "conv3/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv3/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/bn/strided_slice"
  op: "StridedSlice"
  input: "conv3/bn/Shape"
  input: "conv3/bn/strided_slice/stack"
  input: "conv3/bn/strided_slice/stack_1"
  input: "conv3/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv3/bn/Shape_1"
  op: "Shape"
  input: "conv3/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv3/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv3/bn/Shape_1"
  input: "conv3/bn/strided_slice_1/stack"
  input: "conv3/bn/strided_slice_1/stack_1"
  input: "conv3/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv3/bn/Shape_2"
  op: "Shape"
  input: "conv3/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv3/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv3/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv3/bn/Shape_2"
  input: "conv3/bn/strided_slice_2/stack"
  input: "conv3/bn/strided_slice_2/stack_1"
  input: "conv3/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv3/bn/Rank/packed"
  op: "Pack"
  input: "conv3/bn/strided_slice"
  input: "conv3/bn/strided_slice_1"
  input: "conv3/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv3/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/bn/range"
  op: "Range"
  input: "conv3/bn/range/start"
  input: "conv3/bn/Rank"
  input: "conv3/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/bn/Prod/input"
  op: "Pack"
  input: "conv3/bn/strided_slice"
  input: "conv3/bn/strided_slice_1"
  input: "conv3/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3/bn/Prod"
  op: "Prod"
  input: "conv3/bn/Prod/input"
  input: "conv3/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/bn/Cast"
  op: "Cast"
  input: "conv3/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv3/bn/sub"
  op: "Sub"
  input: "conv3/bn/Cast"
  input: "conv3/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/bn/truediv"
  op: "RealDiv"
  input: "conv3/bn/Cast"
  input: "conv3/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/bn/mul"
  op: "Mul"
  input: "conv3/bn/FusedBatchNorm:2"
  input: "conv3/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv3/bn/moving_mean/biased"
  input: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv3/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv3/bn/moving_mean/local_step"
  input: "conv3/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv3/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/sub"
  op: "Sub"
  input: "conv3/bn/moving_mean/biased/read"
  input: "conv3/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/mul"
  op: "Mul"
  input: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/sub"
  input: "conv3/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/conv3/bn/moving_mean"
  op: "AssignSub"
  input: "conv3/bn/moving_mean/biased"
  input: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv3/bn/moving_mean/local_step"
  input: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/read"
  op: "Identity"
  input: "conv3/bn/moving_mean/biased"
  input: "^conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/AssignAdd"
  input: "^conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/conv3/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/AssignAdd"
  input: "^conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/conv3/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/sub_1/x"
  input: "conv3/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv3/bn/moving_mean/local_step"
  input: "^conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/AssignAdd"
  input: "^conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/conv3/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/sub_1"
  input: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/AssignAdd"
  input: "^conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/conv3/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/sub_2/x"
  input: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/read"
  input: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv3/bn/moving_mean/read"
  input: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv3/bn/moving_mean"
  input: "conv3/bn/AssignMovingAvg/conv3/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv3/bn/moving_variance/biased"
  input: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv3/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv3/bn/moving_variance/local_step"
  input: "conv3/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv3/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/sub"
  op: "Sub"
  input: "conv3/bn/moving_variance/biased/read"
  input: "conv3/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/mul"
  op: "Mul"
  input: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/sub"
  input: "conv3/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/conv3/bn/moving_variance"
  op: "AssignSub"
  input: "conv3/bn/moving_variance/biased"
  input: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv3/bn/moving_variance/local_step"
  input: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/read"
  op: "Identity"
  input: "conv3/bn/moving_variance/biased"
  input: "^conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/AssignAdd"
  input: "^conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/conv3/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/AssignAdd"
  input: "^conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/conv3/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/sub_1/x"
  input: "conv3/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv3/bn/moving_variance/local_step"
  input: "^conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/AssignAdd"
  input: "^conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/conv3/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/sub_1"
  input: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/AssignAdd"
  input: "^conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/conv3/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/sub_2/x"
  input: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/read"
  input: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv3/bn/moving_variance/read"
  input: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv3/bn/moving_variance"
  input: "conv3/bn/AssignMovingAvg_1/conv3/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv3/convolution"
  input: "conv3/bn/gamma/read"
  input: "conv3/bn/beta/read"
  input: "conv3/bn/moving_mean/read"
  input: "conv3/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_7/Relu"
  op: "Relu"
  input: "conv3/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3_padding/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_padding/Pad"
  op: "Pad"
  input: "activation_7/Relu"
  input: "conv3_padding/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/dw/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv4/dw/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "conv4/dw/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "conv4/dw/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv4/dw/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9526982
    }
  }
}
node {
  name: "conv4/dw/random_uniform/sub"
  op: "Sub"
  input: "conv4/dw/random_uniform/max"
  input: "conv4/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/dw/random_uniform/mul"
  op: "Mul"
  input: "conv4/dw/random_uniform/RandomUniform"
  input: "conv4/dw/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/dw/random_uniform"
  op: "Add"
  input: "conv4/dw/random_uniform/mul"
  input: "conv4/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/dw/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv4/dw/depthwise_kernel"
  input: "conv4/dw/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/depthwise_kernel/read"
  op: "Identity"
  input: "conv4/dw/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv4/dw/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv4/dw/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv4/dw/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv3_padding/Pad"
  input: "conv4/dw/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv4/dw/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/bn/gamma/Assign"
  op: "Assign"
  input: "conv4/dw/bn/gamma"
  input: "conv4/dw/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn/gamma/read"
  op: "Identity"
  input: "conv4/dw/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/gamma"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/bn/beta/Assign"
  op: "Assign"
  input: "conv4/dw/bn/beta"
  input: "conv4/dw/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn/beta/read"
  op: "Identity"
  input: "conv4/dw/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/beta"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv4/dw/bn/moving_mean"
  input: "conv4/dw/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv4/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv4/dw/bn/moving_variance"
  input: "conv4/dw/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv4/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv4/dw/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv4/dw/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv4/dw/depthwise"
  input: "conv4/dw/bn/gamma/read"
  input: "conv4/dw/bn/beta/read"
  input: "conv4/dw/bn/Const_4"
  input: "conv4/dw/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn/Shape"
  op: "Shape"
  input: "conv4/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/dw/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv4/dw/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/dw/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/dw/bn/strided_slice"
  op: "StridedSlice"
  input: "conv4/dw/bn/Shape"
  input: "conv4/dw/bn/strided_slice/stack"
  input: "conv4/dw/bn/strided_slice/stack_1"
  input: "conv4/dw/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4/dw/bn/Shape_1"
  op: "Shape"
  input: "conv4/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/dw/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/dw/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv4/dw/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/dw/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv4/dw/bn/Shape_1"
  input: "conv4/dw/bn/strided_slice_1/stack"
  input: "conv4/dw/bn/strided_slice_1/stack_1"
  input: "conv4/dw/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4/dw/bn/Shape_2"
  op: "Shape"
  input: "conv4/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/dw/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv4/dw/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv4/dw/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/dw/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv4/dw/bn/Shape_2"
  input: "conv4/dw/bn/strided_slice_2/stack"
  input: "conv4/dw/bn/strided_slice_2/stack_1"
  input: "conv4/dw/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4/dw/bn/Rank/packed"
  op: "Pack"
  input: "conv4/dw/bn/strided_slice"
  input: "conv4/dw/bn/strided_slice_1"
  input: "conv4/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4/dw/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/dw/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv4/dw/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/dw/bn/range"
  op: "Range"
  input: "conv4/dw/bn/range/start"
  input: "conv4/dw/bn/Rank"
  input: "conv4/dw/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/dw/bn/Prod/input"
  op: "Pack"
  input: "conv4/dw/bn/strided_slice"
  input: "conv4/dw/bn/strided_slice_1"
  input: "conv4/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4/dw/bn/Prod"
  op: "Prod"
  input: "conv4/dw/bn/Prod/input"
  input: "conv4/dw/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/dw/bn/Cast"
  op: "Cast"
  input: "conv4/dw/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/dw/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv4/dw/bn/sub"
  op: "Sub"
  input: "conv4/dw/bn/Cast"
  input: "conv4/dw/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/dw/bn/truediv"
  op: "RealDiv"
  input: "conv4/dw/bn/Cast"
  input: "conv4/dw/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/dw/bn/mul"
  op: "Mul"
  input: "conv4/dw/bn/FusedBatchNorm:2"
  input: "conv4/dw/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv4/dw/bn/moving_mean/biased"
  input: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv4/dw/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv4/dw/bn/moving_mean/local_step"
  input: "conv4/dw/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv4/dw/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/sub"
  op: "Sub"
  input: "conv4/dw/bn/moving_mean/biased/read"
  input: "conv4/dw/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/mul"
  op: "Mul"
  input: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/sub"
  input: "conv4/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/conv4/dw/bn/moving_mean"
  op: "AssignSub"
  input: "conv4/dw/bn/moving_mean/biased"
  input: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv4/dw/bn/moving_mean/local_step"
  input: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv4/dw/bn/moving_mean/biased"
  input: "^conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/AssignAdd"
  input: "^conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/conv4/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/AssignAdd"
  input: "^conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/conv4/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/sub_1/x"
  input: "conv4/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv4/dw/bn/moving_mean/local_step"
  input: "^conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/AssignAdd"
  input: "^conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/conv4/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/sub_1"
  input: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/AssignAdd"
  input: "^conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/conv4/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/sub_2/x"
  input: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/read"
  input: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv4/dw/bn/moving_mean/read"
  input: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv4/dw/bn/moving_mean"
  input: "conv4/dw/bn/AssignMovingAvg/conv4/dw/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv4/dw/bn/moving_variance/biased"
  input: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv4/dw/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv4/dw/bn/moving_variance/local_step"
  input: "conv4/dw/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv4/dw/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/sub"
  op: "Sub"
  input: "conv4/dw/bn/moving_variance/biased/read"
  input: "conv4/dw/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/mul"
  op: "Mul"
  input: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/sub"
  input: "conv4/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/conv4/dw/bn/moving_variance"
  op: "AssignSub"
  input: "conv4/dw/bn/moving_variance/biased"
  input: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv4/dw/bn/moving_variance/local_step"
  input: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv4/dw/bn/moving_variance/biased"
  input: "^conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/AssignAdd"
  input: "^conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/conv4/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/AssignAdd"
  input: "^conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/conv4/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/sub_1/x"
  input: "conv4/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv4/dw/bn/moving_variance/local_step"
  input: "^conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/AssignAdd"
  input: "^conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/conv4/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/sub_1"
  input: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/AssignAdd"
  input: "^conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/conv4/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/sub_2/x"
  input: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/read"
  input: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv4/dw/bn/moving_variance/read"
  input: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv4/dw/bn/moving_variance"
  input: "conv4/dw/bn/AssignMovingAvg_1/conv4/dw/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/dw/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv4/dw/depthwise"
  input: "conv4/dw/bn/gamma/read"
  input: "conv4/dw/bn/beta/read"
  input: "conv4/dw/bn/moving_mean/read"
  input: "conv4/dw/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_8/Relu"
  op: "Relu"
  input: "conv4/dw/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv4/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv4/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv4/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv4/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2155860
    }
  }
}
node {
  name: "conv4/random_uniform/sub"
  op: "Sub"
  input: "conv4/random_uniform/max"
  input: "conv4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/random_uniform/mul"
  op: "Mul"
  input: "conv4/random_uniform/RandomUniform"
  input: "conv4/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/random_uniform"
  op: "Add"
  input: "conv4/random_uniform/mul"
  input: "conv4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/kernel/Assign"
  op: "Assign"
  input: "conv4/kernel"
  input: "conv4/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/kernel/read"
  op: "Identity"
  input: "conv4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/kernel"
      }
    }
  }
}
node {
  name: "conv4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv4/convolution"
  op: "Conv2D"
  input: "activation_8/Relu"
  input: "conv4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/bn/gamma/Assign"
  op: "Assign"
  input: "conv4/bn/gamma"
  input: "conv4/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn/gamma/read"
  op: "Identity"
  input: "conv4/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/gamma"
      }
    }
  }
}
node {
  name: "conv4/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/bn/beta/Assign"
  op: "Assign"
  input: "conv4/bn/beta"
  input: "conv4/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn/beta/read"
  op: "Identity"
  input: "conv4/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/beta"
      }
    }
  }
}
node {
  name: "conv4/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv4/bn/moving_mean"
  input: "conv4/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn/moving_mean/read"
  op: "Identity"
  input: "conv4/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv4/bn/moving_variance"
  input: "conv4/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn/moving_variance/read"
  op: "Identity"
  input: "conv4/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv4/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv4/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv4/convolution"
  input: "conv4/bn/gamma/read"
  input: "conv4/bn/beta/read"
  input: "conv4/bn/Const_4"
  input: "conv4/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn/Shape"
  op: "Shape"
  input: "conv4/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv4/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/bn/strided_slice"
  op: "StridedSlice"
  input: "conv4/bn/Shape"
  input: "conv4/bn/strided_slice/stack"
  input: "conv4/bn/strided_slice/stack_1"
  input: "conv4/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4/bn/Shape_1"
  op: "Shape"
  input: "conv4/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv4/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv4/bn/Shape_1"
  input: "conv4/bn/strided_slice_1/stack"
  input: "conv4/bn/strided_slice_1/stack_1"
  input: "conv4/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4/bn/Shape_2"
  op: "Shape"
  input: "conv4/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv4/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv4/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv4/bn/Shape_2"
  input: "conv4/bn/strided_slice_2/stack"
  input: "conv4/bn/strided_slice_2/stack_1"
  input: "conv4/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4/bn/Rank/packed"
  op: "Pack"
  input: "conv4/bn/strided_slice"
  input: "conv4/bn/strided_slice_1"
  input: "conv4/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv4/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/bn/range"
  op: "Range"
  input: "conv4/bn/range/start"
  input: "conv4/bn/Rank"
  input: "conv4/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/bn/Prod/input"
  op: "Pack"
  input: "conv4/bn/strided_slice"
  input: "conv4/bn/strided_slice_1"
  input: "conv4/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4/bn/Prod"
  op: "Prod"
  input: "conv4/bn/Prod/input"
  input: "conv4/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/bn/Cast"
  op: "Cast"
  input: "conv4/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv4/bn/sub"
  op: "Sub"
  input: "conv4/bn/Cast"
  input: "conv4/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/bn/truediv"
  op: "RealDiv"
  input: "conv4/bn/Cast"
  input: "conv4/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/bn/mul"
  op: "Mul"
  input: "conv4/bn/FusedBatchNorm:2"
  input: "conv4/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv4/bn/moving_mean/biased"
  input: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv4/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv4/bn/moving_mean/local_step"
  input: "conv4/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv4/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/sub"
  op: "Sub"
  input: "conv4/bn/moving_mean/biased/read"
  input: "conv4/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/mul"
  op: "Mul"
  input: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/sub"
  input: "conv4/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/conv4/bn/moving_mean"
  op: "AssignSub"
  input: "conv4/bn/moving_mean/biased"
  input: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv4/bn/moving_mean/local_step"
  input: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/read"
  op: "Identity"
  input: "conv4/bn/moving_mean/biased"
  input: "^conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/AssignAdd"
  input: "^conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/conv4/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/AssignAdd"
  input: "^conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/conv4/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/sub_1/x"
  input: "conv4/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv4/bn/moving_mean/local_step"
  input: "^conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/AssignAdd"
  input: "^conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/conv4/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/sub_1"
  input: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/AssignAdd"
  input: "^conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/conv4/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/sub_2/x"
  input: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/read"
  input: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv4/bn/moving_mean/read"
  input: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv4/bn/moving_mean"
  input: "conv4/bn/AssignMovingAvg/conv4/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv4/bn/moving_variance/biased"
  input: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv4/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv4/bn/moving_variance/local_step"
  input: "conv4/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv4/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/sub"
  op: "Sub"
  input: "conv4/bn/moving_variance/biased/read"
  input: "conv4/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/mul"
  op: "Mul"
  input: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/sub"
  input: "conv4/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/conv4/bn/moving_variance"
  op: "AssignSub"
  input: "conv4/bn/moving_variance/biased"
  input: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv4/bn/moving_variance/local_step"
  input: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/read"
  op: "Identity"
  input: "conv4/bn/moving_variance/biased"
  input: "^conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/AssignAdd"
  input: "^conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/conv4/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/AssignAdd"
  input: "^conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/conv4/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/sub_1/x"
  input: "conv4/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv4/bn/moving_variance/local_step"
  input: "^conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/AssignAdd"
  input: "^conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/conv4/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/sub_1"
  input: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/AssignAdd"
  input: "^conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/conv4/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/sub_2/x"
  input: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/read"
  input: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv4/bn/moving_variance/read"
  input: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv4/bn/moving_variance"
  input: "conv4/bn/AssignMovingAvg_1/conv4/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv4/convolution"
  input: "conv4/bn/gamma/read"
  input: "conv4/bn/beta/read"
  input: "conv4/bn/moving_mean/read"
  input: "conv4/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_9/Relu"
  op: "Relu"
  input: "conv4/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/dw/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv5/dw/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "conv5/dw/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "conv5/dw/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv5/dw/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7609039
    }
  }
}
node {
  name: "conv5/dw/random_uniform/sub"
  op: "Sub"
  input: "conv5/dw/random_uniform/max"
  input: "conv5/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/dw/random_uniform/mul"
  op: "Mul"
  input: "conv5/dw/random_uniform/RandomUniform"
  input: "conv5/dw/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/dw/random_uniform"
  op: "Add"
  input: "conv5/dw/random_uniform/mul"
  input: "conv5/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/dw/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv5/dw/depthwise_kernel"
  input: "conv5/dw/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/depthwise_kernel/read"
  op: "Identity"
  input: "conv5/dw/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv5/dw/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv5/dw/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv5/dw/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_9/Relu"
  input: "conv5/dw/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv5/dw/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/bn/gamma/Assign"
  op: "Assign"
  input: "conv5/dw/bn/gamma"
  input: "conv5/dw/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn/gamma/read"
  op: "Identity"
  input: "conv5/dw/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/gamma"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/bn/beta/Assign"
  op: "Assign"
  input: "conv5/dw/bn/beta"
  input: "conv5/dw/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn/beta/read"
  op: "Identity"
  input: "conv5/dw/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/beta"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv5/dw/bn/moving_mean"
  input: "conv5/dw/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv5/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv5/dw/bn/moving_variance"
  input: "conv5/dw/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv5/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv5/dw/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv5/dw/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv5/dw/depthwise"
  input: "conv5/dw/bn/gamma/read"
  input: "conv5/dw/bn/beta/read"
  input: "conv5/dw/bn/Const_4"
  input: "conv5/dw/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn/Shape"
  op: "Shape"
  input: "conv5/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/dw/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv5/dw/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/dw/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/dw/bn/strided_slice"
  op: "StridedSlice"
  input: "conv5/dw/bn/Shape"
  input: "conv5/dw/bn/strided_slice/stack"
  input: "conv5/dw/bn/strided_slice/stack_1"
  input: "conv5/dw/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv5/dw/bn/Shape_1"
  op: "Shape"
  input: "conv5/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/dw/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/dw/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv5/dw/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/dw/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv5/dw/bn/Shape_1"
  input: "conv5/dw/bn/strided_slice_1/stack"
  input: "conv5/dw/bn/strided_slice_1/stack_1"
  input: "conv5/dw/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv5/dw/bn/Shape_2"
  op: "Shape"
  input: "conv5/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/dw/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv5/dw/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv5/dw/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/dw/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv5/dw/bn/Shape_2"
  input: "conv5/dw/bn/strided_slice_2/stack"
  input: "conv5/dw/bn/strided_slice_2/stack_1"
  input: "conv5/dw/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv5/dw/bn/Rank/packed"
  op: "Pack"
  input: "conv5/dw/bn/strided_slice"
  input: "conv5/dw/bn/strided_slice_1"
  input: "conv5/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv5/dw/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/dw/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv5/dw/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/dw/bn/range"
  op: "Range"
  input: "conv5/dw/bn/range/start"
  input: "conv5/dw/bn/Rank"
  input: "conv5/dw/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/dw/bn/Prod/input"
  op: "Pack"
  input: "conv5/dw/bn/strided_slice"
  input: "conv5/dw/bn/strided_slice_1"
  input: "conv5/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv5/dw/bn/Prod"
  op: "Prod"
  input: "conv5/dw/bn/Prod/input"
  input: "conv5/dw/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/dw/bn/Cast"
  op: "Cast"
  input: "conv5/dw/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/dw/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv5/dw/bn/sub"
  op: "Sub"
  input: "conv5/dw/bn/Cast"
  input: "conv5/dw/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/dw/bn/truediv"
  op: "RealDiv"
  input: "conv5/dw/bn/Cast"
  input: "conv5/dw/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/dw/bn/mul"
  op: "Mul"
  input: "conv5/dw/bn/FusedBatchNorm:2"
  input: "conv5/dw/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv5/dw/bn/moving_mean/biased"
  input: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv5/dw/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv5/dw/bn/moving_mean/local_step"
  input: "conv5/dw/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv5/dw/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/sub"
  op: "Sub"
  input: "conv5/dw/bn/moving_mean/biased/read"
  input: "conv5/dw/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/mul"
  op: "Mul"
  input: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/sub"
  input: "conv5/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/conv5/dw/bn/moving_mean"
  op: "AssignSub"
  input: "conv5/dw/bn/moving_mean/biased"
  input: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv5/dw/bn/moving_mean/local_step"
  input: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv5/dw/bn/moving_mean/biased"
  input: "^conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/AssignAdd"
  input: "^conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/conv5/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/AssignAdd"
  input: "^conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/conv5/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/sub_1/x"
  input: "conv5/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv5/dw/bn/moving_mean/local_step"
  input: "^conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/AssignAdd"
  input: "^conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/conv5/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/sub_1"
  input: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/AssignAdd"
  input: "^conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/conv5/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/sub_2/x"
  input: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/read"
  input: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv5/dw/bn/moving_mean/read"
  input: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv5/dw/bn/moving_mean"
  input: "conv5/dw/bn/AssignMovingAvg/conv5/dw/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv5/dw/bn/moving_variance/biased"
  input: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv5/dw/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv5/dw/bn/moving_variance/local_step"
  input: "conv5/dw/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv5/dw/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/sub"
  op: "Sub"
  input: "conv5/dw/bn/moving_variance/biased/read"
  input: "conv5/dw/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/mul"
  op: "Mul"
  input: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/sub"
  input: "conv5/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/conv5/dw/bn/moving_variance"
  op: "AssignSub"
  input: "conv5/dw/bn/moving_variance/biased"
  input: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv5/dw/bn/moving_variance/local_step"
  input: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv5/dw/bn/moving_variance/biased"
  input: "^conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/AssignAdd"
  input: "^conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/conv5/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/AssignAdd"
  input: "^conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/conv5/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/sub_1/x"
  input: "conv5/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv5/dw/bn/moving_variance/local_step"
  input: "^conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/AssignAdd"
  input: "^conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/conv5/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/sub_1"
  input: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/AssignAdd"
  input: "^conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/conv5/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/sub_2/x"
  input: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/read"
  input: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv5/dw/bn/moving_variance/read"
  input: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv5/dw/bn/moving_variance"
  input: "conv5/dw/bn/AssignMovingAvg_1/conv5/dw/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/dw/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv5/dw/depthwise"
  input: "conv5/dw/bn/gamma/read"
  input: "conv5/dw/bn/beta/read"
  input: "conv5/dw/bn/moving_mean/read"
  input: "conv5/dw/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_10/Relu"
  op: "Relu"
  input: "conv5/dw/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv5/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "conv5/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "conv5/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv5/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7262167
    }
  }
}
node {
  name: "conv5/random_uniform/sub"
  op: "Sub"
  input: "conv5/random_uniform/max"
  input: "conv5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/random_uniform/mul"
  op: "Mul"
  input: "conv5/random_uniform/RandomUniform"
  input: "conv5/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/random_uniform"
  op: "Add"
  input: "conv5/random_uniform/mul"
  input: "conv5/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/kernel/Assign"
  op: "Assign"
  input: "conv5/kernel"
  input: "conv5/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/kernel/read"
  op: "Identity"
  input: "conv5/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/kernel"
      }
    }
  }
}
node {
  name: "conv5/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv5/convolution"
  op: "Conv2D"
  input: "activation_10/Relu"
  input: "conv5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/bn/gamma/Assign"
  op: "Assign"
  input: "conv5/bn/gamma"
  input: "conv5/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn/gamma/read"
  op: "Identity"
  input: "conv5/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/gamma"
      }
    }
  }
}
node {
  name: "conv5/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/bn/beta/Assign"
  op: "Assign"
  input: "conv5/bn/beta"
  input: "conv5/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn/beta/read"
  op: "Identity"
  input: "conv5/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/beta"
      }
    }
  }
}
node {
  name: "conv5/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv5/bn/moving_mean"
  input: "conv5/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn/moving_mean/read"
  op: "Identity"
  input: "conv5/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv5/bn/moving_variance"
  input: "conv5/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn/moving_variance/read"
  op: "Identity"
  input: "conv5/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv5/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv5/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv5/convolution"
  input: "conv5/bn/gamma/read"
  input: "conv5/bn/beta/read"
  input: "conv5/bn/Const_4"
  input: "conv5/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn/Shape"
  op: "Shape"
  input: "conv5/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv5/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/bn/strided_slice"
  op: "StridedSlice"
  input: "conv5/bn/Shape"
  input: "conv5/bn/strided_slice/stack"
  input: "conv5/bn/strided_slice/stack_1"
  input: "conv5/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv5/bn/Shape_1"
  op: "Shape"
  input: "conv5/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv5/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv5/bn/Shape_1"
  input: "conv5/bn/strided_slice_1/stack"
  input: "conv5/bn/strided_slice_1/stack_1"
  input: "conv5/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv5/bn/Shape_2"
  op: "Shape"
  input: "conv5/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv5/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv5/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv5/bn/Shape_2"
  input: "conv5/bn/strided_slice_2/stack"
  input: "conv5/bn/strided_slice_2/stack_1"
  input: "conv5/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv5/bn/Rank/packed"
  op: "Pack"
  input: "conv5/bn/strided_slice"
  input: "conv5/bn/strided_slice_1"
  input: "conv5/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv5/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv5/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/bn/range"
  op: "Range"
  input: "conv5/bn/range/start"
  input: "conv5/bn/Rank"
  input: "conv5/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/bn/Prod/input"
  op: "Pack"
  input: "conv5/bn/strided_slice"
  input: "conv5/bn/strided_slice_1"
  input: "conv5/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv5/bn/Prod"
  op: "Prod"
  input: "conv5/bn/Prod/input"
  input: "conv5/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/bn/Cast"
  op: "Cast"
  input: "conv5/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv5/bn/sub"
  op: "Sub"
  input: "conv5/bn/Cast"
  input: "conv5/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/bn/truediv"
  op: "RealDiv"
  input: "conv5/bn/Cast"
  input: "conv5/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/bn/mul"
  op: "Mul"
  input: "conv5/bn/FusedBatchNorm:2"
  input: "conv5/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv5/bn/moving_mean/biased"
  input: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv5/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv5/bn/moving_mean/local_step"
  input: "conv5/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv5/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/sub"
  op: "Sub"
  input: "conv5/bn/moving_mean/biased/read"
  input: "conv5/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/mul"
  op: "Mul"
  input: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/sub"
  input: "conv5/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/conv5/bn/moving_mean"
  op: "AssignSub"
  input: "conv5/bn/moving_mean/biased"
  input: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv5/bn/moving_mean/local_step"
  input: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/read"
  op: "Identity"
  input: "conv5/bn/moving_mean/biased"
  input: "^conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/AssignAdd"
  input: "^conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/conv5/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/AssignAdd"
  input: "^conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/conv5/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/sub_1/x"
  input: "conv5/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv5/bn/moving_mean/local_step"
  input: "^conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/AssignAdd"
  input: "^conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/conv5/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/sub_1"
  input: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/AssignAdd"
  input: "^conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/conv5/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/sub_2/x"
  input: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/read"
  input: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv5/bn/moving_mean/read"
  input: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv5/bn/moving_mean"
  input: "conv5/bn/AssignMovingAvg/conv5/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv5/bn/moving_variance/biased"
  input: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv5/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv5/bn/moving_variance/local_step"
  input: "conv5/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv5/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/sub"
  op: "Sub"
  input: "conv5/bn/moving_variance/biased/read"
  input: "conv5/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/mul"
  op: "Mul"
  input: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/sub"
  input: "conv5/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/conv5/bn/moving_variance"
  op: "AssignSub"
  input: "conv5/bn/moving_variance/biased"
  input: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv5/bn/moving_variance/local_step"
  input: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/read"
  op: "Identity"
  input: "conv5/bn/moving_variance/biased"
  input: "^conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/AssignAdd"
  input: "^conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/conv5/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/AssignAdd"
  input: "^conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/conv5/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/sub_1/x"
  input: "conv5/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv5/bn/moving_variance/local_step"
  input: "^conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/AssignAdd"
  input: "^conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/conv5/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/sub_1"
  input: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/AssignAdd"
  input: "^conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/conv5/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/sub_2/x"
  input: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/read"
  input: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv5/bn/moving_variance/read"
  input: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv5/bn/moving_variance"
  input: "conv5/bn/AssignMovingAvg_1/conv5/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv5/convolution"
  input: "conv5/bn/gamma/read"
  input: "conv5/bn/beta/read"
  input: "conv5/bn/moving_mean/read"
  input: "conv5/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_11/Relu"
  op: "Relu"
  input: "conv5/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4_padding/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_padding/Pad"
  op: "Pad"
  input: "activation_11/Relu"
  input: "conv4_padding/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/dw/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv6/dw/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "conv6/dw/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "conv6/dw/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv6/dw/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5002448
    }
  }
}
node {
  name: "conv6/dw/random_uniform/sub"
  op: "Sub"
  input: "conv6/dw/random_uniform/max"
  input: "conv6/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/dw/random_uniform/mul"
  op: "Mul"
  input: "conv6/dw/random_uniform/RandomUniform"
  input: "conv6/dw/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/dw/random_uniform"
  op: "Add"
  input: "conv6/dw/random_uniform/mul"
  input: "conv6/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/dw/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv6/dw/depthwise_kernel"
  input: "conv6/dw/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/depthwise_kernel/read"
  op: "Identity"
  input: "conv6/dw/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv6/dw/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv6/dw/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv6/dw/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv4_padding/Pad"
  input: "conv6/dw/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv6/dw/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/bn/gamma/Assign"
  op: "Assign"
  input: "conv6/dw/bn/gamma"
  input: "conv6/dw/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn/gamma/read"
  op: "Identity"
  input: "conv6/dw/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/gamma"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/bn/beta/Assign"
  op: "Assign"
  input: "conv6/dw/bn/beta"
  input: "conv6/dw/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn/beta/read"
  op: "Identity"
  input: "conv6/dw/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/beta"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv6/dw/bn/moving_mean"
  input: "conv6/dw/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv6/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv6/dw/bn/moving_variance"
  input: "conv6/dw/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv6/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv6/dw/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv6/dw/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv6/dw/depthwise"
  input: "conv6/dw/bn/gamma/read"
  input: "conv6/dw/bn/beta/read"
  input: "conv6/dw/bn/Const_4"
  input: "conv6/dw/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn/Shape"
  op: "Shape"
  input: "conv6/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/dw/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv6/dw/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/dw/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/dw/bn/strided_slice"
  op: "StridedSlice"
  input: "conv6/dw/bn/Shape"
  input: "conv6/dw/bn/strided_slice/stack"
  input: "conv6/dw/bn/strided_slice/stack_1"
  input: "conv6/dw/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6/dw/bn/Shape_1"
  op: "Shape"
  input: "conv6/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/dw/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/dw/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv6/dw/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/dw/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv6/dw/bn/Shape_1"
  input: "conv6/dw/bn/strided_slice_1/stack"
  input: "conv6/dw/bn/strided_slice_1/stack_1"
  input: "conv6/dw/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6/dw/bn/Shape_2"
  op: "Shape"
  input: "conv6/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/dw/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv6/dw/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv6/dw/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/dw/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv6/dw/bn/Shape_2"
  input: "conv6/dw/bn/strided_slice_2/stack"
  input: "conv6/dw/bn/strided_slice_2/stack_1"
  input: "conv6/dw/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6/dw/bn/Rank/packed"
  op: "Pack"
  input: "conv6/dw/bn/strided_slice"
  input: "conv6/dw/bn/strided_slice_1"
  input: "conv6/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv6/dw/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/dw/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv6/dw/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/dw/bn/range"
  op: "Range"
  input: "conv6/dw/bn/range/start"
  input: "conv6/dw/bn/Rank"
  input: "conv6/dw/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/dw/bn/Prod/input"
  op: "Pack"
  input: "conv6/dw/bn/strided_slice"
  input: "conv6/dw/bn/strided_slice_1"
  input: "conv6/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv6/dw/bn/Prod"
  op: "Prod"
  input: "conv6/dw/bn/Prod/input"
  input: "conv6/dw/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/dw/bn/Cast"
  op: "Cast"
  input: "conv6/dw/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/dw/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv6/dw/bn/sub"
  op: "Sub"
  input: "conv6/dw/bn/Cast"
  input: "conv6/dw/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/dw/bn/truediv"
  op: "RealDiv"
  input: "conv6/dw/bn/Cast"
  input: "conv6/dw/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/dw/bn/mul"
  op: "Mul"
  input: "conv6/dw/bn/FusedBatchNorm:2"
  input: "conv6/dw/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv6/dw/bn/moving_mean/biased"
  input: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv6/dw/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv6/dw/bn/moving_mean/local_step"
  input: "conv6/dw/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv6/dw/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/sub"
  op: "Sub"
  input: "conv6/dw/bn/moving_mean/biased/read"
  input: "conv6/dw/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/mul"
  op: "Mul"
  input: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/sub"
  input: "conv6/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/conv6/dw/bn/moving_mean"
  op: "AssignSub"
  input: "conv6/dw/bn/moving_mean/biased"
  input: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv6/dw/bn/moving_mean/local_step"
  input: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv6/dw/bn/moving_mean/biased"
  input: "^conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/AssignAdd"
  input: "^conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/conv6/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/AssignAdd"
  input: "^conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/conv6/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/sub_1/x"
  input: "conv6/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv6/dw/bn/moving_mean/local_step"
  input: "^conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/AssignAdd"
  input: "^conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/conv6/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/sub_1"
  input: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/AssignAdd"
  input: "^conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/conv6/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/sub_2/x"
  input: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/read"
  input: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv6/dw/bn/moving_mean/read"
  input: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv6/dw/bn/moving_mean"
  input: "conv6/dw/bn/AssignMovingAvg/conv6/dw/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv6/dw/bn/moving_variance/biased"
  input: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv6/dw/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv6/dw/bn/moving_variance/local_step"
  input: "conv6/dw/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv6/dw/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/sub"
  op: "Sub"
  input: "conv6/dw/bn/moving_variance/biased/read"
  input: "conv6/dw/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/mul"
  op: "Mul"
  input: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/sub"
  input: "conv6/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/conv6/dw/bn/moving_variance"
  op: "AssignSub"
  input: "conv6/dw/bn/moving_variance/biased"
  input: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv6/dw/bn/moving_variance/local_step"
  input: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv6/dw/bn/moving_variance/biased"
  input: "^conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/AssignAdd"
  input: "^conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/conv6/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/AssignAdd"
  input: "^conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/conv6/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/sub_1/x"
  input: "conv6/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv6/dw/bn/moving_variance/local_step"
  input: "^conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/AssignAdd"
  input: "^conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/conv6/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/sub_1"
  input: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/AssignAdd"
  input: "^conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/conv6/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/sub_2/x"
  input: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/read"
  input: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv6/dw/bn/moving_variance/read"
  input: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv6/dw/bn/moving_variance"
  input: "conv6/dw/bn/AssignMovingAvg_1/conv6/dw/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/dw/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv6/dw/depthwise"
  input: "conv6/dw/bn/gamma/read"
  input: "conv6/dw/bn/beta/read"
  input: "conv6/dw/bn/moving_mean/read"
  input: "conv6/dw/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_12/Relu"
  op: "Relu"
  input: "conv6/dw/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv6/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "conv6/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "conv6/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv6/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9160346
    }
  }
}
node {
  name: "conv6/random_uniform/sub"
  op: "Sub"
  input: "conv6/random_uniform/max"
  input: "conv6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/random_uniform/mul"
  op: "Mul"
  input: "conv6/random_uniform/RandomUniform"
  input: "conv6/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/random_uniform"
  op: "Add"
  input: "conv6/random_uniform/mul"
  input: "conv6/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/kernel/Assign"
  op: "Assign"
  input: "conv6/kernel"
  input: "conv6/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/kernel/read"
  op: "Identity"
  input: "conv6/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/kernel"
      }
    }
  }
}
node {
  name: "conv6/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv6/convolution"
  op: "Conv2D"
  input: "activation_12/Relu"
  input: "conv6/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/bn/gamma/Assign"
  op: "Assign"
  input: "conv6/bn/gamma"
  input: "conv6/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn/gamma/read"
  op: "Identity"
  input: "conv6/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/gamma"
      }
    }
  }
}
node {
  name: "conv6/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/bn/beta/Assign"
  op: "Assign"
  input: "conv6/bn/beta"
  input: "conv6/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn/beta/read"
  op: "Identity"
  input: "conv6/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/beta"
      }
    }
  }
}
node {
  name: "conv6/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv6/bn/moving_mean"
  input: "conv6/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn/moving_mean/read"
  op: "Identity"
  input: "conv6/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv6/bn/moving_variance"
  input: "conv6/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn/moving_variance/read"
  op: "Identity"
  input: "conv6/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv6/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv6/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv6/convolution"
  input: "conv6/bn/gamma/read"
  input: "conv6/bn/beta/read"
  input: "conv6/bn/Const_4"
  input: "conv6/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn/Shape"
  op: "Shape"
  input: "conv6/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv6/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/bn/strided_slice"
  op: "StridedSlice"
  input: "conv6/bn/Shape"
  input: "conv6/bn/strided_slice/stack"
  input: "conv6/bn/strided_slice/stack_1"
  input: "conv6/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6/bn/Shape_1"
  op: "Shape"
  input: "conv6/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv6/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv6/bn/Shape_1"
  input: "conv6/bn/strided_slice_1/stack"
  input: "conv6/bn/strided_slice_1/stack_1"
  input: "conv6/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6/bn/Shape_2"
  op: "Shape"
  input: "conv6/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv6/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv6/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv6/bn/Shape_2"
  input: "conv6/bn/strided_slice_2/stack"
  input: "conv6/bn/strided_slice_2/stack_1"
  input: "conv6/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6/bn/Rank/packed"
  op: "Pack"
  input: "conv6/bn/strided_slice"
  input: "conv6/bn/strided_slice_1"
  input: "conv6/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv6/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv6/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/bn/range"
  op: "Range"
  input: "conv6/bn/range/start"
  input: "conv6/bn/Rank"
  input: "conv6/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/bn/Prod/input"
  op: "Pack"
  input: "conv6/bn/strided_slice"
  input: "conv6/bn/strided_slice_1"
  input: "conv6/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv6/bn/Prod"
  op: "Prod"
  input: "conv6/bn/Prod/input"
  input: "conv6/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/bn/Cast"
  op: "Cast"
  input: "conv6/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv6/bn/sub"
  op: "Sub"
  input: "conv6/bn/Cast"
  input: "conv6/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/bn/truediv"
  op: "RealDiv"
  input: "conv6/bn/Cast"
  input: "conv6/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/bn/mul"
  op: "Mul"
  input: "conv6/bn/FusedBatchNorm:2"
  input: "conv6/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv6/bn/moving_mean/biased"
  input: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv6/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv6/bn/moving_mean/local_step"
  input: "conv6/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv6/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/sub"
  op: "Sub"
  input: "conv6/bn/moving_mean/biased/read"
  input: "conv6/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/mul"
  op: "Mul"
  input: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/sub"
  input: "conv6/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/conv6/bn/moving_mean"
  op: "AssignSub"
  input: "conv6/bn/moving_mean/biased"
  input: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv6/bn/moving_mean/local_step"
  input: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/read"
  op: "Identity"
  input: "conv6/bn/moving_mean/biased"
  input: "^conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/AssignAdd"
  input: "^conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/conv6/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/AssignAdd"
  input: "^conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/conv6/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/sub_1/x"
  input: "conv6/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv6/bn/moving_mean/local_step"
  input: "^conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/AssignAdd"
  input: "^conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/conv6/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/sub_1"
  input: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/AssignAdd"
  input: "^conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/conv6/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/sub_2/x"
  input: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/read"
  input: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv6/bn/moving_mean/read"
  input: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv6/bn/moving_mean"
  input: "conv6/bn/AssignMovingAvg/conv6/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv6/bn/moving_variance/biased"
  input: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv6/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv6/bn/moving_variance/local_step"
  input: "conv6/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv6/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/sub"
  op: "Sub"
  input: "conv6/bn/moving_variance/biased/read"
  input: "conv6/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/mul"
  op: "Mul"
  input: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/sub"
  input: "conv6/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/conv6/bn/moving_variance"
  op: "AssignSub"
  input: "conv6/bn/moving_variance/biased"
  input: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv6/bn/moving_variance/local_step"
  input: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/read"
  op: "Identity"
  input: "conv6/bn/moving_variance/biased"
  input: "^conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/AssignAdd"
  input: "^conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/conv6/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/AssignAdd"
  input: "^conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/conv6/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/sub_1/x"
  input: "conv6/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv6/bn/moving_variance/local_step"
  input: "^conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/AssignAdd"
  input: "^conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/conv6/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/sub_1"
  input: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/AssignAdd"
  input: "^conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/conv6/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/sub_2/x"
  input: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/read"
  input: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv6/bn/moving_variance/read"
  input: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv6/bn/moving_variance"
  input: "conv6/bn/AssignMovingAvg_1/conv6/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv6/convolution"
  input: "conv6/bn/gamma/read"
  input: "conv6/bn/beta/read"
  input: "conv6/bn/moving_mean/read"
  input: "conv6/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_13/Relu"
  op: "Relu"
  input: "conv6/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/dw/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv7/dw/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv7/dw/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv7/dw/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv7/dw/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2147075
    }
  }
}
node {
  name: "conv7/dw/random_uniform/sub"
  op: "Sub"
  input: "conv7/dw/random_uniform/max"
  input: "conv7/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/dw/random_uniform/mul"
  op: "Mul"
  input: "conv7/dw/random_uniform/RandomUniform"
  input: "conv7/dw/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/dw/random_uniform"
  op: "Add"
  input: "conv7/dw/random_uniform/mul"
  input: "conv7/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/dw/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv7/dw/depthwise_kernel"
  input: "conv7/dw/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/depthwise_kernel/read"
  op: "Identity"
  input: "conv7/dw/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv7/dw/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv7/dw/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv7/dw/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_13/Relu"
  input: "conv7/dw/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv7/dw/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/bn/gamma/Assign"
  op: "Assign"
  input: "conv7/dw/bn/gamma"
  input: "conv7/dw/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn/gamma/read"
  op: "Identity"
  input: "conv7/dw/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/gamma"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/bn/beta/Assign"
  op: "Assign"
  input: "conv7/dw/bn/beta"
  input: "conv7/dw/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn/beta/read"
  op: "Identity"
  input: "conv7/dw/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/beta"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv7/dw/bn/moving_mean"
  input: "conv7/dw/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv7/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv7/dw/bn/moving_variance"
  input: "conv7/dw/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv7/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv7/dw/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv7/dw/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv7/dw/depthwise"
  input: "conv7/dw/bn/gamma/read"
  input: "conv7/dw/bn/beta/read"
  input: "conv7/dw/bn/Const_4"
  input: "conv7/dw/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn/Shape"
  op: "Shape"
  input: "conv7/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/dw/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv7/dw/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/dw/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/dw/bn/strided_slice"
  op: "StridedSlice"
  input: "conv7/dw/bn/Shape"
  input: "conv7/dw/bn/strided_slice/stack"
  input: "conv7/dw/bn/strided_slice/stack_1"
  input: "conv7/dw/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7/dw/bn/Shape_1"
  op: "Shape"
  input: "conv7/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/dw/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/dw/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv7/dw/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/dw/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv7/dw/bn/Shape_1"
  input: "conv7/dw/bn/strided_slice_1/stack"
  input: "conv7/dw/bn/strided_slice_1/stack_1"
  input: "conv7/dw/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7/dw/bn/Shape_2"
  op: "Shape"
  input: "conv7/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/dw/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv7/dw/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv7/dw/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/dw/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv7/dw/bn/Shape_2"
  input: "conv7/dw/bn/strided_slice_2/stack"
  input: "conv7/dw/bn/strided_slice_2/stack_1"
  input: "conv7/dw/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7/dw/bn/Rank/packed"
  op: "Pack"
  input: "conv7/dw/bn/strided_slice"
  input: "conv7/dw/bn/strided_slice_1"
  input: "conv7/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv7/dw/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/dw/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv7/dw/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/dw/bn/range"
  op: "Range"
  input: "conv7/dw/bn/range/start"
  input: "conv7/dw/bn/Rank"
  input: "conv7/dw/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/dw/bn/Prod/input"
  op: "Pack"
  input: "conv7/dw/bn/strided_slice"
  input: "conv7/dw/bn/strided_slice_1"
  input: "conv7/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv7/dw/bn/Prod"
  op: "Prod"
  input: "conv7/dw/bn/Prod/input"
  input: "conv7/dw/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/dw/bn/Cast"
  op: "Cast"
  input: "conv7/dw/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/dw/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv7/dw/bn/sub"
  op: "Sub"
  input: "conv7/dw/bn/Cast"
  input: "conv7/dw/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/dw/bn/truediv"
  op: "RealDiv"
  input: "conv7/dw/bn/Cast"
  input: "conv7/dw/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/dw/bn/mul"
  op: "Mul"
  input: "conv7/dw/bn/FusedBatchNorm:2"
  input: "conv7/dw/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv7/dw/bn/moving_mean/biased"
  input: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv7/dw/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv7/dw/bn/moving_mean/local_step"
  input: "conv7/dw/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv7/dw/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/sub"
  op: "Sub"
  input: "conv7/dw/bn/moving_mean/biased/read"
  input: "conv7/dw/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/mul"
  op: "Mul"
  input: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/sub"
  input: "conv7/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/conv7/dw/bn/moving_mean"
  op: "AssignSub"
  input: "conv7/dw/bn/moving_mean/biased"
  input: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv7/dw/bn/moving_mean/local_step"
  input: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv7/dw/bn/moving_mean/biased"
  input: "^conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/AssignAdd"
  input: "^conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/conv7/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/AssignAdd"
  input: "^conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/conv7/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/sub_1/x"
  input: "conv7/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv7/dw/bn/moving_mean/local_step"
  input: "^conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/AssignAdd"
  input: "^conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/conv7/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/sub_1"
  input: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/AssignAdd"
  input: "^conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/conv7/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/sub_2/x"
  input: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/read"
  input: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv7/dw/bn/moving_mean/read"
  input: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv7/dw/bn/moving_mean"
  input: "conv7/dw/bn/AssignMovingAvg/conv7/dw/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv7/dw/bn/moving_variance/biased"
  input: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv7/dw/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv7/dw/bn/moving_variance/local_step"
  input: "conv7/dw/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv7/dw/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/sub"
  op: "Sub"
  input: "conv7/dw/bn/moving_variance/biased/read"
  input: "conv7/dw/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/mul"
  op: "Mul"
  input: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/sub"
  input: "conv7/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/conv7/dw/bn/moving_variance"
  op: "AssignSub"
  input: "conv7/dw/bn/moving_variance/biased"
  input: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv7/dw/bn/moving_variance/local_step"
  input: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv7/dw/bn/moving_variance/biased"
  input: "^conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/AssignAdd"
  input: "^conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/conv7/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/AssignAdd"
  input: "^conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/conv7/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/sub_1/x"
  input: "conv7/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv7/dw/bn/moving_variance/local_step"
  input: "^conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/AssignAdd"
  input: "^conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/conv7/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/sub_1"
  input: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/AssignAdd"
  input: "^conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/conv7/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/sub_2/x"
  input: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/read"
  input: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv7/dw/bn/moving_variance/read"
  input: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv7/dw/bn/moving_variance"
  input: "conv7/dw/bn/AssignMovingAvg_1/conv7/dw/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/dw/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv7/dw/depthwise"
  input: "conv7/dw/bn/gamma/read"
  input: "conv7/dw/bn/beta/read"
  input: "conv7/dw/bn/moving_mean/read"
  input: "conv7/dw/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_14/Relu"
  op: "Relu"
  input: "conv7/dw/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv7/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv7/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv7/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv7/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 47722
    }
  }
}
node {
  name: "conv7/random_uniform/sub"
  op: "Sub"
  input: "conv7/random_uniform/max"
  input: "conv7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/random_uniform/mul"
  op: "Mul"
  input: "conv7/random_uniform/RandomUniform"
  input: "conv7/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/random_uniform"
  op: "Add"
  input: "conv7/random_uniform/mul"
  input: "conv7/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/kernel/Assign"
  op: "Assign"
  input: "conv7/kernel"
  input: "conv7/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/kernel/read"
  op: "Identity"
  input: "conv7/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/kernel"
      }
    }
  }
}
node {
  name: "conv7/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv7/convolution"
  op: "Conv2D"
  input: "activation_14/Relu"
  input: "conv7/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/bn/gamma/Assign"
  op: "Assign"
  input: "conv7/bn/gamma"
  input: "conv7/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn/gamma/read"
  op: "Identity"
  input: "conv7/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/gamma"
      }
    }
  }
}
node {
  name: "conv7/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/bn/beta/Assign"
  op: "Assign"
  input: "conv7/bn/beta"
  input: "conv7/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn/beta/read"
  op: "Identity"
  input: "conv7/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/beta"
      }
    }
  }
}
node {
  name: "conv7/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv7/bn/moving_mean"
  input: "conv7/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn/moving_mean/read"
  op: "Identity"
  input: "conv7/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv7/bn/moving_variance"
  input: "conv7/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn/moving_variance/read"
  op: "Identity"
  input: "conv7/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv7/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv7/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv7/convolution"
  input: "conv7/bn/gamma/read"
  input: "conv7/bn/beta/read"
  input: "conv7/bn/Const_4"
  input: "conv7/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn/Shape"
  op: "Shape"
  input: "conv7/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv7/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/bn/strided_slice"
  op: "StridedSlice"
  input: "conv7/bn/Shape"
  input: "conv7/bn/strided_slice/stack"
  input: "conv7/bn/strided_slice/stack_1"
  input: "conv7/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7/bn/Shape_1"
  op: "Shape"
  input: "conv7/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv7/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv7/bn/Shape_1"
  input: "conv7/bn/strided_slice_1/stack"
  input: "conv7/bn/strided_slice_1/stack_1"
  input: "conv7/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7/bn/Shape_2"
  op: "Shape"
  input: "conv7/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv7/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv7/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv7/bn/Shape_2"
  input: "conv7/bn/strided_slice_2/stack"
  input: "conv7/bn/strided_slice_2/stack_1"
  input: "conv7/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7/bn/Rank/packed"
  op: "Pack"
  input: "conv7/bn/strided_slice"
  input: "conv7/bn/strided_slice_1"
  input: "conv7/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv7/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv7/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/bn/range"
  op: "Range"
  input: "conv7/bn/range/start"
  input: "conv7/bn/Rank"
  input: "conv7/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/bn/Prod/input"
  op: "Pack"
  input: "conv7/bn/strided_slice"
  input: "conv7/bn/strided_slice_1"
  input: "conv7/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv7/bn/Prod"
  op: "Prod"
  input: "conv7/bn/Prod/input"
  input: "conv7/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/bn/Cast"
  op: "Cast"
  input: "conv7/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv7/bn/sub"
  op: "Sub"
  input: "conv7/bn/Cast"
  input: "conv7/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/bn/truediv"
  op: "RealDiv"
  input: "conv7/bn/Cast"
  input: "conv7/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/bn/mul"
  op: "Mul"
  input: "conv7/bn/FusedBatchNorm:2"
  input: "conv7/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv7/bn/moving_mean/biased"
  input: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv7/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv7/bn/moving_mean/local_step"
  input: "conv7/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv7/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/sub"
  op: "Sub"
  input: "conv7/bn/moving_mean/biased/read"
  input: "conv7/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/mul"
  op: "Mul"
  input: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/sub"
  input: "conv7/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/conv7/bn/moving_mean"
  op: "AssignSub"
  input: "conv7/bn/moving_mean/biased"
  input: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv7/bn/moving_mean/local_step"
  input: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/read"
  op: "Identity"
  input: "conv7/bn/moving_mean/biased"
  input: "^conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/AssignAdd"
  input: "^conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/conv7/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/AssignAdd"
  input: "^conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/conv7/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/sub_1/x"
  input: "conv7/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv7/bn/moving_mean/local_step"
  input: "^conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/AssignAdd"
  input: "^conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/conv7/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/sub_1"
  input: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/AssignAdd"
  input: "^conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/conv7/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/sub_2/x"
  input: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/read"
  input: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv7/bn/moving_mean/read"
  input: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv7/bn/moving_mean"
  input: "conv7/bn/AssignMovingAvg/conv7/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv7/bn/moving_variance/biased"
  input: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv7/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv7/bn/moving_variance/local_step"
  input: "conv7/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv7/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/sub"
  op: "Sub"
  input: "conv7/bn/moving_variance/biased/read"
  input: "conv7/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/mul"
  op: "Mul"
  input: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/sub"
  input: "conv7/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/conv7/bn/moving_variance"
  op: "AssignSub"
  input: "conv7/bn/moving_variance/biased"
  input: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv7/bn/moving_variance/local_step"
  input: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/read"
  op: "Identity"
  input: "conv7/bn/moving_variance/biased"
  input: "^conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/AssignAdd"
  input: "^conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/conv7/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/AssignAdd"
  input: "^conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/conv7/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/sub_1/x"
  input: "conv7/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv7/bn/moving_variance/local_step"
  input: "^conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/AssignAdd"
  input: "^conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/conv7/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/sub_1"
  input: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/AssignAdd"
  input: "^conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/conv7/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/sub_2/x"
  input: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/read"
  input: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv7/bn/moving_variance/read"
  input: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv7/bn/moving_variance"
  input: "conv7/bn/AssignMovingAvg_1/conv7/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv7/convolution"
  input: "conv7/bn/gamma/read"
  input: "conv7/bn/beta/read"
  input: "conv7/bn/moving_mean/read"
  input: "conv7/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_15/Relu"
  op: "Relu"
  input: "conv7/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/dw/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv8/dw/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv8/dw/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv8/dw/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv8/dw/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1164462
    }
  }
}
node {
  name: "conv8/dw/random_uniform/sub"
  op: "Sub"
  input: "conv8/dw/random_uniform/max"
  input: "conv8/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/dw/random_uniform/mul"
  op: "Mul"
  input: "conv8/dw/random_uniform/RandomUniform"
  input: "conv8/dw/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/dw/random_uniform"
  op: "Add"
  input: "conv8/dw/random_uniform/mul"
  input: "conv8/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/dw/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv8/dw/depthwise_kernel"
  input: "conv8/dw/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/depthwise_kernel/read"
  op: "Identity"
  input: "conv8/dw/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv8/dw/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv8/dw/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv8/dw/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_15/Relu"
  input: "conv8/dw/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv8/dw/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/bn/gamma/Assign"
  op: "Assign"
  input: "conv8/dw/bn/gamma"
  input: "conv8/dw/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn/gamma/read"
  op: "Identity"
  input: "conv8/dw/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/gamma"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/bn/beta/Assign"
  op: "Assign"
  input: "conv8/dw/bn/beta"
  input: "conv8/dw/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn/beta/read"
  op: "Identity"
  input: "conv8/dw/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/beta"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv8/dw/bn/moving_mean"
  input: "conv8/dw/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv8/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv8/dw/bn/moving_variance"
  input: "conv8/dw/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv8/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv8/dw/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv8/dw/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv8/dw/depthwise"
  input: "conv8/dw/bn/gamma/read"
  input: "conv8/dw/bn/beta/read"
  input: "conv8/dw/bn/Const_4"
  input: "conv8/dw/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn/Shape"
  op: "Shape"
  input: "conv8/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/dw/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv8/dw/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/dw/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/dw/bn/strided_slice"
  op: "StridedSlice"
  input: "conv8/dw/bn/Shape"
  input: "conv8/dw/bn/strided_slice/stack"
  input: "conv8/dw/bn/strided_slice/stack_1"
  input: "conv8/dw/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8/dw/bn/Shape_1"
  op: "Shape"
  input: "conv8/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/dw/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/dw/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv8/dw/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/dw/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv8/dw/bn/Shape_1"
  input: "conv8/dw/bn/strided_slice_1/stack"
  input: "conv8/dw/bn/strided_slice_1/stack_1"
  input: "conv8/dw/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8/dw/bn/Shape_2"
  op: "Shape"
  input: "conv8/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/dw/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv8/dw/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv8/dw/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/dw/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv8/dw/bn/Shape_2"
  input: "conv8/dw/bn/strided_slice_2/stack"
  input: "conv8/dw/bn/strided_slice_2/stack_1"
  input: "conv8/dw/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8/dw/bn/Rank/packed"
  op: "Pack"
  input: "conv8/dw/bn/strided_slice"
  input: "conv8/dw/bn/strided_slice_1"
  input: "conv8/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8/dw/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/dw/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv8/dw/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/dw/bn/range"
  op: "Range"
  input: "conv8/dw/bn/range/start"
  input: "conv8/dw/bn/Rank"
  input: "conv8/dw/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/dw/bn/Prod/input"
  op: "Pack"
  input: "conv8/dw/bn/strided_slice"
  input: "conv8/dw/bn/strided_slice_1"
  input: "conv8/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8/dw/bn/Prod"
  op: "Prod"
  input: "conv8/dw/bn/Prod/input"
  input: "conv8/dw/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/dw/bn/Cast"
  op: "Cast"
  input: "conv8/dw/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/dw/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv8/dw/bn/sub"
  op: "Sub"
  input: "conv8/dw/bn/Cast"
  input: "conv8/dw/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/dw/bn/truediv"
  op: "RealDiv"
  input: "conv8/dw/bn/Cast"
  input: "conv8/dw/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/dw/bn/mul"
  op: "Mul"
  input: "conv8/dw/bn/FusedBatchNorm:2"
  input: "conv8/dw/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv8/dw/bn/moving_mean/biased"
  input: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv8/dw/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv8/dw/bn/moving_mean/local_step"
  input: "conv8/dw/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv8/dw/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/sub"
  op: "Sub"
  input: "conv8/dw/bn/moving_mean/biased/read"
  input: "conv8/dw/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/mul"
  op: "Mul"
  input: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/sub"
  input: "conv8/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/conv8/dw/bn/moving_mean"
  op: "AssignSub"
  input: "conv8/dw/bn/moving_mean/biased"
  input: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv8/dw/bn/moving_mean/local_step"
  input: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv8/dw/bn/moving_mean/biased"
  input: "^conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/AssignAdd"
  input: "^conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/conv8/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/AssignAdd"
  input: "^conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/conv8/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/sub_1/x"
  input: "conv8/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv8/dw/bn/moving_mean/local_step"
  input: "^conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/AssignAdd"
  input: "^conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/conv8/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/sub_1"
  input: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/AssignAdd"
  input: "^conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/conv8/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/sub_2/x"
  input: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/read"
  input: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv8/dw/bn/moving_mean/read"
  input: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv8/dw/bn/moving_mean"
  input: "conv8/dw/bn/AssignMovingAvg/conv8/dw/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv8/dw/bn/moving_variance/biased"
  input: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv8/dw/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv8/dw/bn/moving_variance/local_step"
  input: "conv8/dw/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv8/dw/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/sub"
  op: "Sub"
  input: "conv8/dw/bn/moving_variance/biased/read"
  input: "conv8/dw/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/mul"
  op: "Mul"
  input: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/sub"
  input: "conv8/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/conv8/dw/bn/moving_variance"
  op: "AssignSub"
  input: "conv8/dw/bn/moving_variance/biased"
  input: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv8/dw/bn/moving_variance/local_step"
  input: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv8/dw/bn/moving_variance/biased"
  input: "^conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/AssignAdd"
  input: "^conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/conv8/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/AssignAdd"
  input: "^conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/conv8/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/sub_1/x"
  input: "conv8/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv8/dw/bn/moving_variance/local_step"
  input: "^conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/AssignAdd"
  input: "^conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/conv8/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/sub_1"
  input: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/AssignAdd"
  input: "^conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/conv8/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/sub_2/x"
  input: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/read"
  input: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv8/dw/bn/moving_variance/read"
  input: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv8/dw/bn/moving_variance"
  input: "conv8/dw/bn/AssignMovingAvg_1/conv8/dw/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/dw/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv8/dw/depthwise"
  input: "conv8/dw/bn/gamma/read"
  input: "conv8/dw/bn/beta/read"
  input: "conv8/dw/bn/moving_mean/read"
  input: "conv8/dw/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_16/Relu"
  op: "Relu"
  input: "conv8/dw/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv8/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv8/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv8/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv8/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5975389
    }
  }
}
node {
  name: "conv8/random_uniform/sub"
  op: "Sub"
  input: "conv8/random_uniform/max"
  input: "conv8/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/random_uniform/mul"
  op: "Mul"
  input: "conv8/random_uniform/RandomUniform"
  input: "conv8/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/random_uniform"
  op: "Add"
  input: "conv8/random_uniform/mul"
  input: "conv8/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/kernel/Assign"
  op: "Assign"
  input: "conv8/kernel"
  input: "conv8/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/kernel/read"
  op: "Identity"
  input: "conv8/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/kernel"
      }
    }
  }
}
node {
  name: "conv8/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv8/convolution"
  op: "Conv2D"
  input: "activation_16/Relu"
  input: "conv8/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/bn/gamma/Assign"
  op: "Assign"
  input: "conv8/bn/gamma"
  input: "conv8/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn/gamma/read"
  op: "Identity"
  input: "conv8/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/gamma"
      }
    }
  }
}
node {
  name: "conv8/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/bn/beta/Assign"
  op: "Assign"
  input: "conv8/bn/beta"
  input: "conv8/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn/beta/read"
  op: "Identity"
  input: "conv8/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/beta"
      }
    }
  }
}
node {
  name: "conv8/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv8/bn/moving_mean"
  input: "conv8/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn/moving_mean/read"
  op: "Identity"
  input: "conv8/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv8/bn/moving_variance"
  input: "conv8/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn/moving_variance/read"
  op: "Identity"
  input: "conv8/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv8/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv8/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv8/convolution"
  input: "conv8/bn/gamma/read"
  input: "conv8/bn/beta/read"
  input: "conv8/bn/Const_4"
  input: "conv8/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn/Shape"
  op: "Shape"
  input: "conv8/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv8/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/bn/strided_slice"
  op: "StridedSlice"
  input: "conv8/bn/Shape"
  input: "conv8/bn/strided_slice/stack"
  input: "conv8/bn/strided_slice/stack_1"
  input: "conv8/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8/bn/Shape_1"
  op: "Shape"
  input: "conv8/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv8/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv8/bn/Shape_1"
  input: "conv8/bn/strided_slice_1/stack"
  input: "conv8/bn/strided_slice_1/stack_1"
  input: "conv8/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8/bn/Shape_2"
  op: "Shape"
  input: "conv8/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv8/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv8/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv8/bn/Shape_2"
  input: "conv8/bn/strided_slice_2/stack"
  input: "conv8/bn/strided_slice_2/stack_1"
  input: "conv8/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8/bn/Rank/packed"
  op: "Pack"
  input: "conv8/bn/strided_slice"
  input: "conv8/bn/strided_slice_1"
  input: "conv8/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv8/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/bn/range"
  op: "Range"
  input: "conv8/bn/range/start"
  input: "conv8/bn/Rank"
  input: "conv8/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/bn/Prod/input"
  op: "Pack"
  input: "conv8/bn/strided_slice"
  input: "conv8/bn/strided_slice_1"
  input: "conv8/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8/bn/Prod"
  op: "Prod"
  input: "conv8/bn/Prod/input"
  input: "conv8/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/bn/Cast"
  op: "Cast"
  input: "conv8/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv8/bn/sub"
  op: "Sub"
  input: "conv8/bn/Cast"
  input: "conv8/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/bn/truediv"
  op: "RealDiv"
  input: "conv8/bn/Cast"
  input: "conv8/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/bn/mul"
  op: "Mul"
  input: "conv8/bn/FusedBatchNorm:2"
  input: "conv8/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv8/bn/moving_mean/biased"
  input: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv8/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv8/bn/moving_mean/local_step"
  input: "conv8/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv8/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/sub"
  op: "Sub"
  input: "conv8/bn/moving_mean/biased/read"
  input: "conv8/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/mul"
  op: "Mul"
  input: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/sub"
  input: "conv8/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/conv8/bn/moving_mean"
  op: "AssignSub"
  input: "conv8/bn/moving_mean/biased"
  input: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv8/bn/moving_mean/local_step"
  input: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/read"
  op: "Identity"
  input: "conv8/bn/moving_mean/biased"
  input: "^conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/AssignAdd"
  input: "^conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/conv8/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/AssignAdd"
  input: "^conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/conv8/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/sub_1/x"
  input: "conv8/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv8/bn/moving_mean/local_step"
  input: "^conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/AssignAdd"
  input: "^conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/conv8/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/sub_1"
  input: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/AssignAdd"
  input: "^conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/conv8/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/sub_2/x"
  input: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/read"
  input: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv8/bn/moving_mean/read"
  input: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv8/bn/moving_mean"
  input: "conv8/bn/AssignMovingAvg/conv8/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv8/bn/moving_variance/biased"
  input: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv8/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv8/bn/moving_variance/local_step"
  input: "conv8/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv8/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/sub"
  op: "Sub"
  input: "conv8/bn/moving_variance/biased/read"
  input: "conv8/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/mul"
  op: "Mul"
  input: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/sub"
  input: "conv8/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/conv8/bn/moving_variance"
  op: "AssignSub"
  input: "conv8/bn/moving_variance/biased"
  input: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv8/bn/moving_variance/local_step"
  input: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/read"
  op: "Identity"
  input: "conv8/bn/moving_variance/biased"
  input: "^conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/AssignAdd"
  input: "^conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/conv8/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/AssignAdd"
  input: "^conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/conv8/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/sub_1/x"
  input: "conv8/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv8/bn/moving_variance/local_step"
  input: "^conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/AssignAdd"
  input: "^conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/conv8/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/sub_1"
  input: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/AssignAdd"
  input: "^conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/conv8/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/sub_2/x"
  input: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/read"
  input: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv8/bn/moving_variance/read"
  input: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv8/bn/moving_variance"
  input: "conv8/bn/AssignMovingAvg_1/conv8/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv8/convolution"
  input: "conv8/bn/gamma/read"
  input: "conv8/bn/beta/read"
  input: "conv8/bn/moving_mean/read"
  input: "conv8/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_17/Relu"
  op: "Relu"
  input: "conv8/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/dw/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv9/dw/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv9/dw/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv9/dw/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv9/dw/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2264952
    }
  }
}
node {
  name: "conv9/dw/random_uniform/sub"
  op: "Sub"
  input: "conv9/dw/random_uniform/max"
  input: "conv9/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/dw/random_uniform/mul"
  op: "Mul"
  input: "conv9/dw/random_uniform/RandomUniform"
  input: "conv9/dw/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/dw/random_uniform"
  op: "Add"
  input: "conv9/dw/random_uniform/mul"
  input: "conv9/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/dw/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv9/dw/depthwise_kernel"
  input: "conv9/dw/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/depthwise_kernel/read"
  op: "Identity"
  input: "conv9/dw/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv9/dw/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv9/dw/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv9/dw/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_17/Relu"
  input: "conv9/dw/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv9/dw/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/bn/gamma/Assign"
  op: "Assign"
  input: "conv9/dw/bn/gamma"
  input: "conv9/dw/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn/gamma/read"
  op: "Identity"
  input: "conv9/dw/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/gamma"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/bn/beta/Assign"
  op: "Assign"
  input: "conv9/dw/bn/beta"
  input: "conv9/dw/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn/beta/read"
  op: "Identity"
  input: "conv9/dw/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/beta"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv9/dw/bn/moving_mean"
  input: "conv9/dw/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv9/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv9/dw/bn/moving_variance"
  input: "conv9/dw/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv9/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv9/dw/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv9/dw/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv9/dw/depthwise"
  input: "conv9/dw/bn/gamma/read"
  input: "conv9/dw/bn/beta/read"
  input: "conv9/dw/bn/Const_4"
  input: "conv9/dw/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn/Shape"
  op: "Shape"
  input: "conv9/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/dw/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv9/dw/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/dw/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/dw/bn/strided_slice"
  op: "StridedSlice"
  input: "conv9/dw/bn/Shape"
  input: "conv9/dw/bn/strided_slice/stack"
  input: "conv9/dw/bn/strided_slice/stack_1"
  input: "conv9/dw/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9/dw/bn/Shape_1"
  op: "Shape"
  input: "conv9/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/dw/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/dw/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv9/dw/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/dw/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv9/dw/bn/Shape_1"
  input: "conv9/dw/bn/strided_slice_1/stack"
  input: "conv9/dw/bn/strided_slice_1/stack_1"
  input: "conv9/dw/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9/dw/bn/Shape_2"
  op: "Shape"
  input: "conv9/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/dw/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv9/dw/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv9/dw/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/dw/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv9/dw/bn/Shape_2"
  input: "conv9/dw/bn/strided_slice_2/stack"
  input: "conv9/dw/bn/strided_slice_2/stack_1"
  input: "conv9/dw/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9/dw/bn/Rank/packed"
  op: "Pack"
  input: "conv9/dw/bn/strided_slice"
  input: "conv9/dw/bn/strided_slice_1"
  input: "conv9/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9/dw/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/dw/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv9/dw/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/dw/bn/range"
  op: "Range"
  input: "conv9/dw/bn/range/start"
  input: "conv9/dw/bn/Rank"
  input: "conv9/dw/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/dw/bn/Prod/input"
  op: "Pack"
  input: "conv9/dw/bn/strided_slice"
  input: "conv9/dw/bn/strided_slice_1"
  input: "conv9/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9/dw/bn/Prod"
  op: "Prod"
  input: "conv9/dw/bn/Prod/input"
  input: "conv9/dw/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/dw/bn/Cast"
  op: "Cast"
  input: "conv9/dw/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/dw/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv9/dw/bn/sub"
  op: "Sub"
  input: "conv9/dw/bn/Cast"
  input: "conv9/dw/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/dw/bn/truediv"
  op: "RealDiv"
  input: "conv9/dw/bn/Cast"
  input: "conv9/dw/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/dw/bn/mul"
  op: "Mul"
  input: "conv9/dw/bn/FusedBatchNorm:2"
  input: "conv9/dw/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv9/dw/bn/moving_mean/biased"
  input: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv9/dw/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv9/dw/bn/moving_mean/local_step"
  input: "conv9/dw/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv9/dw/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/sub"
  op: "Sub"
  input: "conv9/dw/bn/moving_mean/biased/read"
  input: "conv9/dw/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/mul"
  op: "Mul"
  input: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/sub"
  input: "conv9/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/conv9/dw/bn/moving_mean"
  op: "AssignSub"
  input: "conv9/dw/bn/moving_mean/biased"
  input: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv9/dw/bn/moving_mean/local_step"
  input: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv9/dw/bn/moving_mean/biased"
  input: "^conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/AssignAdd"
  input: "^conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/conv9/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/AssignAdd"
  input: "^conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/conv9/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/sub_1/x"
  input: "conv9/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv9/dw/bn/moving_mean/local_step"
  input: "^conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/AssignAdd"
  input: "^conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/conv9/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/sub_1"
  input: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/AssignAdd"
  input: "^conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/conv9/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/sub_2/x"
  input: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/read"
  input: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv9/dw/bn/moving_mean/read"
  input: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv9/dw/bn/moving_mean"
  input: "conv9/dw/bn/AssignMovingAvg/conv9/dw/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv9/dw/bn/moving_variance/biased"
  input: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv9/dw/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv9/dw/bn/moving_variance/local_step"
  input: "conv9/dw/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv9/dw/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/sub"
  op: "Sub"
  input: "conv9/dw/bn/moving_variance/biased/read"
  input: "conv9/dw/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/mul"
  op: "Mul"
  input: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/sub"
  input: "conv9/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/conv9/dw/bn/moving_variance"
  op: "AssignSub"
  input: "conv9/dw/bn/moving_variance/biased"
  input: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv9/dw/bn/moving_variance/local_step"
  input: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv9/dw/bn/moving_variance/biased"
  input: "^conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/AssignAdd"
  input: "^conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/conv9/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/AssignAdd"
  input: "^conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/conv9/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/sub_1/x"
  input: "conv9/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv9/dw/bn/moving_variance/local_step"
  input: "^conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/AssignAdd"
  input: "^conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/conv9/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/sub_1"
  input: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/AssignAdd"
  input: "^conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/conv9/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/sub_2/x"
  input: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/read"
  input: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv9/dw/bn/moving_variance/read"
  input: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv9/dw/bn/moving_variance"
  input: "conv9/dw/bn/AssignMovingAvg_1/conv9/dw/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/dw/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv9/dw/depthwise"
  input: "conv9/dw/bn/gamma/read"
  input: "conv9/dw/bn/beta/read"
  input: "conv9/dw/bn/moving_mean/read"
  input: "conv9/dw/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_18/Relu"
  op: "Relu"
  input: "conv9/dw/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv9/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv9/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv9/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv9/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6998740
    }
  }
}
node {
  name: "conv9/random_uniform/sub"
  op: "Sub"
  input: "conv9/random_uniform/max"
  input: "conv9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/random_uniform/mul"
  op: "Mul"
  input: "conv9/random_uniform/RandomUniform"
  input: "conv9/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/random_uniform"
  op: "Add"
  input: "conv9/random_uniform/mul"
  input: "conv9/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/kernel/Assign"
  op: "Assign"
  input: "conv9/kernel"
  input: "conv9/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/kernel/read"
  op: "Identity"
  input: "conv9/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/kernel"
      }
    }
  }
}
node {
  name: "conv9/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv9/convolution"
  op: "Conv2D"
  input: "activation_18/Relu"
  input: "conv9/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/bn/gamma/Assign"
  op: "Assign"
  input: "conv9/bn/gamma"
  input: "conv9/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn/gamma/read"
  op: "Identity"
  input: "conv9/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/gamma"
      }
    }
  }
}
node {
  name: "conv9/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/bn/beta/Assign"
  op: "Assign"
  input: "conv9/bn/beta"
  input: "conv9/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn/beta/read"
  op: "Identity"
  input: "conv9/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/beta"
      }
    }
  }
}
node {
  name: "conv9/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv9/bn/moving_mean"
  input: "conv9/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn/moving_mean/read"
  op: "Identity"
  input: "conv9/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv9/bn/moving_variance"
  input: "conv9/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn/moving_variance/read"
  op: "Identity"
  input: "conv9/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv9/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv9/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv9/convolution"
  input: "conv9/bn/gamma/read"
  input: "conv9/bn/beta/read"
  input: "conv9/bn/Const_4"
  input: "conv9/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn/Shape"
  op: "Shape"
  input: "conv9/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv9/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/bn/strided_slice"
  op: "StridedSlice"
  input: "conv9/bn/Shape"
  input: "conv9/bn/strided_slice/stack"
  input: "conv9/bn/strided_slice/stack_1"
  input: "conv9/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9/bn/Shape_1"
  op: "Shape"
  input: "conv9/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv9/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv9/bn/Shape_1"
  input: "conv9/bn/strided_slice_1/stack"
  input: "conv9/bn/strided_slice_1/stack_1"
  input: "conv9/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9/bn/Shape_2"
  op: "Shape"
  input: "conv9/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv9/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv9/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv9/bn/Shape_2"
  input: "conv9/bn/strided_slice_2/stack"
  input: "conv9/bn/strided_slice_2/stack_1"
  input: "conv9/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9/bn/Rank/packed"
  op: "Pack"
  input: "conv9/bn/strided_slice"
  input: "conv9/bn/strided_slice_1"
  input: "conv9/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv9/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/bn/range"
  op: "Range"
  input: "conv9/bn/range/start"
  input: "conv9/bn/Rank"
  input: "conv9/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/bn/Prod/input"
  op: "Pack"
  input: "conv9/bn/strided_slice"
  input: "conv9/bn/strided_slice_1"
  input: "conv9/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9/bn/Prod"
  op: "Prod"
  input: "conv9/bn/Prod/input"
  input: "conv9/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/bn/Cast"
  op: "Cast"
  input: "conv9/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv9/bn/sub"
  op: "Sub"
  input: "conv9/bn/Cast"
  input: "conv9/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/bn/truediv"
  op: "RealDiv"
  input: "conv9/bn/Cast"
  input: "conv9/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/bn/mul"
  op: "Mul"
  input: "conv9/bn/FusedBatchNorm:2"
  input: "conv9/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv9/bn/moving_mean/biased"
  input: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv9/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv9/bn/moving_mean/local_step"
  input: "conv9/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv9/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/sub"
  op: "Sub"
  input: "conv9/bn/moving_mean/biased/read"
  input: "conv9/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/mul"
  op: "Mul"
  input: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/sub"
  input: "conv9/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/conv9/bn/moving_mean"
  op: "AssignSub"
  input: "conv9/bn/moving_mean/biased"
  input: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv9/bn/moving_mean/local_step"
  input: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/read"
  op: "Identity"
  input: "conv9/bn/moving_mean/biased"
  input: "^conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/AssignAdd"
  input: "^conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/conv9/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/AssignAdd"
  input: "^conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/conv9/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/sub_1/x"
  input: "conv9/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv9/bn/moving_mean/local_step"
  input: "^conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/AssignAdd"
  input: "^conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/conv9/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/sub_1"
  input: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/AssignAdd"
  input: "^conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/conv9/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/sub_2/x"
  input: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/read"
  input: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv9/bn/moving_mean/read"
  input: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv9/bn/moving_mean"
  input: "conv9/bn/AssignMovingAvg/conv9/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv9/bn/moving_variance/biased"
  input: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv9/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv9/bn/moving_variance/local_step"
  input: "conv9/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv9/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/sub"
  op: "Sub"
  input: "conv9/bn/moving_variance/biased/read"
  input: "conv9/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/mul"
  op: "Mul"
  input: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/sub"
  input: "conv9/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/conv9/bn/moving_variance"
  op: "AssignSub"
  input: "conv9/bn/moving_variance/biased"
  input: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv9/bn/moving_variance/local_step"
  input: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/read"
  op: "Identity"
  input: "conv9/bn/moving_variance/biased"
  input: "^conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/AssignAdd"
  input: "^conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/conv9/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/AssignAdd"
  input: "^conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/conv9/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/sub_1/x"
  input: "conv9/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv9/bn/moving_variance/local_step"
  input: "^conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/AssignAdd"
  input: "^conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/conv9/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/sub_1"
  input: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/AssignAdd"
  input: "^conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/conv9/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/sub_2/x"
  input: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/read"
  input: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv9/bn/moving_variance/read"
  input: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv9/bn/moving_variance"
  input: "conv9/bn/AssignMovingAvg_1/conv9/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv9/convolution"
  input: "conv9/bn/gamma/read"
  input: "conv9/bn/beta/read"
  input: "conv9/bn/moving_mean/read"
  input: "conv9/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_19/Relu"
  op: "Relu"
  input: "conv9/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/dw/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv10/dw/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv10/dw/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv10/dw/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv10/dw/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3790991
    }
  }
}
node {
  name: "conv10/dw/random_uniform/sub"
  op: "Sub"
  input: "conv10/dw/random_uniform/max"
  input: "conv10/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/dw/random_uniform/mul"
  op: "Mul"
  input: "conv10/dw/random_uniform/RandomUniform"
  input: "conv10/dw/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/dw/random_uniform"
  op: "Add"
  input: "conv10/dw/random_uniform/mul"
  input: "conv10/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/dw/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv10/dw/depthwise_kernel"
  input: "conv10/dw/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/depthwise_kernel/read"
  op: "Identity"
  input: "conv10/dw/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv10/dw/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv10/dw/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv10/dw/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_19/Relu"
  input: "conv10/dw/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv10/dw/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/bn/gamma/Assign"
  op: "Assign"
  input: "conv10/dw/bn/gamma"
  input: "conv10/dw/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn/gamma/read"
  op: "Identity"
  input: "conv10/dw/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/gamma"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/bn/beta/Assign"
  op: "Assign"
  input: "conv10/dw/bn/beta"
  input: "conv10/dw/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn/beta/read"
  op: "Identity"
  input: "conv10/dw/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/beta"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv10/dw/bn/moving_mean"
  input: "conv10/dw/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv10/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv10/dw/bn/moving_variance"
  input: "conv10/dw/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv10/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv10/dw/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv10/dw/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv10/dw/depthwise"
  input: "conv10/dw/bn/gamma/read"
  input: "conv10/dw/bn/beta/read"
  input: "conv10/dw/bn/Const_4"
  input: "conv10/dw/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn/Shape"
  op: "Shape"
  input: "conv10/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/dw/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv10/dw/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/dw/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/dw/bn/strided_slice"
  op: "StridedSlice"
  input: "conv10/dw/bn/Shape"
  input: "conv10/dw/bn/strided_slice/stack"
  input: "conv10/dw/bn/strided_slice/stack_1"
  input: "conv10/dw/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv10/dw/bn/Shape_1"
  op: "Shape"
  input: "conv10/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/dw/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/dw/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv10/dw/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/dw/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv10/dw/bn/Shape_1"
  input: "conv10/dw/bn/strided_slice_1/stack"
  input: "conv10/dw/bn/strided_slice_1/stack_1"
  input: "conv10/dw/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv10/dw/bn/Shape_2"
  op: "Shape"
  input: "conv10/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/dw/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv10/dw/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv10/dw/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/dw/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv10/dw/bn/Shape_2"
  input: "conv10/dw/bn/strided_slice_2/stack"
  input: "conv10/dw/bn/strided_slice_2/stack_1"
  input: "conv10/dw/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv10/dw/bn/Rank/packed"
  op: "Pack"
  input: "conv10/dw/bn/strided_slice"
  input: "conv10/dw/bn/strided_slice_1"
  input: "conv10/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv10/dw/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/dw/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv10/dw/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/dw/bn/range"
  op: "Range"
  input: "conv10/dw/bn/range/start"
  input: "conv10/dw/bn/Rank"
  input: "conv10/dw/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/dw/bn/Prod/input"
  op: "Pack"
  input: "conv10/dw/bn/strided_slice"
  input: "conv10/dw/bn/strided_slice_1"
  input: "conv10/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv10/dw/bn/Prod"
  op: "Prod"
  input: "conv10/dw/bn/Prod/input"
  input: "conv10/dw/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/dw/bn/Cast"
  op: "Cast"
  input: "conv10/dw/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/dw/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv10/dw/bn/sub"
  op: "Sub"
  input: "conv10/dw/bn/Cast"
  input: "conv10/dw/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/dw/bn/truediv"
  op: "RealDiv"
  input: "conv10/dw/bn/Cast"
  input: "conv10/dw/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/dw/bn/mul"
  op: "Mul"
  input: "conv10/dw/bn/FusedBatchNorm:2"
  input: "conv10/dw/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv10/dw/bn/moving_mean/biased"
  input: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv10/dw/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv10/dw/bn/moving_mean/local_step"
  input: "conv10/dw/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv10/dw/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/sub"
  op: "Sub"
  input: "conv10/dw/bn/moving_mean/biased/read"
  input: "conv10/dw/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/mul"
  op: "Mul"
  input: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/sub"
  input: "conv10/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/conv10/dw/bn/moving_mean"
  op: "AssignSub"
  input: "conv10/dw/bn/moving_mean/biased"
  input: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv10/dw/bn/moving_mean/local_step"
  input: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv10/dw/bn/moving_mean/biased"
  input: "^conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/AssignAdd"
  input: "^conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/conv10/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/AssignAdd"
  input: "^conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/conv10/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/sub_1/x"
  input: "conv10/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv10/dw/bn/moving_mean/local_step"
  input: "^conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/AssignAdd"
  input: "^conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/conv10/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/sub_1"
  input: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/AssignAdd"
  input: "^conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/conv10/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/sub_2/x"
  input: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/read"
  input: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv10/dw/bn/moving_mean/read"
  input: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv10/dw/bn/moving_mean"
  input: "conv10/dw/bn/AssignMovingAvg/conv10/dw/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv10/dw/bn/moving_variance/biased"
  input: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv10/dw/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv10/dw/bn/moving_variance/local_step"
  input: "conv10/dw/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv10/dw/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/sub"
  op: "Sub"
  input: "conv10/dw/bn/moving_variance/biased/read"
  input: "conv10/dw/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/mul"
  op: "Mul"
  input: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/sub"
  input: "conv10/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/conv10/dw/bn/moving_variance"
  op: "AssignSub"
  input: "conv10/dw/bn/moving_variance/biased"
  input: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv10/dw/bn/moving_variance/local_step"
  input: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv10/dw/bn/moving_variance/biased"
  input: "^conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/AssignAdd"
  input: "^conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/conv10/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/AssignAdd"
  input: "^conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/conv10/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/sub_1/x"
  input: "conv10/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv10/dw/bn/moving_variance/local_step"
  input: "^conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/AssignAdd"
  input: "^conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/conv10/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/sub_1"
  input: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/AssignAdd"
  input: "^conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/conv10/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/sub_2/x"
  input: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/read"
  input: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv10/dw/bn/moving_variance/read"
  input: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv10/dw/bn/moving_variance"
  input: "conv10/dw/bn/AssignMovingAvg_1/conv10/dw/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/dw/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv10/dw/depthwise"
  input: "conv10/dw/bn/gamma/read"
  input: "conv10/dw/bn/beta/read"
  input: "conv10/dw/bn/moving_mean/read"
  input: "conv10/dw/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_20/Relu"
  op: "Relu"
  input: "conv10/dw/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv10/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv10/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv10/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv10/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2418534
    }
  }
}
node {
  name: "conv10/random_uniform/sub"
  op: "Sub"
  input: "conv10/random_uniform/max"
  input: "conv10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/random_uniform/mul"
  op: "Mul"
  input: "conv10/random_uniform/RandomUniform"
  input: "conv10/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/random_uniform"
  op: "Add"
  input: "conv10/random_uniform/mul"
  input: "conv10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/kernel/Assign"
  op: "Assign"
  input: "conv10/kernel"
  input: "conv10/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/kernel/read"
  op: "Identity"
  input: "conv10/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/kernel"
      }
    }
  }
}
node {
  name: "conv10/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv10/convolution"
  op: "Conv2D"
  input: "activation_20/Relu"
  input: "conv10/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/bn/gamma/Assign"
  op: "Assign"
  input: "conv10/bn/gamma"
  input: "conv10/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn/gamma/read"
  op: "Identity"
  input: "conv10/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/gamma"
      }
    }
  }
}
node {
  name: "conv10/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/bn/beta/Assign"
  op: "Assign"
  input: "conv10/bn/beta"
  input: "conv10/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn/beta/read"
  op: "Identity"
  input: "conv10/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/beta"
      }
    }
  }
}
node {
  name: "conv10/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv10/bn/moving_mean"
  input: "conv10/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn/moving_mean/read"
  op: "Identity"
  input: "conv10/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv10/bn/moving_variance"
  input: "conv10/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn/moving_variance/read"
  op: "Identity"
  input: "conv10/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv10/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv10/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv10/convolution"
  input: "conv10/bn/gamma/read"
  input: "conv10/bn/beta/read"
  input: "conv10/bn/Const_4"
  input: "conv10/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn/Shape"
  op: "Shape"
  input: "conv10/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv10/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/bn/strided_slice"
  op: "StridedSlice"
  input: "conv10/bn/Shape"
  input: "conv10/bn/strided_slice/stack"
  input: "conv10/bn/strided_slice/stack_1"
  input: "conv10/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv10/bn/Shape_1"
  op: "Shape"
  input: "conv10/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv10/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv10/bn/Shape_1"
  input: "conv10/bn/strided_slice_1/stack"
  input: "conv10/bn/strided_slice_1/stack_1"
  input: "conv10/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv10/bn/Shape_2"
  op: "Shape"
  input: "conv10/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv10/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv10/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv10/bn/Shape_2"
  input: "conv10/bn/strided_slice_2/stack"
  input: "conv10/bn/strided_slice_2/stack_1"
  input: "conv10/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv10/bn/Rank/packed"
  op: "Pack"
  input: "conv10/bn/strided_slice"
  input: "conv10/bn/strided_slice_1"
  input: "conv10/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv10/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv10/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/bn/range"
  op: "Range"
  input: "conv10/bn/range/start"
  input: "conv10/bn/Rank"
  input: "conv10/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/bn/Prod/input"
  op: "Pack"
  input: "conv10/bn/strided_slice"
  input: "conv10/bn/strided_slice_1"
  input: "conv10/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv10/bn/Prod"
  op: "Prod"
  input: "conv10/bn/Prod/input"
  input: "conv10/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/bn/Cast"
  op: "Cast"
  input: "conv10/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv10/bn/sub"
  op: "Sub"
  input: "conv10/bn/Cast"
  input: "conv10/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/bn/truediv"
  op: "RealDiv"
  input: "conv10/bn/Cast"
  input: "conv10/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/bn/mul"
  op: "Mul"
  input: "conv10/bn/FusedBatchNorm:2"
  input: "conv10/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv10/bn/moving_mean/biased"
  input: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv10/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv10/bn/moving_mean/local_step"
  input: "conv10/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv10/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/sub"
  op: "Sub"
  input: "conv10/bn/moving_mean/biased/read"
  input: "conv10/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/mul"
  op: "Mul"
  input: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/sub"
  input: "conv10/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/conv10/bn/moving_mean"
  op: "AssignSub"
  input: "conv10/bn/moving_mean/biased"
  input: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv10/bn/moving_mean/local_step"
  input: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/read"
  op: "Identity"
  input: "conv10/bn/moving_mean/biased"
  input: "^conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/AssignAdd"
  input: "^conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/conv10/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/AssignAdd"
  input: "^conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/conv10/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/sub_1/x"
  input: "conv10/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv10/bn/moving_mean/local_step"
  input: "^conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/AssignAdd"
  input: "^conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/conv10/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/sub_1"
  input: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/AssignAdd"
  input: "^conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/conv10/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/sub_2/x"
  input: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/read"
  input: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv10/bn/moving_mean/read"
  input: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv10/bn/moving_mean"
  input: "conv10/bn/AssignMovingAvg/conv10/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv10/bn/moving_variance/biased"
  input: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv10/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv10/bn/moving_variance/local_step"
  input: "conv10/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv10/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/sub"
  op: "Sub"
  input: "conv10/bn/moving_variance/biased/read"
  input: "conv10/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/mul"
  op: "Mul"
  input: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/sub"
  input: "conv10/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/conv10/bn/moving_variance"
  op: "AssignSub"
  input: "conv10/bn/moving_variance/biased"
  input: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv10/bn/moving_variance/local_step"
  input: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/read"
  op: "Identity"
  input: "conv10/bn/moving_variance/biased"
  input: "^conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/AssignAdd"
  input: "^conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/conv10/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/AssignAdd"
  input: "^conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/conv10/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/sub_1/x"
  input: "conv10/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv10/bn/moving_variance/local_step"
  input: "^conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/AssignAdd"
  input: "^conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/conv10/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/sub_1"
  input: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/AssignAdd"
  input: "^conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/conv10/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/sub_2/x"
  input: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/read"
  input: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv10/bn/moving_variance/read"
  input: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv10/bn/moving_variance"
  input: "conv10/bn/AssignMovingAvg_1/conv10/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv10/convolution"
  input: "conv10/bn/gamma/read"
  input: "conv10/bn/beta/read"
  input: "conv10/bn/moving_mean/read"
  input: "conv10/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_21/Relu"
  op: "Relu"
  input: "conv10/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/dw/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv11/dw/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv11/dw/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv11/dw/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv11/dw/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1085945
    }
  }
}
node {
  name: "conv11/dw/random_uniform/sub"
  op: "Sub"
  input: "conv11/dw/random_uniform/max"
  input: "conv11/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/dw/random_uniform/mul"
  op: "Mul"
  input: "conv11/dw/random_uniform/RandomUniform"
  input: "conv11/dw/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/dw/random_uniform"
  op: "Add"
  input: "conv11/dw/random_uniform/mul"
  input: "conv11/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/dw/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv11/dw/depthwise_kernel"
  input: "conv11/dw/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/depthwise_kernel/read"
  op: "Identity"
  input: "conv11/dw/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv11/dw/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv11/dw/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv11/dw/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_21/Relu"
  input: "conv11/dw/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv11/dw/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/bn/gamma/Assign"
  op: "Assign"
  input: "conv11/dw/bn/gamma"
  input: "conv11/dw/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn/gamma/read"
  op: "Identity"
  input: "conv11/dw/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/gamma"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/bn/beta/Assign"
  op: "Assign"
  input: "conv11/dw/bn/beta"
  input: "conv11/dw/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn/beta/read"
  op: "Identity"
  input: "conv11/dw/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/beta"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv11/dw/bn/moving_mean"
  input: "conv11/dw/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv11/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv11/dw/bn/moving_variance"
  input: "conv11/dw/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv11/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv11/dw/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv11/dw/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv11/dw/depthwise"
  input: "conv11/dw/bn/gamma/read"
  input: "conv11/dw/bn/beta/read"
  input: "conv11/dw/bn/Const_4"
  input: "conv11/dw/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn/Shape"
  op: "Shape"
  input: "conv11/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/dw/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv11/dw/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/dw/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/dw/bn/strided_slice"
  op: "StridedSlice"
  input: "conv11/dw/bn/Shape"
  input: "conv11/dw/bn/strided_slice/stack"
  input: "conv11/dw/bn/strided_slice/stack_1"
  input: "conv11/dw/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv11/dw/bn/Shape_1"
  op: "Shape"
  input: "conv11/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/dw/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/dw/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv11/dw/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/dw/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv11/dw/bn/Shape_1"
  input: "conv11/dw/bn/strided_slice_1/stack"
  input: "conv11/dw/bn/strided_slice_1/stack_1"
  input: "conv11/dw/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv11/dw/bn/Shape_2"
  op: "Shape"
  input: "conv11/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/dw/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv11/dw/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv11/dw/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/dw/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv11/dw/bn/Shape_2"
  input: "conv11/dw/bn/strided_slice_2/stack"
  input: "conv11/dw/bn/strided_slice_2/stack_1"
  input: "conv11/dw/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv11/dw/bn/Rank/packed"
  op: "Pack"
  input: "conv11/dw/bn/strided_slice"
  input: "conv11/dw/bn/strided_slice_1"
  input: "conv11/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv11/dw/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/dw/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv11/dw/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/dw/bn/range"
  op: "Range"
  input: "conv11/dw/bn/range/start"
  input: "conv11/dw/bn/Rank"
  input: "conv11/dw/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/dw/bn/Prod/input"
  op: "Pack"
  input: "conv11/dw/bn/strided_slice"
  input: "conv11/dw/bn/strided_slice_1"
  input: "conv11/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv11/dw/bn/Prod"
  op: "Prod"
  input: "conv11/dw/bn/Prod/input"
  input: "conv11/dw/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/dw/bn/Cast"
  op: "Cast"
  input: "conv11/dw/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/dw/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv11/dw/bn/sub"
  op: "Sub"
  input: "conv11/dw/bn/Cast"
  input: "conv11/dw/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/dw/bn/truediv"
  op: "RealDiv"
  input: "conv11/dw/bn/Cast"
  input: "conv11/dw/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/dw/bn/mul"
  op: "Mul"
  input: "conv11/dw/bn/FusedBatchNorm:2"
  input: "conv11/dw/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv11/dw/bn/moving_mean/biased"
  input: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv11/dw/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv11/dw/bn/moving_mean/local_step"
  input: "conv11/dw/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv11/dw/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/sub"
  op: "Sub"
  input: "conv11/dw/bn/moving_mean/biased/read"
  input: "conv11/dw/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/mul"
  op: "Mul"
  input: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/sub"
  input: "conv11/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/conv11/dw/bn/moving_mean"
  op: "AssignSub"
  input: "conv11/dw/bn/moving_mean/biased"
  input: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv11/dw/bn/moving_mean/local_step"
  input: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv11/dw/bn/moving_mean/biased"
  input: "^conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/AssignAdd"
  input: "^conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/conv11/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/AssignAdd"
  input: "^conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/conv11/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/sub_1/x"
  input: "conv11/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv11/dw/bn/moving_mean/local_step"
  input: "^conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/AssignAdd"
  input: "^conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/conv11/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/sub_1"
  input: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/AssignAdd"
  input: "^conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/conv11/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/sub_2/x"
  input: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/read"
  input: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv11/dw/bn/moving_mean/read"
  input: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv11/dw/bn/moving_mean"
  input: "conv11/dw/bn/AssignMovingAvg/conv11/dw/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv11/dw/bn/moving_variance/biased"
  input: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv11/dw/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv11/dw/bn/moving_variance/local_step"
  input: "conv11/dw/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv11/dw/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/sub"
  op: "Sub"
  input: "conv11/dw/bn/moving_variance/biased/read"
  input: "conv11/dw/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/mul"
  op: "Mul"
  input: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/sub"
  input: "conv11/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/conv11/dw/bn/moving_variance"
  op: "AssignSub"
  input: "conv11/dw/bn/moving_variance/biased"
  input: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv11/dw/bn/moving_variance/local_step"
  input: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv11/dw/bn/moving_variance/biased"
  input: "^conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/AssignAdd"
  input: "^conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/conv11/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/AssignAdd"
  input: "^conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/conv11/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/sub_1/x"
  input: "conv11/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv11/dw/bn/moving_variance/local_step"
  input: "^conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/AssignAdd"
  input: "^conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/conv11/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/sub_1"
  input: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/AssignAdd"
  input: "^conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/conv11/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/sub_2/x"
  input: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/read"
  input: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv11/dw/bn/moving_variance/read"
  input: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv11/dw/bn/moving_variance"
  input: "conv11/dw/bn/AssignMovingAvg_1/conv11/dw/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/dw/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv11/dw/depthwise"
  input: "conv11/dw/bn/gamma/read"
  input: "conv11/dw/bn/beta/read"
  input: "conv11/dw/bn/moving_mean/read"
  input: "conv11/dw/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_22/Relu"
  op: "Relu"
  input: "conv11/dw/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv11/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv11/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv11/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv11/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5226011
    }
  }
}
node {
  name: "conv11/random_uniform/sub"
  op: "Sub"
  input: "conv11/random_uniform/max"
  input: "conv11/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/random_uniform/mul"
  op: "Mul"
  input: "conv11/random_uniform/RandomUniform"
  input: "conv11/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/random_uniform"
  op: "Add"
  input: "conv11/random_uniform/mul"
  input: "conv11/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/kernel/Assign"
  op: "Assign"
  input: "conv11/kernel"
  input: "conv11/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/kernel/read"
  op: "Identity"
  input: "conv11/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/kernel"
      }
    }
  }
}
node {
  name: "conv11/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv11/convolution"
  op: "Conv2D"
  input: "activation_22/Relu"
  input: "conv11/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/bn/gamma/Assign"
  op: "Assign"
  input: "conv11/bn/gamma"
  input: "conv11/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn/gamma/read"
  op: "Identity"
  input: "conv11/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/gamma"
      }
    }
  }
}
node {
  name: "conv11/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/bn/beta/Assign"
  op: "Assign"
  input: "conv11/bn/beta"
  input: "conv11/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn/beta/read"
  op: "Identity"
  input: "conv11/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/beta"
      }
    }
  }
}
node {
  name: "conv11/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv11/bn/moving_mean"
  input: "conv11/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn/moving_mean/read"
  op: "Identity"
  input: "conv11/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv11/bn/moving_variance"
  input: "conv11/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn/moving_variance/read"
  op: "Identity"
  input: "conv11/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv11/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv11/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv11/convolution"
  input: "conv11/bn/gamma/read"
  input: "conv11/bn/beta/read"
  input: "conv11/bn/Const_4"
  input: "conv11/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn/Shape"
  op: "Shape"
  input: "conv11/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv11/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/bn/strided_slice"
  op: "StridedSlice"
  input: "conv11/bn/Shape"
  input: "conv11/bn/strided_slice/stack"
  input: "conv11/bn/strided_slice/stack_1"
  input: "conv11/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv11/bn/Shape_1"
  op: "Shape"
  input: "conv11/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv11/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv11/bn/Shape_1"
  input: "conv11/bn/strided_slice_1/stack"
  input: "conv11/bn/strided_slice_1/stack_1"
  input: "conv11/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv11/bn/Shape_2"
  op: "Shape"
  input: "conv11/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv11/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv11/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv11/bn/Shape_2"
  input: "conv11/bn/strided_slice_2/stack"
  input: "conv11/bn/strided_slice_2/stack_1"
  input: "conv11/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv11/bn/Rank/packed"
  op: "Pack"
  input: "conv11/bn/strided_slice"
  input: "conv11/bn/strided_slice_1"
  input: "conv11/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv11/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv11/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/bn/range"
  op: "Range"
  input: "conv11/bn/range/start"
  input: "conv11/bn/Rank"
  input: "conv11/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/bn/Prod/input"
  op: "Pack"
  input: "conv11/bn/strided_slice"
  input: "conv11/bn/strided_slice_1"
  input: "conv11/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv11/bn/Prod"
  op: "Prod"
  input: "conv11/bn/Prod/input"
  input: "conv11/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/bn/Cast"
  op: "Cast"
  input: "conv11/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv11/bn/sub"
  op: "Sub"
  input: "conv11/bn/Cast"
  input: "conv11/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/bn/truediv"
  op: "RealDiv"
  input: "conv11/bn/Cast"
  input: "conv11/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/bn/mul"
  op: "Mul"
  input: "conv11/bn/FusedBatchNorm:2"
  input: "conv11/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv11/bn/moving_mean/biased"
  input: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv11/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv11/bn/moving_mean/local_step"
  input: "conv11/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv11/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/sub"
  op: "Sub"
  input: "conv11/bn/moving_mean/biased/read"
  input: "conv11/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/mul"
  op: "Mul"
  input: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/sub"
  input: "conv11/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/conv11/bn/moving_mean"
  op: "AssignSub"
  input: "conv11/bn/moving_mean/biased"
  input: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv11/bn/moving_mean/local_step"
  input: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/read"
  op: "Identity"
  input: "conv11/bn/moving_mean/biased"
  input: "^conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/AssignAdd"
  input: "^conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/conv11/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/AssignAdd"
  input: "^conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/conv11/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/sub_1/x"
  input: "conv11/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv11/bn/moving_mean/local_step"
  input: "^conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/AssignAdd"
  input: "^conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/conv11/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/sub_1"
  input: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/AssignAdd"
  input: "^conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/conv11/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/sub_2/x"
  input: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/read"
  input: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv11/bn/moving_mean/read"
  input: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv11/bn/moving_mean"
  input: "conv11/bn/AssignMovingAvg/conv11/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv11/bn/moving_variance/biased"
  input: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv11/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv11/bn/moving_variance/local_step"
  input: "conv11/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv11/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/sub"
  op: "Sub"
  input: "conv11/bn/moving_variance/biased/read"
  input: "conv11/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/mul"
  op: "Mul"
  input: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/sub"
  input: "conv11/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/conv11/bn/moving_variance"
  op: "AssignSub"
  input: "conv11/bn/moving_variance/biased"
  input: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv11/bn/moving_variance/local_step"
  input: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/read"
  op: "Identity"
  input: "conv11/bn/moving_variance/biased"
  input: "^conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/AssignAdd"
  input: "^conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/conv11/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/AssignAdd"
  input: "^conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/conv11/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/sub_1/x"
  input: "conv11/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv11/bn/moving_variance/local_step"
  input: "^conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/AssignAdd"
  input: "^conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/conv11/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/sub_1"
  input: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/AssignAdd"
  input: "^conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/conv11/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/sub_2/x"
  input: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/read"
  input: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv11/bn/moving_variance/read"
  input: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv11/bn/moving_variance"
  input: "conv11/bn/AssignMovingAvg_1/conv11/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv11/convolution"
  input: "conv11/bn/gamma/read"
  input: "conv11/bn/beta/read"
  input: "conv11/bn/moving_mean/read"
  input: "conv11/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_23/Relu"
  op: "Relu"
  input: "conv11/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5_padding/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv5_padding/Pad"
  op: "Pad"
  input: "activation_23/Relu"
  input: "conv5_padding/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/dw/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv12/dw/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv12/dw/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv12/dw/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv12/dw/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6658211
    }
  }
}
node {
  name: "conv12/dw/random_uniform/sub"
  op: "Sub"
  input: "conv12/dw/random_uniform/max"
  input: "conv12/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/dw/random_uniform/mul"
  op: "Mul"
  input: "conv12/dw/random_uniform/RandomUniform"
  input: "conv12/dw/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/dw/random_uniform"
  op: "Add"
  input: "conv12/dw/random_uniform/mul"
  input: "conv12/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/dw/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv12/dw/depthwise_kernel"
  input: "conv12/dw/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/depthwise_kernel/read"
  op: "Identity"
  input: "conv12/dw/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv12/dw/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv12/dw/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv12/dw/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv5_padding/Pad"
  input: "conv12/dw/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv12/dw/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/bn/gamma/Assign"
  op: "Assign"
  input: "conv12/dw/bn/gamma"
  input: "conv12/dw/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn/gamma/read"
  op: "Identity"
  input: "conv12/dw/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/gamma"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/bn/beta/Assign"
  op: "Assign"
  input: "conv12/dw/bn/beta"
  input: "conv12/dw/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn/beta/read"
  op: "Identity"
  input: "conv12/dw/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/beta"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv12/dw/bn/moving_mean"
  input: "conv12/dw/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv12/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv12/dw/bn/moving_variance"
  input: "conv12/dw/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv12/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv12/dw/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv12/dw/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv12/dw/depthwise"
  input: "conv12/dw/bn/gamma/read"
  input: "conv12/dw/bn/beta/read"
  input: "conv12/dw/bn/Const_4"
  input: "conv12/dw/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn/Shape"
  op: "Shape"
  input: "conv12/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/dw/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv12/dw/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/dw/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/dw/bn/strided_slice"
  op: "StridedSlice"
  input: "conv12/dw/bn/Shape"
  input: "conv12/dw/bn/strided_slice/stack"
  input: "conv12/dw/bn/strided_slice/stack_1"
  input: "conv12/dw/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv12/dw/bn/Shape_1"
  op: "Shape"
  input: "conv12/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/dw/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/dw/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv12/dw/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/dw/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv12/dw/bn/Shape_1"
  input: "conv12/dw/bn/strided_slice_1/stack"
  input: "conv12/dw/bn/strided_slice_1/stack_1"
  input: "conv12/dw/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv12/dw/bn/Shape_2"
  op: "Shape"
  input: "conv12/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/dw/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv12/dw/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv12/dw/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/dw/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv12/dw/bn/Shape_2"
  input: "conv12/dw/bn/strided_slice_2/stack"
  input: "conv12/dw/bn/strided_slice_2/stack_1"
  input: "conv12/dw/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv12/dw/bn/Rank/packed"
  op: "Pack"
  input: "conv12/dw/bn/strided_slice"
  input: "conv12/dw/bn/strided_slice_1"
  input: "conv12/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv12/dw/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/dw/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv12/dw/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/dw/bn/range"
  op: "Range"
  input: "conv12/dw/bn/range/start"
  input: "conv12/dw/bn/Rank"
  input: "conv12/dw/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/dw/bn/Prod/input"
  op: "Pack"
  input: "conv12/dw/bn/strided_slice"
  input: "conv12/dw/bn/strided_slice_1"
  input: "conv12/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv12/dw/bn/Prod"
  op: "Prod"
  input: "conv12/dw/bn/Prod/input"
  input: "conv12/dw/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/dw/bn/Cast"
  op: "Cast"
  input: "conv12/dw/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/dw/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv12/dw/bn/sub"
  op: "Sub"
  input: "conv12/dw/bn/Cast"
  input: "conv12/dw/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/dw/bn/truediv"
  op: "RealDiv"
  input: "conv12/dw/bn/Cast"
  input: "conv12/dw/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/dw/bn/mul"
  op: "Mul"
  input: "conv12/dw/bn/FusedBatchNorm:2"
  input: "conv12/dw/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv12/dw/bn/moving_mean/biased"
  input: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv12/dw/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv12/dw/bn/moving_mean/local_step"
  input: "conv12/dw/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv12/dw/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/sub"
  op: "Sub"
  input: "conv12/dw/bn/moving_mean/biased/read"
  input: "conv12/dw/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/mul"
  op: "Mul"
  input: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/sub"
  input: "conv12/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/conv12/dw/bn/moving_mean"
  op: "AssignSub"
  input: "conv12/dw/bn/moving_mean/biased"
  input: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv12/dw/bn/moving_mean/local_step"
  input: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv12/dw/bn/moving_mean/biased"
  input: "^conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/AssignAdd"
  input: "^conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/conv12/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/AssignAdd"
  input: "^conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/conv12/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/sub_1/x"
  input: "conv12/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv12/dw/bn/moving_mean/local_step"
  input: "^conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/AssignAdd"
  input: "^conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/conv12/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/sub_1"
  input: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/AssignAdd"
  input: "^conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/conv12/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/sub_2/x"
  input: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/read"
  input: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv12/dw/bn/moving_mean/read"
  input: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv12/dw/bn/moving_mean"
  input: "conv12/dw/bn/AssignMovingAvg/conv12/dw/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv12/dw/bn/moving_variance/biased"
  input: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv12/dw/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv12/dw/bn/moving_variance/local_step"
  input: "conv12/dw/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv12/dw/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/sub"
  op: "Sub"
  input: "conv12/dw/bn/moving_variance/biased/read"
  input: "conv12/dw/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/mul"
  op: "Mul"
  input: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/sub"
  input: "conv12/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/conv12/dw/bn/moving_variance"
  op: "AssignSub"
  input: "conv12/dw/bn/moving_variance/biased"
  input: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv12/dw/bn/moving_variance/local_step"
  input: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv12/dw/bn/moving_variance/biased"
  input: "^conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/AssignAdd"
  input: "^conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/conv12/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/AssignAdd"
  input: "^conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/conv12/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/sub_1/x"
  input: "conv12/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv12/dw/bn/moving_variance/local_step"
  input: "^conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/AssignAdd"
  input: "^conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/conv12/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/sub_1"
  input: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/AssignAdd"
  input: "^conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/conv12/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/sub_2/x"
  input: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/read"
  input: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv12/dw/bn/moving_variance/read"
  input: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv12/dw/bn/moving_variance"
  input: "conv12/dw/bn/AssignMovingAvg_1/conv12/dw/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/dw/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv12/dw/depthwise"
  input: "conv12/dw/bn/gamma/read"
  input: "conv12/dw/bn/beta/read"
  input: "conv12/dw/bn/moving_mean/read"
  input: "conv12/dw/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_24/Relu"
  op: "Relu"
  input: "conv12/dw/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "conv12/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "conv12/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "conv12/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv12/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3949973
    }
  }
}
node {
  name: "conv12/random_uniform/sub"
  op: "Sub"
  input: "conv12/random_uniform/max"
  input: "conv12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/random_uniform/mul"
  op: "Mul"
  input: "conv12/random_uniform/RandomUniform"
  input: "conv12/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/random_uniform"
  op: "Add"
  input: "conv12/random_uniform/mul"
  input: "conv12/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/kernel/Assign"
  op: "Assign"
  input: "conv12/kernel"
  input: "conv12/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/kernel/read"
  op: "Identity"
  input: "conv12/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernel"
      }
    }
  }
}
node {
  name: "conv12/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv12/convolution"
  op: "Conv2D"
  input: "activation_24/Relu"
  input: "conv12/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/bn/gamma/Assign"
  op: "Assign"
  input: "conv12/bn/gamma"
  input: "conv12/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn/gamma/read"
  op: "Identity"
  input: "conv12/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/gamma"
      }
    }
  }
}
node {
  name: "conv12/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/bn/beta/Assign"
  op: "Assign"
  input: "conv12/bn/beta"
  input: "conv12/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn/beta/read"
  op: "Identity"
  input: "conv12/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/beta"
      }
    }
  }
}
node {
  name: "conv12/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv12/bn/moving_mean"
  input: "conv12/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn/moving_mean/read"
  op: "Identity"
  input: "conv12/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv12/bn/moving_variance"
  input: "conv12/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn/moving_variance/read"
  op: "Identity"
  input: "conv12/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv12/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv12/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv12/convolution"
  input: "conv12/bn/gamma/read"
  input: "conv12/bn/beta/read"
  input: "conv12/bn/Const_4"
  input: "conv12/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn/Shape"
  op: "Shape"
  input: "conv12/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv12/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/bn/strided_slice"
  op: "StridedSlice"
  input: "conv12/bn/Shape"
  input: "conv12/bn/strided_slice/stack"
  input: "conv12/bn/strided_slice/stack_1"
  input: "conv12/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv12/bn/Shape_1"
  op: "Shape"
  input: "conv12/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv12/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv12/bn/Shape_1"
  input: "conv12/bn/strided_slice_1/stack"
  input: "conv12/bn/strided_slice_1/stack_1"
  input: "conv12/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv12/bn/Shape_2"
  op: "Shape"
  input: "conv12/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv12/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv12/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv12/bn/Shape_2"
  input: "conv12/bn/strided_slice_2/stack"
  input: "conv12/bn/strided_slice_2/stack_1"
  input: "conv12/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv12/bn/Rank/packed"
  op: "Pack"
  input: "conv12/bn/strided_slice"
  input: "conv12/bn/strided_slice_1"
  input: "conv12/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv12/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv12/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/bn/range"
  op: "Range"
  input: "conv12/bn/range/start"
  input: "conv12/bn/Rank"
  input: "conv12/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/bn/Prod/input"
  op: "Pack"
  input: "conv12/bn/strided_slice"
  input: "conv12/bn/strided_slice_1"
  input: "conv12/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv12/bn/Prod"
  op: "Prod"
  input: "conv12/bn/Prod/input"
  input: "conv12/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/bn/Cast"
  op: "Cast"
  input: "conv12/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv12/bn/sub"
  op: "Sub"
  input: "conv12/bn/Cast"
  input: "conv12/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/bn/truediv"
  op: "RealDiv"
  input: "conv12/bn/Cast"
  input: "conv12/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/bn/mul"
  op: "Mul"
  input: "conv12/bn/FusedBatchNorm:2"
  input: "conv12/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/zeros"
  op: "Fill"
  input: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/zeros/shape_as_tensor"
  input: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv12/bn/moving_mean/biased"
  input: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv12/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv12/bn/moving_mean/local_step"
  input: "conv12/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv12/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/sub"
  op: "Sub"
  input: "conv12/bn/moving_mean/biased/read"
  input: "conv12/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/mul"
  op: "Mul"
  input: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/sub"
  input: "conv12/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/conv12/bn/moving_mean"
  op: "AssignSub"
  input: "conv12/bn/moving_mean/biased"
  input: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv12/bn/moving_mean/local_step"
  input: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/read"
  op: "Identity"
  input: "conv12/bn/moving_mean/biased"
  input: "^conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/AssignAdd"
  input: "^conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/conv12/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/AssignAdd"
  input: "^conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/conv12/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/sub_1/x"
  input: "conv12/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv12/bn/moving_mean/local_step"
  input: "^conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/AssignAdd"
  input: "^conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/conv12/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/sub_1"
  input: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/AssignAdd"
  input: "^conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/conv12/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/sub_2/x"
  input: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/read"
  input: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv12/bn/moving_mean/read"
  input: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv12/bn/moving_mean"
  input: "conv12/bn/AssignMovingAvg/conv12/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/zeros"
  op: "Fill"
  input: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/zeros/shape_as_tensor"
  input: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv12/bn/moving_variance/biased"
  input: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv12/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv12/bn/moving_variance/local_step"
  input: "conv12/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv12/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/sub"
  op: "Sub"
  input: "conv12/bn/moving_variance/biased/read"
  input: "conv12/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/mul"
  op: "Mul"
  input: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/sub"
  input: "conv12/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/conv12/bn/moving_variance"
  op: "AssignSub"
  input: "conv12/bn/moving_variance/biased"
  input: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv12/bn/moving_variance/local_step"
  input: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/read"
  op: "Identity"
  input: "conv12/bn/moving_variance/biased"
  input: "^conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/AssignAdd"
  input: "^conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/conv12/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/AssignAdd"
  input: "^conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/conv12/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/sub_1/x"
  input: "conv12/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv12/bn/moving_variance/local_step"
  input: "^conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/AssignAdd"
  input: "^conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/conv12/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/sub_1"
  input: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/AssignAdd"
  input: "^conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/conv12/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/sub_2/x"
  input: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/read"
  input: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv12/bn/moving_variance/read"
  input: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv12/bn/moving_variance"
  input: "conv12/bn/AssignMovingAvg_1/conv12/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv12/convolution"
  input: "conv12/bn/gamma/read"
  input: "conv12/bn/beta/read"
  input: "conv12/bn/moving_mean/read"
  input: "conv12/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_25/Relu"
  op: "Relu"
  input: "conv12/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/dw/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv13/dw/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025503069162368774
      }
    }
  }
}
node {
  name: "conv13/dw/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025503069162368774
      }
    }
  }
}
node {
  name: "conv13/dw/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv13/dw/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8693563
    }
  }
}
node {
  name: "conv13/dw/random_uniform/sub"
  op: "Sub"
  input: "conv13/dw/random_uniform/max"
  input: "conv13/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/dw/random_uniform/mul"
  op: "Mul"
  input: "conv13/dw/random_uniform/RandomUniform"
  input: "conv13/dw/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/dw/random_uniform"
  op: "Add"
  input: "conv13/dw/random_uniform/mul"
  input: "conv13/dw/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/dw/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv13/dw/depthwise_kernel"
  input: "conv13/dw/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/depthwise_kernel/read"
  op: "Identity"
  input: "conv13/dw/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv13/dw/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv13/dw/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv13/dw/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_25/Relu"
  input: "conv13/dw/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv13/dw/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/bn/gamma/Assign"
  op: "Assign"
  input: "conv13/dw/bn/gamma"
  input: "conv13/dw/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn/gamma/read"
  op: "Identity"
  input: "conv13/dw/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/gamma"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/bn/beta/Assign"
  op: "Assign"
  input: "conv13/dw/bn/beta"
  input: "conv13/dw/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn/beta/read"
  op: "Identity"
  input: "conv13/dw/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/beta"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv13/dw/bn/moving_mean"
  input: "conv13/dw/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv13/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv13/dw/bn/moving_variance"
  input: "conv13/dw/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv13/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv13/dw/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv13/dw/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv13/dw/depthwise"
  input: "conv13/dw/bn/gamma/read"
  input: "conv13/dw/bn/beta/read"
  input: "conv13/dw/bn/Const_4"
  input: "conv13/dw/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn/Shape"
  op: "Shape"
  input: "conv13/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/dw/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv13/dw/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/dw/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/dw/bn/strided_slice"
  op: "StridedSlice"
  input: "conv13/dw/bn/Shape"
  input: "conv13/dw/bn/strided_slice/stack"
  input: "conv13/dw/bn/strided_slice/stack_1"
  input: "conv13/dw/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv13/dw/bn/Shape_1"
  op: "Shape"
  input: "conv13/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/dw/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/dw/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv13/dw/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/dw/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv13/dw/bn/Shape_1"
  input: "conv13/dw/bn/strided_slice_1/stack"
  input: "conv13/dw/bn/strided_slice_1/stack_1"
  input: "conv13/dw/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv13/dw/bn/Shape_2"
  op: "Shape"
  input: "conv13/dw/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/dw/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv13/dw/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv13/dw/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/dw/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv13/dw/bn/Shape_2"
  input: "conv13/dw/bn/strided_slice_2/stack"
  input: "conv13/dw/bn/strided_slice_2/stack_1"
  input: "conv13/dw/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv13/dw/bn/Rank/packed"
  op: "Pack"
  input: "conv13/dw/bn/strided_slice"
  input: "conv13/dw/bn/strided_slice_1"
  input: "conv13/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv13/dw/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/dw/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv13/dw/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/dw/bn/range"
  op: "Range"
  input: "conv13/dw/bn/range/start"
  input: "conv13/dw/bn/Rank"
  input: "conv13/dw/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/dw/bn/Prod/input"
  op: "Pack"
  input: "conv13/dw/bn/strided_slice"
  input: "conv13/dw/bn/strided_slice_1"
  input: "conv13/dw/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv13/dw/bn/Prod"
  op: "Prod"
  input: "conv13/dw/bn/Prod/input"
  input: "conv13/dw/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/dw/bn/Cast"
  op: "Cast"
  input: "conv13/dw/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/dw/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv13/dw/bn/sub"
  op: "Sub"
  input: "conv13/dw/bn/Cast"
  input: "conv13/dw/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/dw/bn/truediv"
  op: "RealDiv"
  input: "conv13/dw/bn/Cast"
  input: "conv13/dw/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/dw/bn/mul"
  op: "Mul"
  input: "conv13/dw/bn/FusedBatchNorm:2"
  input: "conv13/dw/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/zeros"
  op: "Fill"
  input: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/zeros/shape_as_tensor"
  input: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/dw/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv13/dw/bn/moving_mean/biased"
  input: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv13/dw/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv13/dw/bn/moving_mean/local_step"
  input: "conv13/dw/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv13/dw/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/sub"
  op: "Sub"
  input: "conv13/dw/bn/moving_mean/biased/read"
  input: "conv13/dw/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/mul"
  op: "Mul"
  input: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/sub"
  input: "conv13/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/conv13/dw/bn/moving_mean"
  op: "AssignSub"
  input: "conv13/dw/bn/moving_mean/biased"
  input: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv13/dw/bn/moving_mean/local_step"
  input: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/read"
  op: "Identity"
  input: "conv13/dw/bn/moving_mean/biased"
  input: "^conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/AssignAdd"
  input: "^conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/conv13/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/AssignAdd"
  input: "^conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/conv13/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/sub_1/x"
  input: "conv13/dw/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv13/dw/bn/moving_mean/local_step"
  input: "^conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/AssignAdd"
  input: "^conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/conv13/dw/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/sub_1"
  input: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/AssignAdd"
  input: "^conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/conv13/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/sub_2/x"
  input: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/read"
  input: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv13/dw/bn/moving_mean/read"
  input: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv13/dw/bn/moving_mean"
  input: "conv13/dw/bn/AssignMovingAvg/conv13/dw/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/zeros"
  op: "Fill"
  input: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/zeros/shape_as_tensor"
  input: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/dw/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv13/dw/bn/moving_variance/biased"
  input: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv13/dw/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv13/dw/bn/moving_variance/local_step"
  input: "conv13/dw/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv13/dw/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/sub"
  op: "Sub"
  input: "conv13/dw/bn/moving_variance/biased/read"
  input: "conv13/dw/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/mul"
  op: "Mul"
  input: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/sub"
  input: "conv13/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/conv13/dw/bn/moving_variance"
  op: "AssignSub"
  input: "conv13/dw/bn/moving_variance/biased"
  input: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv13/dw/bn/moving_variance/local_step"
  input: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/read"
  op: "Identity"
  input: "conv13/dw/bn/moving_variance/biased"
  input: "^conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/AssignAdd"
  input: "^conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/conv13/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/AssignAdd"
  input: "^conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/conv13/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/sub_1/x"
  input: "conv13/dw/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv13/dw/bn/moving_variance/local_step"
  input: "^conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/AssignAdd"
  input: "^conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/conv13/dw/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/sub_1"
  input: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/AssignAdd"
  input: "^conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/conv13/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/sub_2/x"
  input: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/read"
  input: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv13/dw/bn/moving_variance/read"
  input: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv13/dw/bn/moving_variance"
  input: "conv13/dw/bn/AssignMovingAvg_1/conv13/dw/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/dw/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv13/dw/depthwise"
  input: "conv13/dw/bn/gamma/read"
  input: "conv13/dw/bn/beta/read"
  input: "conv13/dw/bn/moving_mean/read"
  input: "conv13/dw/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_26/Relu"
  op: "Relu"
  input: "conv13/dw/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "conv13/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05412658676505089
      }
    }
  }
}
node {
  name: "conv13/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05412658676505089
      }
    }
  }
}
node {
  name: "conv13/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv13/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5887228
    }
  }
}
node {
  name: "conv13/random_uniform/sub"
  op: "Sub"
  input: "conv13/random_uniform/max"
  input: "conv13/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/random_uniform/mul"
  op: "Mul"
  input: "conv13/random_uniform/RandomUniform"
  input: "conv13/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/random_uniform"
  op: "Add"
  input: "conv13/random_uniform/mul"
  input: "conv13/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/kernel/Assign"
  op: "Assign"
  input: "conv13/kernel"
  input: "conv13/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/kernel/read"
  op: "Identity"
  input: "conv13/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/kernel"
      }
    }
  }
}
node {
  name: "conv13/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv13/convolution"
  op: "Conv2D"
  input: "activation_26/Relu"
  input: "conv13/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/bn/gamma/Assign"
  op: "Assign"
  input: "conv13/bn/gamma"
  input: "conv13/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn/gamma/read"
  op: "Identity"
  input: "conv13/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/gamma"
      }
    }
  }
}
node {
  name: "conv13/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/bn/beta/Assign"
  op: "Assign"
  input: "conv13/bn/beta"
  input: "conv13/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn/beta/read"
  op: "Identity"
  input: "conv13/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/beta"
      }
    }
  }
}
node {
  name: "conv13/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv13/bn/moving_mean"
  input: "conv13/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn/moving_mean/read"
  op: "Identity"
  input: "conv13/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv13/bn/moving_variance"
  input: "conv13/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn/moving_variance/read"
  op: "Identity"
  input: "conv13/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv13/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv13/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv13/convolution"
  input: "conv13/bn/gamma/read"
  input: "conv13/bn/beta/read"
  input: "conv13/bn/Const_4"
  input: "conv13/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn/Shape"
  op: "Shape"
  input: "conv13/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv13/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/bn/strided_slice"
  op: "StridedSlice"
  input: "conv13/bn/Shape"
  input: "conv13/bn/strided_slice/stack"
  input: "conv13/bn/strided_slice/stack_1"
  input: "conv13/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv13/bn/Shape_1"
  op: "Shape"
  input: "conv13/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv13/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv13/bn/Shape_1"
  input: "conv13/bn/strided_slice_1/stack"
  input: "conv13/bn/strided_slice_1/stack_1"
  input: "conv13/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv13/bn/Shape_2"
  op: "Shape"
  input: "conv13/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv13/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv13/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv13/bn/Shape_2"
  input: "conv13/bn/strided_slice_2/stack"
  input: "conv13/bn/strided_slice_2/stack_1"
  input: "conv13/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv13/bn/Rank/packed"
  op: "Pack"
  input: "conv13/bn/strided_slice"
  input: "conv13/bn/strided_slice_1"
  input: "conv13/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv13/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv13/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/bn/range"
  op: "Range"
  input: "conv13/bn/range/start"
  input: "conv13/bn/Rank"
  input: "conv13/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/bn/Prod/input"
  op: "Pack"
  input: "conv13/bn/strided_slice"
  input: "conv13/bn/strided_slice_1"
  input: "conv13/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv13/bn/Prod"
  op: "Prod"
  input: "conv13/bn/Prod/input"
  input: "conv13/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/bn/Cast"
  op: "Cast"
  input: "conv13/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv13/bn/sub"
  op: "Sub"
  input: "conv13/bn/Cast"
  input: "conv13/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/bn/truediv"
  op: "RealDiv"
  input: "conv13/bn/Cast"
  input: "conv13/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/bn/mul"
  op: "Mul"
  input: "conv13/bn/FusedBatchNorm:2"
  input: "conv13/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/zeros"
  op: "Fill"
  input: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/zeros/shape_as_tensor"
  input: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv13/bn/moving_mean/biased"
  input: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv13/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv13/bn/moving_mean/local_step"
  input: "conv13/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv13/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/sub"
  op: "Sub"
  input: "conv13/bn/moving_mean/biased/read"
  input: "conv13/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/mul"
  op: "Mul"
  input: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/sub"
  input: "conv13/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/conv13/bn/moving_mean"
  op: "AssignSub"
  input: "conv13/bn/moving_mean/biased"
  input: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv13/bn/moving_mean/local_step"
  input: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/read"
  op: "Identity"
  input: "conv13/bn/moving_mean/biased"
  input: "^conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/AssignAdd"
  input: "^conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/conv13/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/AssignAdd"
  input: "^conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/conv13/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/sub_1/x"
  input: "conv13/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv13/bn/moving_mean/local_step"
  input: "^conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/AssignAdd"
  input: "^conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/conv13/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/sub_1"
  input: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/AssignAdd"
  input: "^conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/conv13/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/sub_2/x"
  input: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/read"
  input: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv13/bn/moving_mean/read"
  input: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv13/bn/moving_mean"
  input: "conv13/bn/AssignMovingAvg/conv13/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/zeros"
  op: "Fill"
  input: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/zeros/shape_as_tensor"
  input: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv13/bn/moving_variance/biased"
  input: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv13/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv13/bn/moving_variance/local_step"
  input: "conv13/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv13/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/sub"
  op: "Sub"
  input: "conv13/bn/moving_variance/biased/read"
  input: "conv13/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/mul"
  op: "Mul"
  input: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/sub"
  input: "conv13/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/conv13/bn/moving_variance"
  op: "AssignSub"
  input: "conv13/bn/moving_variance/biased"
  input: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv13/bn/moving_variance/local_step"
  input: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/read"
  op: "Identity"
  input: "conv13/bn/moving_variance/biased"
  input: "^conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/AssignAdd"
  input: "^conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/conv13/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/AssignAdd"
  input: "^conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/conv13/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/sub_1/x"
  input: "conv13/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv13/bn/moving_variance/local_step"
  input: "^conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/AssignAdd"
  input: "^conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/conv13/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/sub_1"
  input: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/AssignAdd"
  input: "^conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/conv13/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/sub_2/x"
  input: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/read"
  input: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv13/bn/moving_variance/read"
  input: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv13/bn/moving_variance"
  input: "conv13/bn/AssignMovingAvg_1/conv13/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv13/convolution"
  input: "conv13/bn/gamma/read"
  input: "conv13/bn/beta/read"
  input: "conv13/bn/moving_mean/read"
  input: "conv13/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_27/Relu"
  op: "Relu"
  input: "conv13/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv14_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "conv14_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv14_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1222174
    }
  }
}
node {
  name: "conv14_1/truncated_normal/mul"
  op: "Mul"
  input: "conv14_1/truncated_normal/TruncatedNormal"
  input: "conv14_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1/truncated_normal"
  op: "Add"
  input: "conv14_1/truncated_normal/mul"
  input: "conv14_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/kernel/Assign"
  op: "Assign"
  input: "conv14_1/kernel"
  input: "conv14_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/kernel/read"
  op: "Identity"
  input: "conv14_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/kernel"
      }
    }
  }
}
node {
  name: "conv14_1/weight_regularizer/Square"
  op: "Square"
  input: "conv14_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv14_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv14_1/weight_regularizer/mul/x"
  input: "conv14_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv14_1/weight_regularizer/mul"
  input: "conv14_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_1/weight_regularizer/add"
  op: "Add"
  input: "conv14_1/weight_regularizer/add/x"
  input: "conv14_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_1/convolution"
  op: "Conv2D"
  input: "activation_27/Relu"
  input: "conv14_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_1/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/bn/gamma/Assign"
  op: "Assign"
  input: "conv14_1/bn/gamma"
  input: "conv14_1/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn/gamma/read"
  op: "Identity"
  input: "conv14_1/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/gamma"
      }
    }
  }
}
node {
  name: "conv14_1/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_1/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/bn/beta/Assign"
  op: "Assign"
  input: "conv14_1/bn/beta"
  input: "conv14_1/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn/beta/read"
  op: "Identity"
  input: "conv14_1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/beta"
      }
    }
  }
}
node {
  name: "conv14_1/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv14_1/bn/moving_mean"
  input: "conv14_1/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn/moving_mean/read"
  op: "Identity"
  input: "conv14_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv14_1/bn/moving_variance"
  input: "conv14_1/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn/moving_variance/read"
  op: "Identity"
  input: "conv14_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv14_1/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv14_1/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv14_1/convolution"
  input: "conv14_1/bn/gamma/read"
  input: "conv14_1/bn/beta/read"
  input: "conv14_1/bn/Const_4"
  input: "conv14_1/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn/Shape"
  op: "Shape"
  input: "conv14_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_1/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv14_1/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_1/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_1/bn/strided_slice"
  op: "StridedSlice"
  input: "conv14_1/bn/Shape"
  input: "conv14_1/bn/strided_slice/stack"
  input: "conv14_1/bn/strided_slice/stack_1"
  input: "conv14_1/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv14_1/bn/Shape_1"
  op: "Shape"
  input: "conv14_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_1/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_1/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv14_1/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_1/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv14_1/bn/Shape_1"
  input: "conv14_1/bn/strided_slice_1/stack"
  input: "conv14_1/bn/strided_slice_1/stack_1"
  input: "conv14_1/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv14_1/bn/Shape_2"
  op: "Shape"
  input: "conv14_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_1/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv14_1/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv14_1/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_1/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv14_1/bn/Shape_2"
  input: "conv14_1/bn/strided_slice_2/stack"
  input: "conv14_1/bn/strided_slice_2/stack_1"
  input: "conv14_1/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv14_1/bn/Rank/packed"
  op: "Pack"
  input: "conv14_1/bn/strided_slice"
  input: "conv14_1/bn/strided_slice_1"
  input: "conv14_1/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv14_1/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_1/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv14_1/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_1/bn/range"
  op: "Range"
  input: "conv14_1/bn/range/start"
  input: "conv14_1/bn/Rank"
  input: "conv14_1/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_1/bn/Prod/input"
  op: "Pack"
  input: "conv14_1/bn/strided_slice"
  input: "conv14_1/bn/strided_slice_1"
  input: "conv14_1/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv14_1/bn/Prod"
  op: "Prod"
  input: "conv14_1/bn/Prod/input"
  input: "conv14_1/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_1/bn/Cast"
  op: "Cast"
  input: "conv14_1/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_1/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv14_1/bn/sub"
  op: "Sub"
  input: "conv14_1/bn/Cast"
  input: "conv14_1/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1/bn/truediv"
  op: "RealDiv"
  input: "conv14_1/bn/Cast"
  input: "conv14_1/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1/bn/mul"
  op: "Mul"
  input: "conv14_1/bn/FusedBatchNorm:2"
  input: "conv14_1/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_1/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv14_1/bn/moving_mean/biased"
  input: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv14_1/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_1/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv14_1/bn/moving_mean/local_step"
  input: "conv14_1/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv14_1/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/sub"
  op: "Sub"
  input: "conv14_1/bn/moving_mean/biased/read"
  input: "conv14_1/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/mul"
  op: "Mul"
  input: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/sub"
  input: "conv14_1/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/conv14_1/bn/moving_mean"
  op: "AssignSub"
  input: "conv14_1/bn/moving_mean/biased"
  input: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv14_1/bn/moving_mean/local_step"
  input: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/read"
  op: "Identity"
  input: "conv14_1/bn/moving_mean/biased"
  input: "^conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/AssignAdd"
  input: "^conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/conv14_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/AssignAdd"
  input: "^conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/conv14_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/sub_1/x"
  input: "conv14_1/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv14_1/bn/moving_mean/local_step"
  input: "^conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/AssignAdd"
  input: "^conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/conv14_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/sub_1"
  input: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/AssignAdd"
  input: "^conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/conv14_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/sub_2/x"
  input: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/read"
  input: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv14_1/bn/moving_mean/read"
  input: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv14_1/bn/moving_mean"
  input: "conv14_1/bn/AssignMovingAvg/conv14_1/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_1/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv14_1/bn/moving_variance/biased"
  input: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv14_1/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_1/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv14_1/bn/moving_variance/local_step"
  input: "conv14_1/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv14_1/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/sub"
  op: "Sub"
  input: "conv14_1/bn/moving_variance/biased/read"
  input: "conv14_1/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/mul"
  op: "Mul"
  input: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/sub"
  input: "conv14_1/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/conv14_1/bn/moving_variance"
  op: "AssignSub"
  input: "conv14_1/bn/moving_variance/biased"
  input: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv14_1/bn/moving_variance/local_step"
  input: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/read"
  op: "Identity"
  input: "conv14_1/bn/moving_variance/biased"
  input: "^conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/AssignAdd"
  input: "^conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/conv14_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/AssignAdd"
  input: "^conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/conv14_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/sub_1/x"
  input: "conv14_1/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv14_1/bn/moving_variance/local_step"
  input: "^conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/AssignAdd"
  input: "^conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/conv14_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/sub_1"
  input: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/AssignAdd"
  input: "^conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/conv14_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/sub_2/x"
  input: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/read"
  input: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv14_1/bn/moving_variance/read"
  input: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv14_1/bn/moving_variance"
  input: "conv14_1/bn/AssignMovingAvg_1/conv14_1/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_1/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv14_1/convolution"
  input: "conv14_1/bn/gamma/read"
  input: "conv14_1/bn/beta/read"
  input: "conv14_1/bn/moving_mean/read"
  input: "conv14_1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "relu_conv6_1/Relu"
  op: "Relu"
  input: "conv14_1/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6_padding/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv6_padding/Pad"
  op: "Pad"
  input: "relu_conv6_1/Relu"
  input: "conv6_padding/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_2/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv14_2/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "conv14_2/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv14_2/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9165355
    }
  }
}
node {
  name: "conv14_2/truncated_normal/mul"
  op: "Mul"
  input: "conv14_2/truncated_normal/TruncatedNormal"
  input: "conv14_2/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2/truncated_normal"
  op: "Add"
  input: "conv14_2/truncated_normal/mul"
  input: "conv14_2/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/kernel/Assign"
  op: "Assign"
  input: "conv14_2/kernel"
  input: "conv14_2/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/kernel/read"
  op: "Identity"
  input: "conv14_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/kernel"
      }
    }
  }
}
node {
  name: "conv14_2/weight_regularizer/Square"
  op: "Square"
  input: "conv14_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv14_2/weight_regularizer/mul"
  op: "Mul"
  input: "conv14_2/weight_regularizer/mul/x"
  input: "conv14_2/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_2/weight_regularizer/Sum"
  op: "Sum"
  input: "conv14_2/weight_regularizer/mul"
  input: "conv14_2/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2/weight_regularizer/add"
  op: "Add"
  input: "conv14_2/weight_regularizer/add/x"
  input: "conv14_2/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_2/convolution"
  op: "Conv2D"
  input: "conv6_padding/Pad"
  input: "conv14_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_2/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/bn/gamma/Assign"
  op: "Assign"
  input: "conv14_2/bn/gamma"
  input: "conv14_2/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn/gamma/read"
  op: "Identity"
  input: "conv14_2/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/gamma"
      }
    }
  }
}
node {
  name: "conv14_2/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/bn/beta/Assign"
  op: "Assign"
  input: "conv14_2/bn/beta"
  input: "conv14_2/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn/beta/read"
  op: "Identity"
  input: "conv14_2/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/beta"
      }
    }
  }
}
node {
  name: "conv14_2/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv14_2/bn/moving_mean"
  input: "conv14_2/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn/moving_mean/read"
  op: "Identity"
  input: "conv14_2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_2/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv14_2/bn/moving_variance"
  input: "conv14_2/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn/moving_variance/read"
  op: "Identity"
  input: "conv14_2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv14_2/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv14_2/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv14_2/convolution"
  input: "conv14_2/bn/gamma/read"
  input: "conv14_2/bn/beta/read"
  input: "conv14_2/bn/Const_4"
  input: "conv14_2/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn/Shape"
  op: "Shape"
  input: "conv14_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_2/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv14_2/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_2/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_2/bn/strided_slice"
  op: "StridedSlice"
  input: "conv14_2/bn/Shape"
  input: "conv14_2/bn/strided_slice/stack"
  input: "conv14_2/bn/strided_slice/stack_1"
  input: "conv14_2/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv14_2/bn/Shape_1"
  op: "Shape"
  input: "conv14_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_2/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_2/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv14_2/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_2/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv14_2/bn/Shape_1"
  input: "conv14_2/bn/strided_slice_1/stack"
  input: "conv14_2/bn/strided_slice_1/stack_1"
  input: "conv14_2/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv14_2/bn/Shape_2"
  op: "Shape"
  input: "conv14_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_2/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv14_2/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv14_2/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_2/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv14_2/bn/Shape_2"
  input: "conv14_2/bn/strided_slice_2/stack"
  input: "conv14_2/bn/strided_slice_2/stack_1"
  input: "conv14_2/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv14_2/bn/Rank/packed"
  op: "Pack"
  input: "conv14_2/bn/strided_slice"
  input: "conv14_2/bn/strided_slice_1"
  input: "conv14_2/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv14_2/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_2/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv14_2/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_2/bn/range"
  op: "Range"
  input: "conv14_2/bn/range/start"
  input: "conv14_2/bn/Rank"
  input: "conv14_2/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_2/bn/Prod/input"
  op: "Pack"
  input: "conv14_2/bn/strided_slice"
  input: "conv14_2/bn/strided_slice_1"
  input: "conv14_2/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv14_2/bn/Prod"
  op: "Prod"
  input: "conv14_2/bn/Prod/input"
  input: "conv14_2/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2/bn/Cast"
  op: "Cast"
  input: "conv14_2/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_2/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv14_2/bn/sub"
  op: "Sub"
  input: "conv14_2/bn/Cast"
  input: "conv14_2/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2/bn/truediv"
  op: "RealDiv"
  input: "conv14_2/bn/Cast"
  input: "conv14_2/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2/bn/mul"
  op: "Mul"
  input: "conv14_2/bn/FusedBatchNorm:2"
  input: "conv14_2/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv14_2/bn/moving_mean/biased"
  input: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv14_2/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv14_2/bn/moving_mean/local_step"
  input: "conv14_2/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv14_2/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/sub"
  op: "Sub"
  input: "conv14_2/bn/moving_mean/biased/read"
  input: "conv14_2/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/mul"
  op: "Mul"
  input: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/sub"
  input: "conv14_2/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/conv14_2/bn/moving_mean"
  op: "AssignSub"
  input: "conv14_2/bn/moving_mean/biased"
  input: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv14_2/bn/moving_mean/local_step"
  input: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/read"
  op: "Identity"
  input: "conv14_2/bn/moving_mean/biased"
  input: "^conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/AssignAdd"
  input: "^conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/conv14_2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/AssignAdd"
  input: "^conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/conv14_2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/sub_1/x"
  input: "conv14_2/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv14_2/bn/moving_mean/local_step"
  input: "^conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/AssignAdd"
  input: "^conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/conv14_2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/sub_1"
  input: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/AssignAdd"
  input: "^conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/conv14_2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/sub_2/x"
  input: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/read"
  input: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv14_2/bn/moving_mean/read"
  input: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv14_2/bn/moving_mean"
  input: "conv14_2/bn/AssignMovingAvg/conv14_2/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv14_2/bn/moving_variance/biased"
  input: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv14_2/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv14_2/bn/moving_variance/local_step"
  input: "conv14_2/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv14_2/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/sub"
  op: "Sub"
  input: "conv14_2/bn/moving_variance/biased/read"
  input: "conv14_2/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/mul"
  op: "Mul"
  input: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/sub"
  input: "conv14_2/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/conv14_2/bn/moving_variance"
  op: "AssignSub"
  input: "conv14_2/bn/moving_variance/biased"
  input: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv14_2/bn/moving_variance/local_step"
  input: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/read"
  op: "Identity"
  input: "conv14_2/bn/moving_variance/biased"
  input: "^conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/AssignAdd"
  input: "^conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/conv14_2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/AssignAdd"
  input: "^conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/conv14_2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/sub_1/x"
  input: "conv14_2/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv14_2/bn/moving_variance/local_step"
  input: "^conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/AssignAdd"
  input: "^conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/conv14_2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/sub_1"
  input: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/AssignAdd"
  input: "^conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/conv14_2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/sub_2/x"
  input: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/read"
  input: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv14_2/bn/moving_variance/read"
  input: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv14_2/bn/moving_variance"
  input: "conv14_2/bn/AssignMovingAvg_1/conv14_2/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv14_2/convolution"
  input: "conv14_2/bn/gamma/read"
  input: "conv14_2/bn/beta/read"
  input: "conv14_2/bn/moving_mean/read"
  input: "conv14_2/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "relu_conv6_2/Relu"
  op: "Relu"
  input: "conv14_2/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07105295360088348
      }
    }
  }
}
node {
  name: "conv15_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv15_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1535922
    }
  }
}
node {
  name: "conv15_1/truncated_normal/mul"
  op: "Mul"
  input: "conv15_1/truncated_normal/TruncatedNormal"
  input: "conv15_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1/truncated_normal"
  op: "Add"
  input: "conv15_1/truncated_normal/mul"
  input: "conv15_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/kernel/Assign"
  op: "Assign"
  input: "conv15_1/kernel"
  input: "conv15_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/kernel/read"
  op: "Identity"
  input: "conv15_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/kernel"
      }
    }
  }
}
node {
  name: "conv15_1/weight_regularizer/Square"
  op: "Square"
  input: "conv15_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv15_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv15_1/weight_regularizer/mul/x"
  input: "conv15_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv15_1/weight_regularizer/mul"
  input: "conv15_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_1/weight_regularizer/add"
  op: "Add"
  input: "conv15_1/weight_regularizer/add/x"
  input: "conv15_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_1/convolution"
  op: "Conv2D"
  input: "relu_conv6_2/Relu"
  input: "conv15_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_1/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/bn/gamma/Assign"
  op: "Assign"
  input: "conv15_1/bn/gamma"
  input: "conv15_1/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn/gamma/read"
  op: "Identity"
  input: "conv15_1/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/gamma"
      }
    }
  }
}
node {
  name: "conv15_1/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_1/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/bn/beta/Assign"
  op: "Assign"
  input: "conv15_1/bn/beta"
  input: "conv15_1/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn/beta/read"
  op: "Identity"
  input: "conv15_1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/beta"
      }
    }
  }
}
node {
  name: "conv15_1/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv15_1/bn/moving_mean"
  input: "conv15_1/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn/moving_mean/read"
  op: "Identity"
  input: "conv15_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv15_1/bn/moving_variance"
  input: "conv15_1/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn/moving_variance/read"
  op: "Identity"
  input: "conv15_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv15_1/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv15_1/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv15_1/convolution"
  input: "conv15_1/bn/gamma/read"
  input: "conv15_1/bn/beta/read"
  input: "conv15_1/bn/Const_4"
  input: "conv15_1/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn/Shape"
  op: "Shape"
  input: "conv15_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_1/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv15_1/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_1/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_1/bn/strided_slice"
  op: "StridedSlice"
  input: "conv15_1/bn/Shape"
  input: "conv15_1/bn/strided_slice/stack"
  input: "conv15_1/bn/strided_slice/stack_1"
  input: "conv15_1/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv15_1/bn/Shape_1"
  op: "Shape"
  input: "conv15_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_1/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_1/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv15_1/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_1/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv15_1/bn/Shape_1"
  input: "conv15_1/bn/strided_slice_1/stack"
  input: "conv15_1/bn/strided_slice_1/stack_1"
  input: "conv15_1/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv15_1/bn/Shape_2"
  op: "Shape"
  input: "conv15_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_1/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv15_1/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv15_1/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_1/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv15_1/bn/Shape_2"
  input: "conv15_1/bn/strided_slice_2/stack"
  input: "conv15_1/bn/strided_slice_2/stack_1"
  input: "conv15_1/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv15_1/bn/Rank/packed"
  op: "Pack"
  input: "conv15_1/bn/strided_slice"
  input: "conv15_1/bn/strided_slice_1"
  input: "conv15_1/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv15_1/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_1/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv15_1/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_1/bn/range"
  op: "Range"
  input: "conv15_1/bn/range/start"
  input: "conv15_1/bn/Rank"
  input: "conv15_1/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_1/bn/Prod/input"
  op: "Pack"
  input: "conv15_1/bn/strided_slice"
  input: "conv15_1/bn/strided_slice_1"
  input: "conv15_1/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv15_1/bn/Prod"
  op: "Prod"
  input: "conv15_1/bn/Prod/input"
  input: "conv15_1/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_1/bn/Cast"
  op: "Cast"
  input: "conv15_1/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_1/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv15_1/bn/sub"
  op: "Sub"
  input: "conv15_1/bn/Cast"
  input: "conv15_1/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1/bn/truediv"
  op: "RealDiv"
  input: "conv15_1/bn/Cast"
  input: "conv15_1/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1/bn/mul"
  op: "Mul"
  input: "conv15_1/bn/FusedBatchNorm:2"
  input: "conv15_1/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_1/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv15_1/bn/moving_mean/biased"
  input: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv15_1/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_1/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv15_1/bn/moving_mean/local_step"
  input: "conv15_1/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv15_1/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/sub"
  op: "Sub"
  input: "conv15_1/bn/moving_mean/biased/read"
  input: "conv15_1/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/mul"
  op: "Mul"
  input: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/sub"
  input: "conv15_1/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/conv15_1/bn/moving_mean"
  op: "AssignSub"
  input: "conv15_1/bn/moving_mean/biased"
  input: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv15_1/bn/moving_mean/local_step"
  input: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/read"
  op: "Identity"
  input: "conv15_1/bn/moving_mean/biased"
  input: "^conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/AssignAdd"
  input: "^conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/conv15_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/AssignAdd"
  input: "^conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/conv15_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/sub_1/x"
  input: "conv15_1/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv15_1/bn/moving_mean/local_step"
  input: "^conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/AssignAdd"
  input: "^conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/conv15_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/sub_1"
  input: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/AssignAdd"
  input: "^conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/conv15_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/sub_2/x"
  input: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/read"
  input: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv15_1/bn/moving_mean/read"
  input: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv15_1/bn/moving_mean"
  input: "conv15_1/bn/AssignMovingAvg/conv15_1/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_1/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv15_1/bn/moving_variance/biased"
  input: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv15_1/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_1/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv15_1/bn/moving_variance/local_step"
  input: "conv15_1/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv15_1/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/sub"
  op: "Sub"
  input: "conv15_1/bn/moving_variance/biased/read"
  input: "conv15_1/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/mul"
  op: "Mul"
  input: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/sub"
  input: "conv15_1/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/conv15_1/bn/moving_variance"
  op: "AssignSub"
  input: "conv15_1/bn/moving_variance/biased"
  input: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv15_1/bn/moving_variance/local_step"
  input: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/read"
  op: "Identity"
  input: "conv15_1/bn/moving_variance/biased"
  input: "^conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/AssignAdd"
  input: "^conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/conv15_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/AssignAdd"
  input: "^conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/conv15_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/sub_1/x"
  input: "conv15_1/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv15_1/bn/moving_variance/local_step"
  input: "^conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/AssignAdd"
  input: "^conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/conv15_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/sub_1"
  input: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/AssignAdd"
  input: "^conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/conv15_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/sub_2/x"
  input: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/read"
  input: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv15_1/bn/moving_variance/read"
  input: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv15_1/bn/moving_variance"
  input: "conv15_1/bn/AssignMovingAvg_1/conv15_1/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_1/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv15_1/convolution"
  input: "conv15_1/bn/gamma/read"
  input: "conv15_1/bn/beta/read"
  input: "conv15_1/bn/moving_mean/read"
  input: "conv15_1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "relu_conv7_1/Relu"
  op: "Relu"
  input: "conv15_1/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7_padding/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv7_padding/Pad"
  op: "Pad"
  input: "relu_conv7_1/Relu"
  input: "conv7_padding/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_2/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv15_2/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04736863449215889
      }
    }
  }
}
node {
  name: "conv15_2/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv15_2/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1655479
    }
  }
}
node {
  name: "conv15_2/truncated_normal/mul"
  op: "Mul"
  input: "conv15_2/truncated_normal/TruncatedNormal"
  input: "conv15_2/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2/truncated_normal"
  op: "Add"
  input: "conv15_2/truncated_normal/mul"
  input: "conv15_2/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/kernel/Assign"
  op: "Assign"
  input: "conv15_2/kernel"
  input: "conv15_2/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/kernel/read"
  op: "Identity"
  input: "conv15_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/kernel"
      }
    }
  }
}
node {
  name: "conv15_2/weight_regularizer/Square"
  op: "Square"
  input: "conv15_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv15_2/weight_regularizer/mul"
  op: "Mul"
  input: "conv15_2/weight_regularizer/mul/x"
  input: "conv15_2/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_2/weight_regularizer/Sum"
  op: "Sum"
  input: "conv15_2/weight_regularizer/mul"
  input: "conv15_2/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2/weight_regularizer/add"
  op: "Add"
  input: "conv15_2/weight_regularizer/add/x"
  input: "conv15_2/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_2/convolution"
  op: "Conv2D"
  input: "conv7_padding/Pad"
  input: "conv15_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_2/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/bn/gamma/Assign"
  op: "Assign"
  input: "conv15_2/bn/gamma"
  input: "conv15_2/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn/gamma/read"
  op: "Identity"
  input: "conv15_2/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/gamma"
      }
    }
  }
}
node {
  name: "conv15_2/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/bn/beta/Assign"
  op: "Assign"
  input: "conv15_2/bn/beta"
  input: "conv15_2/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn/beta/read"
  op: "Identity"
  input: "conv15_2/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/beta"
      }
    }
  }
}
node {
  name: "conv15_2/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv15_2/bn/moving_mean"
  input: "conv15_2/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn/moving_mean/read"
  op: "Identity"
  input: "conv15_2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_2/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv15_2/bn/moving_variance"
  input: "conv15_2/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn/moving_variance/read"
  op: "Identity"
  input: "conv15_2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv15_2/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv15_2/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv15_2/convolution"
  input: "conv15_2/bn/gamma/read"
  input: "conv15_2/bn/beta/read"
  input: "conv15_2/bn/Const_4"
  input: "conv15_2/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn/Shape"
  op: "Shape"
  input: "conv15_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_2/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv15_2/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_2/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_2/bn/strided_slice"
  op: "StridedSlice"
  input: "conv15_2/bn/Shape"
  input: "conv15_2/bn/strided_slice/stack"
  input: "conv15_2/bn/strided_slice/stack_1"
  input: "conv15_2/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv15_2/bn/Shape_1"
  op: "Shape"
  input: "conv15_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_2/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_2/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv15_2/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_2/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv15_2/bn/Shape_1"
  input: "conv15_2/bn/strided_slice_1/stack"
  input: "conv15_2/bn/strided_slice_1/stack_1"
  input: "conv15_2/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv15_2/bn/Shape_2"
  op: "Shape"
  input: "conv15_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_2/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv15_2/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv15_2/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_2/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv15_2/bn/Shape_2"
  input: "conv15_2/bn/strided_slice_2/stack"
  input: "conv15_2/bn/strided_slice_2/stack_1"
  input: "conv15_2/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv15_2/bn/Rank/packed"
  op: "Pack"
  input: "conv15_2/bn/strided_slice"
  input: "conv15_2/bn/strided_slice_1"
  input: "conv15_2/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv15_2/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_2/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv15_2/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_2/bn/range"
  op: "Range"
  input: "conv15_2/bn/range/start"
  input: "conv15_2/bn/Rank"
  input: "conv15_2/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_2/bn/Prod/input"
  op: "Pack"
  input: "conv15_2/bn/strided_slice"
  input: "conv15_2/bn/strided_slice_1"
  input: "conv15_2/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv15_2/bn/Prod"
  op: "Prod"
  input: "conv15_2/bn/Prod/input"
  input: "conv15_2/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2/bn/Cast"
  op: "Cast"
  input: "conv15_2/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_2/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv15_2/bn/sub"
  op: "Sub"
  input: "conv15_2/bn/Cast"
  input: "conv15_2/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2/bn/truediv"
  op: "RealDiv"
  input: "conv15_2/bn/Cast"
  input: "conv15_2/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2/bn/mul"
  op: "Mul"
  input: "conv15_2/bn/FusedBatchNorm:2"
  input: "conv15_2/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv15_2/bn/moving_mean/biased"
  input: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv15_2/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv15_2/bn/moving_mean/local_step"
  input: "conv15_2/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv15_2/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/sub"
  op: "Sub"
  input: "conv15_2/bn/moving_mean/biased/read"
  input: "conv15_2/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/mul"
  op: "Mul"
  input: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/sub"
  input: "conv15_2/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/conv15_2/bn/moving_mean"
  op: "AssignSub"
  input: "conv15_2/bn/moving_mean/biased"
  input: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv15_2/bn/moving_mean/local_step"
  input: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/read"
  op: "Identity"
  input: "conv15_2/bn/moving_mean/biased"
  input: "^conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/AssignAdd"
  input: "^conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/conv15_2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/AssignAdd"
  input: "^conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/conv15_2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/sub_1/x"
  input: "conv15_2/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv15_2/bn/moving_mean/local_step"
  input: "^conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/AssignAdd"
  input: "^conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/conv15_2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/sub_1"
  input: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/AssignAdd"
  input: "^conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/conv15_2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/sub_2/x"
  input: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/read"
  input: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv15_2/bn/moving_mean/read"
  input: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv15_2/bn/moving_mean"
  input: "conv15_2/bn/AssignMovingAvg/conv15_2/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv15_2/bn/moving_variance/biased"
  input: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv15_2/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv15_2/bn/moving_variance/local_step"
  input: "conv15_2/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv15_2/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/sub"
  op: "Sub"
  input: "conv15_2/bn/moving_variance/biased/read"
  input: "conv15_2/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/mul"
  op: "Mul"
  input: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/sub"
  input: "conv15_2/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/conv15_2/bn/moving_variance"
  op: "AssignSub"
  input: "conv15_2/bn/moving_variance/biased"
  input: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv15_2/bn/moving_variance/local_step"
  input: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/read"
  op: "Identity"
  input: "conv15_2/bn/moving_variance/biased"
  input: "^conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/AssignAdd"
  input: "^conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/conv15_2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/AssignAdd"
  input: "^conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/conv15_2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/sub_1/x"
  input: "conv15_2/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv15_2/bn/moving_variance/local_step"
  input: "^conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/AssignAdd"
  input: "^conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/conv15_2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/sub_1"
  input: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/AssignAdd"
  input: "^conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/conv15_2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/sub_2/x"
  input: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/read"
  input: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv15_2/bn/moving_variance/read"
  input: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv15_2/bn/moving_variance"
  input: "conv15_2/bn/AssignMovingAvg_1/conv15_2/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv15_2/convolution"
  input: "conv15_2/bn/gamma/read"
  input: "conv15_2/bn/beta/read"
  input: "conv15_2/bn/moving_mean/read"
  input: "conv15_2/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "relu_conv7_2/Relu"
  op: "Relu"
  input: "conv15_2/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10048405081033707
      }
    }
  }
}
node {
  name: "conv16_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv16_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3380358
    }
  }
}
node {
  name: "conv16_1/truncated_normal/mul"
  op: "Mul"
  input: "conv16_1/truncated_normal/TruncatedNormal"
  input: "conv16_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1/truncated_normal"
  op: "Add"
  input: "conv16_1/truncated_normal/mul"
  input: "conv16_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/kernel/Assign"
  op: "Assign"
  input: "conv16_1/kernel"
  input: "conv16_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/kernel/read"
  op: "Identity"
  input: "conv16_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/kernel"
      }
    }
  }
}
node {
  name: "conv16_1/weight_regularizer/Square"
  op: "Square"
  input: "conv16_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv16_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv16_1/weight_regularizer/mul/x"
  input: "conv16_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv16_1/weight_regularizer/mul"
  input: "conv16_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_1/weight_regularizer/add"
  op: "Add"
  input: "conv16_1/weight_regularizer/add/x"
  input: "conv16_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_1/convolution"
  op: "Conv2D"
  input: "relu_conv7_2/Relu"
  input: "conv16_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_1/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/bn/gamma/Assign"
  op: "Assign"
  input: "conv16_1/bn/gamma"
  input: "conv16_1/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn/gamma/read"
  op: "Identity"
  input: "conv16_1/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/gamma"
      }
    }
  }
}
node {
  name: "conv16_1/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_1/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/bn/beta/Assign"
  op: "Assign"
  input: "conv16_1/bn/beta"
  input: "conv16_1/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn/beta/read"
  op: "Identity"
  input: "conv16_1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/beta"
      }
    }
  }
}
node {
  name: "conv16_1/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv16_1/bn/moving_mean"
  input: "conv16_1/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn/moving_mean/read"
  op: "Identity"
  input: "conv16_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv16_1/bn/moving_variance"
  input: "conv16_1/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn/moving_variance/read"
  op: "Identity"
  input: "conv16_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv16_1/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv16_1/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv16_1/convolution"
  input: "conv16_1/bn/gamma/read"
  input: "conv16_1/bn/beta/read"
  input: "conv16_1/bn/Const_4"
  input: "conv16_1/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn/Shape"
  op: "Shape"
  input: "conv16_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_1/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv16_1/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_1/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_1/bn/strided_slice"
  op: "StridedSlice"
  input: "conv16_1/bn/Shape"
  input: "conv16_1/bn/strided_slice/stack"
  input: "conv16_1/bn/strided_slice/stack_1"
  input: "conv16_1/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv16_1/bn/Shape_1"
  op: "Shape"
  input: "conv16_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_1/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_1/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv16_1/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_1/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv16_1/bn/Shape_1"
  input: "conv16_1/bn/strided_slice_1/stack"
  input: "conv16_1/bn/strided_slice_1/stack_1"
  input: "conv16_1/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv16_1/bn/Shape_2"
  op: "Shape"
  input: "conv16_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_1/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv16_1/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv16_1/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_1/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv16_1/bn/Shape_2"
  input: "conv16_1/bn/strided_slice_2/stack"
  input: "conv16_1/bn/strided_slice_2/stack_1"
  input: "conv16_1/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv16_1/bn/Rank/packed"
  op: "Pack"
  input: "conv16_1/bn/strided_slice"
  input: "conv16_1/bn/strided_slice_1"
  input: "conv16_1/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv16_1/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_1/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv16_1/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_1/bn/range"
  op: "Range"
  input: "conv16_1/bn/range/start"
  input: "conv16_1/bn/Rank"
  input: "conv16_1/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_1/bn/Prod/input"
  op: "Pack"
  input: "conv16_1/bn/strided_slice"
  input: "conv16_1/bn/strided_slice_1"
  input: "conv16_1/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv16_1/bn/Prod"
  op: "Prod"
  input: "conv16_1/bn/Prod/input"
  input: "conv16_1/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_1/bn/Cast"
  op: "Cast"
  input: "conv16_1/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_1/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv16_1/bn/sub"
  op: "Sub"
  input: "conv16_1/bn/Cast"
  input: "conv16_1/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1/bn/truediv"
  op: "RealDiv"
  input: "conv16_1/bn/Cast"
  input: "conv16_1/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1/bn/mul"
  op: "Mul"
  input: "conv16_1/bn/FusedBatchNorm:2"
  input: "conv16_1/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_1/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv16_1/bn/moving_mean/biased"
  input: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv16_1/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_1/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv16_1/bn/moving_mean/local_step"
  input: "conv16_1/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv16_1/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/sub"
  op: "Sub"
  input: "conv16_1/bn/moving_mean/biased/read"
  input: "conv16_1/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/mul"
  op: "Mul"
  input: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/sub"
  input: "conv16_1/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/conv16_1/bn/moving_mean"
  op: "AssignSub"
  input: "conv16_1/bn/moving_mean/biased"
  input: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv16_1/bn/moving_mean/local_step"
  input: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/read"
  op: "Identity"
  input: "conv16_1/bn/moving_mean/biased"
  input: "^conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/AssignAdd"
  input: "^conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/conv16_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/AssignAdd"
  input: "^conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/conv16_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/sub_1/x"
  input: "conv16_1/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv16_1/bn/moving_mean/local_step"
  input: "^conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/AssignAdd"
  input: "^conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/conv16_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/sub_1"
  input: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/AssignAdd"
  input: "^conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/conv16_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/sub_2/x"
  input: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/read"
  input: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv16_1/bn/moving_mean/read"
  input: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv16_1/bn/moving_mean"
  input: "conv16_1/bn/AssignMovingAvg/conv16_1/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_1/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv16_1/bn/moving_variance/biased"
  input: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv16_1/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_1/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv16_1/bn/moving_variance/local_step"
  input: "conv16_1/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv16_1/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/sub"
  op: "Sub"
  input: "conv16_1/bn/moving_variance/biased/read"
  input: "conv16_1/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/mul"
  op: "Mul"
  input: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/sub"
  input: "conv16_1/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/conv16_1/bn/moving_variance"
  op: "AssignSub"
  input: "conv16_1/bn/moving_variance/biased"
  input: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv16_1/bn/moving_variance/local_step"
  input: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/read"
  op: "Identity"
  input: "conv16_1/bn/moving_variance/biased"
  input: "^conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/AssignAdd"
  input: "^conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/conv16_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/AssignAdd"
  input: "^conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/conv16_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/sub_1/x"
  input: "conv16_1/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv16_1/bn/moving_variance/local_step"
  input: "^conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/AssignAdd"
  input: "^conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/conv16_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/sub_1"
  input: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/AssignAdd"
  input: "^conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/conv16_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/sub_2/x"
  input: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/read"
  input: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv16_1/bn/moving_variance/read"
  input: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv16_1/bn/moving_variance"
  input: "conv16_1/bn/AssignMovingAvg_1/conv16_1/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_1/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv16_1/convolution"
  input: "conv16_1/bn/gamma/read"
  input: "conv16_1/bn/beta/read"
  input: "conv16_1/bn/moving_mean/read"
  input: "conv16_1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "relu_conv8_1/Relu"
  op: "Relu"
  input: "conv16_1/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_padding/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv8_padding/Pad"
  op: "Pad"
  input: "relu_conv8_1/Relu"
  input: "conv8_padding/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_2/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv16_2/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04736863449215889
      }
    }
  }
}
node {
  name: "conv16_2/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv16_2/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2208372
    }
  }
}
node {
  name: "conv16_2/truncated_normal/mul"
  op: "Mul"
  input: "conv16_2/truncated_normal/TruncatedNormal"
  input: "conv16_2/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2/truncated_normal"
  op: "Add"
  input: "conv16_2/truncated_normal/mul"
  input: "conv16_2/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/kernel/Assign"
  op: "Assign"
  input: "conv16_2/kernel"
  input: "conv16_2/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/kernel/read"
  op: "Identity"
  input: "conv16_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/kernel"
      }
    }
  }
}
node {
  name: "conv16_2/weight_regularizer/Square"
  op: "Square"
  input: "conv16_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv16_2/weight_regularizer/mul"
  op: "Mul"
  input: "conv16_2/weight_regularizer/mul/x"
  input: "conv16_2/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_2/weight_regularizer/Sum"
  op: "Sum"
  input: "conv16_2/weight_regularizer/mul"
  input: "conv16_2/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2/weight_regularizer/add"
  op: "Add"
  input: "conv16_2/weight_regularizer/add/x"
  input: "conv16_2/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_2/convolution"
  op: "Conv2D"
  input: "conv8_padding/Pad"
  input: "conv16_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_2/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/bn/gamma/Assign"
  op: "Assign"
  input: "conv16_2/bn/gamma"
  input: "conv16_2/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn/gamma/read"
  op: "Identity"
  input: "conv16_2/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/gamma"
      }
    }
  }
}
node {
  name: "conv16_2/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/bn/beta/Assign"
  op: "Assign"
  input: "conv16_2/bn/beta"
  input: "conv16_2/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn/beta/read"
  op: "Identity"
  input: "conv16_2/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/beta"
      }
    }
  }
}
node {
  name: "conv16_2/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv16_2/bn/moving_mean"
  input: "conv16_2/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn/moving_mean/read"
  op: "Identity"
  input: "conv16_2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_2/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv16_2/bn/moving_variance"
  input: "conv16_2/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn/moving_variance/read"
  op: "Identity"
  input: "conv16_2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv16_2/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv16_2/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv16_2/convolution"
  input: "conv16_2/bn/gamma/read"
  input: "conv16_2/bn/beta/read"
  input: "conv16_2/bn/Const_4"
  input: "conv16_2/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn/Shape"
  op: "Shape"
  input: "conv16_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_2/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv16_2/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_2/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_2/bn/strided_slice"
  op: "StridedSlice"
  input: "conv16_2/bn/Shape"
  input: "conv16_2/bn/strided_slice/stack"
  input: "conv16_2/bn/strided_slice/stack_1"
  input: "conv16_2/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv16_2/bn/Shape_1"
  op: "Shape"
  input: "conv16_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_2/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_2/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv16_2/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_2/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv16_2/bn/Shape_1"
  input: "conv16_2/bn/strided_slice_1/stack"
  input: "conv16_2/bn/strided_slice_1/stack_1"
  input: "conv16_2/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv16_2/bn/Shape_2"
  op: "Shape"
  input: "conv16_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_2/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv16_2/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv16_2/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_2/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv16_2/bn/Shape_2"
  input: "conv16_2/bn/strided_slice_2/stack"
  input: "conv16_2/bn/strided_slice_2/stack_1"
  input: "conv16_2/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv16_2/bn/Rank/packed"
  op: "Pack"
  input: "conv16_2/bn/strided_slice"
  input: "conv16_2/bn/strided_slice_1"
  input: "conv16_2/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv16_2/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_2/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv16_2/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_2/bn/range"
  op: "Range"
  input: "conv16_2/bn/range/start"
  input: "conv16_2/bn/Rank"
  input: "conv16_2/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_2/bn/Prod/input"
  op: "Pack"
  input: "conv16_2/bn/strided_slice"
  input: "conv16_2/bn/strided_slice_1"
  input: "conv16_2/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv16_2/bn/Prod"
  op: "Prod"
  input: "conv16_2/bn/Prod/input"
  input: "conv16_2/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2/bn/Cast"
  op: "Cast"
  input: "conv16_2/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_2/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv16_2/bn/sub"
  op: "Sub"
  input: "conv16_2/bn/Cast"
  input: "conv16_2/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2/bn/truediv"
  op: "RealDiv"
  input: "conv16_2/bn/Cast"
  input: "conv16_2/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2/bn/mul"
  op: "Mul"
  input: "conv16_2/bn/FusedBatchNorm:2"
  input: "conv16_2/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv16_2/bn/moving_mean/biased"
  input: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv16_2/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv16_2/bn/moving_mean/local_step"
  input: "conv16_2/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv16_2/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/sub"
  op: "Sub"
  input: "conv16_2/bn/moving_mean/biased/read"
  input: "conv16_2/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/mul"
  op: "Mul"
  input: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/sub"
  input: "conv16_2/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/conv16_2/bn/moving_mean"
  op: "AssignSub"
  input: "conv16_2/bn/moving_mean/biased"
  input: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv16_2/bn/moving_mean/local_step"
  input: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/read"
  op: "Identity"
  input: "conv16_2/bn/moving_mean/biased"
  input: "^conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/AssignAdd"
  input: "^conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/conv16_2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/AssignAdd"
  input: "^conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/conv16_2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/sub_1/x"
  input: "conv16_2/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv16_2/bn/moving_mean/local_step"
  input: "^conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/AssignAdd"
  input: "^conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/conv16_2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/sub_1"
  input: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/AssignAdd"
  input: "^conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/conv16_2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/sub_2/x"
  input: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/read"
  input: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv16_2/bn/moving_mean/read"
  input: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv16_2/bn/moving_mean"
  input: "conv16_2/bn/AssignMovingAvg/conv16_2/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv16_2/bn/moving_variance/biased"
  input: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv16_2/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv16_2/bn/moving_variance/local_step"
  input: "conv16_2/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv16_2/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/sub"
  op: "Sub"
  input: "conv16_2/bn/moving_variance/biased/read"
  input: "conv16_2/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/mul"
  op: "Mul"
  input: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/sub"
  input: "conv16_2/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/conv16_2/bn/moving_variance"
  op: "AssignSub"
  input: "conv16_2/bn/moving_variance/biased"
  input: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv16_2/bn/moving_variance/local_step"
  input: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/read"
  op: "Identity"
  input: "conv16_2/bn/moving_variance/biased"
  input: "^conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/AssignAdd"
  input: "^conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/conv16_2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/AssignAdd"
  input: "^conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/conv16_2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/sub_1/x"
  input: "conv16_2/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv16_2/bn/moving_variance/local_step"
  input: "^conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/AssignAdd"
  input: "^conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/conv16_2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/sub_1"
  input: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/AssignAdd"
  input: "^conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/conv16_2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/sub_2/x"
  input: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/read"
  input: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv16_2/bn/moving_variance/read"
  input: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv16_2/bn/moving_variance"
  input: "conv16_2/bn/AssignMovingAvg_1/conv16_2/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv16_2/convolution"
  input: "conv16_2/bn/gamma/read"
  input: "conv16_2/bn/beta/read"
  input: "conv16_2/bn/moving_mean/read"
  input: "conv16_2/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "relu_conv8_2/Relu"
  op: "Relu"
  input: "conv16_2/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10048405081033707
      }
    }
  }
}
node {
  name: "conv17_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv17_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5208910
    }
  }
}
node {
  name: "conv17_1/truncated_normal/mul"
  op: "Mul"
  input: "conv17_1/truncated_normal/TruncatedNormal"
  input: "conv17_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1/truncated_normal"
  op: "Add"
  input: "conv17_1/truncated_normal/mul"
  input: "conv17_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/kernel/Assign"
  op: "Assign"
  input: "conv17_1/kernel"
  input: "conv17_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/kernel/read"
  op: "Identity"
  input: "conv17_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/kernel"
      }
    }
  }
}
node {
  name: "conv17_1/weight_regularizer/Square"
  op: "Square"
  input: "conv17_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv17_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv17_1/weight_regularizer/mul/x"
  input: "conv17_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv17_1/weight_regularizer/mul"
  input: "conv17_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_1/weight_regularizer/add"
  op: "Add"
  input: "conv17_1/weight_regularizer/add/x"
  input: "conv17_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_1/convolution"
  op: "Conv2D"
  input: "relu_conv8_2/Relu"
  input: "conv17_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_1/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/bn/gamma/Assign"
  op: "Assign"
  input: "conv17_1/bn/gamma"
  input: "conv17_1/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn/gamma/read"
  op: "Identity"
  input: "conv17_1/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/gamma"
      }
    }
  }
}
node {
  name: "conv17_1/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_1/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/bn/beta/Assign"
  op: "Assign"
  input: "conv17_1/bn/beta"
  input: "conv17_1/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn/beta/read"
  op: "Identity"
  input: "conv17_1/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/beta"
      }
    }
  }
}
node {
  name: "conv17_1/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_1/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv17_1/bn/moving_mean"
  input: "conv17_1/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn/moving_mean/read"
  op: "Identity"
  input: "conv17_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_1/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv17_1/bn/moving_variance"
  input: "conv17_1/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn/moving_variance/read"
  op: "Identity"
  input: "conv17_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv17_1/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv17_1/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv17_1/convolution"
  input: "conv17_1/bn/gamma/read"
  input: "conv17_1/bn/beta/read"
  input: "conv17_1/bn/Const_4"
  input: "conv17_1/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn/Shape"
  op: "Shape"
  input: "conv17_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_1/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv17_1/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_1/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_1/bn/strided_slice"
  op: "StridedSlice"
  input: "conv17_1/bn/Shape"
  input: "conv17_1/bn/strided_slice/stack"
  input: "conv17_1/bn/strided_slice/stack_1"
  input: "conv17_1/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv17_1/bn/Shape_1"
  op: "Shape"
  input: "conv17_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_1/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_1/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv17_1/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_1/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv17_1/bn/Shape_1"
  input: "conv17_1/bn/strided_slice_1/stack"
  input: "conv17_1/bn/strided_slice_1/stack_1"
  input: "conv17_1/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv17_1/bn/Shape_2"
  op: "Shape"
  input: "conv17_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_1/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv17_1/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv17_1/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_1/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv17_1/bn/Shape_2"
  input: "conv17_1/bn/strided_slice_2/stack"
  input: "conv17_1/bn/strided_slice_2/stack_1"
  input: "conv17_1/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv17_1/bn/Rank/packed"
  op: "Pack"
  input: "conv17_1/bn/strided_slice"
  input: "conv17_1/bn/strided_slice_1"
  input: "conv17_1/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv17_1/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_1/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv17_1/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_1/bn/range"
  op: "Range"
  input: "conv17_1/bn/range/start"
  input: "conv17_1/bn/Rank"
  input: "conv17_1/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_1/bn/Prod/input"
  op: "Pack"
  input: "conv17_1/bn/strided_slice"
  input: "conv17_1/bn/strided_slice_1"
  input: "conv17_1/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv17_1/bn/Prod"
  op: "Prod"
  input: "conv17_1/bn/Prod/input"
  input: "conv17_1/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_1/bn/Cast"
  op: "Cast"
  input: "conv17_1/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_1/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv17_1/bn/sub"
  op: "Sub"
  input: "conv17_1/bn/Cast"
  input: "conv17_1/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1/bn/truediv"
  op: "RealDiv"
  input: "conv17_1/bn/Cast"
  input: "conv17_1/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1/bn/mul"
  op: "Mul"
  input: "conv17_1/bn/FusedBatchNorm:2"
  input: "conv17_1/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_1/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv17_1/bn/moving_mean/biased"
  input: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv17_1/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_1/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv17_1/bn/moving_mean/local_step"
  input: "conv17_1/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv17_1/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/sub"
  op: "Sub"
  input: "conv17_1/bn/moving_mean/biased/read"
  input: "conv17_1/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/mul"
  op: "Mul"
  input: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/sub"
  input: "conv17_1/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/conv17_1/bn/moving_mean"
  op: "AssignSub"
  input: "conv17_1/bn/moving_mean/biased"
  input: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv17_1/bn/moving_mean/local_step"
  input: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/read"
  op: "Identity"
  input: "conv17_1/bn/moving_mean/biased"
  input: "^conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/AssignAdd"
  input: "^conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/conv17_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/AssignAdd"
  input: "^conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/conv17_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/sub_1/x"
  input: "conv17_1/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv17_1/bn/moving_mean/local_step"
  input: "^conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/AssignAdd"
  input: "^conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/conv17_1/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/sub_1"
  input: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/AssignAdd"
  input: "^conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/conv17_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/sub_2/x"
  input: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/read"
  input: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv17_1/bn/moving_mean/read"
  input: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv17_1/bn/moving_mean"
  input: "conv17_1/bn/AssignMovingAvg/conv17_1/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_1/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv17_1/bn/moving_variance/biased"
  input: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv17_1/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_1/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv17_1/bn/moving_variance/local_step"
  input: "conv17_1/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv17_1/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/sub"
  op: "Sub"
  input: "conv17_1/bn/moving_variance/biased/read"
  input: "conv17_1/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/mul"
  op: "Mul"
  input: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/sub"
  input: "conv17_1/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/conv17_1/bn/moving_variance"
  op: "AssignSub"
  input: "conv17_1/bn/moving_variance/biased"
  input: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv17_1/bn/moving_variance/local_step"
  input: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/read"
  op: "Identity"
  input: "conv17_1/bn/moving_variance/biased"
  input: "^conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/AssignAdd"
  input: "^conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/conv17_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/AssignAdd"
  input: "^conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/conv17_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/sub_1/x"
  input: "conv17_1/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv17_1/bn/moving_variance/local_step"
  input: "^conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/AssignAdd"
  input: "^conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/conv17_1/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/sub_1"
  input: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/AssignAdd"
  input: "^conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/conv17_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/sub_2/x"
  input: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/read"
  input: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv17_1/bn/moving_variance/read"
  input: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv17_1/bn/moving_variance"
  input: "conv17_1/bn/AssignMovingAvg_1/conv17_1/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_1/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv17_1/convolution"
  input: "conv17_1/bn/gamma/read"
  input: "conv17_1/bn/beta/read"
  input: "conv17_1/bn/moving_mean/read"
  input: "conv17_1/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "relu_conv9_1/Relu"
  op: "Relu"
  input: "conv17_1/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_padding/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv9_padding/Pad"
  op: "Pad"
  input: "relu_conv9_1/Relu"
  input: "conv9_padding/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_2/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06698936223983765
      }
    }
  }
}
node {
  name: "conv17_2/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv17_2/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9085857
    }
  }
}
node {
  name: "conv17_2/truncated_normal/mul"
  op: "Mul"
  input: "conv17_2/truncated_normal/TruncatedNormal"
  input: "conv17_2/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2/truncated_normal"
  op: "Add"
  input: "conv17_2/truncated_normal/mul"
  input: "conv17_2/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/kernel/Assign"
  op: "Assign"
  input: "conv17_2/kernel"
  input: "conv17_2/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/kernel/read"
  op: "Identity"
  input: "conv17_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/kernel"
      }
    }
  }
}
node {
  name: "conv17_2/weight_regularizer/Square"
  op: "Square"
  input: "conv17_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv17_2/weight_regularizer/mul"
  op: "Mul"
  input: "conv17_2/weight_regularizer/mul/x"
  input: "conv17_2/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2/weight_regularizer/Sum"
  op: "Sum"
  input: "conv17_2/weight_regularizer/mul"
  input: "conv17_2/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2/weight_regularizer/add"
  op: "Add"
  input: "conv17_2/weight_regularizer/add/x"
  input: "conv17_2/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2/convolution"
  op: "Conv2D"
  input: "conv9_padding/Pad"
  input: "conv17_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_2/bn/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/bn/gamma/Assign"
  op: "Assign"
  input: "conv17_2/bn/gamma"
  input: "conv17_2/bn/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn/gamma/read"
  op: "Identity"
  input: "conv17_2/bn/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/gamma"
      }
    }
  }
}
node {
  name: "conv17_2/bn/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2/bn/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/bn/beta/Assign"
  op: "Assign"
  input: "conv17_2/bn/beta"
  input: "conv17_2/bn/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn/beta/read"
  op: "Identity"
  input: "conv17_2/bn/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/beta"
      }
    }
  }
}
node {
  name: "conv17_2/bn/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2/bn/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/bn/moving_mean/Assign"
  op: "Assign"
  input: "conv17_2/bn/moving_mean"
  input: "conv17_2/bn/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn/moving_mean/read"
  op: "Identity"
  input: "conv17_2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_2/bn/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/bn/moving_variance/Assign"
  op: "Assign"
  input: "conv17_2/bn/moving_variance"
  input: "conv17_2/bn/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn/moving_variance/read"
  op: "Identity"
  input: "conv17_2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv17_2/bn/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv17_2/bn/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv17_2/convolution"
  input: "conv17_2/bn/gamma/read"
  input: "conv17_2/bn/beta/read"
  input: "conv17_2/bn/Const_4"
  input: "conv17_2/bn/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn/Shape"
  op: "Shape"
  input: "conv17_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_2/bn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv17_2/bn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_2/bn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_2/bn/strided_slice"
  op: "StridedSlice"
  input: "conv17_2/bn/Shape"
  input: "conv17_2/bn/strided_slice/stack"
  input: "conv17_2/bn/strided_slice/stack_1"
  input: "conv17_2/bn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv17_2/bn/Shape_1"
  op: "Shape"
  input: "conv17_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_2/bn/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_2/bn/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv17_2/bn/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_2/bn/strided_slice_1"
  op: "StridedSlice"
  input: "conv17_2/bn/Shape_1"
  input: "conv17_2/bn/strided_slice_1/stack"
  input: "conv17_2/bn/strided_slice_1/stack_1"
  input: "conv17_2/bn/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv17_2/bn/Shape_2"
  op: "Shape"
  input: "conv17_2/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_2/bn/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv17_2/bn/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv17_2/bn/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_2/bn/strided_slice_2"
  op: "StridedSlice"
  input: "conv17_2/bn/Shape_2"
  input: "conv17_2/bn/strided_slice_2/stack"
  input: "conv17_2/bn/strided_slice_2/stack_1"
  input: "conv17_2/bn/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv17_2/bn/Rank/packed"
  op: "Pack"
  input: "conv17_2/bn/strided_slice"
  input: "conv17_2/bn/strided_slice_1"
  input: "conv17_2/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv17_2/bn/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_2/bn/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv17_2/bn/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_2/bn/range"
  op: "Range"
  input: "conv17_2/bn/range/start"
  input: "conv17_2/bn/Rank"
  input: "conv17_2/bn/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_2/bn/Prod/input"
  op: "Pack"
  input: "conv17_2/bn/strided_slice"
  input: "conv17_2/bn/strided_slice_1"
  input: "conv17_2/bn/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv17_2/bn/Prod"
  op: "Prod"
  input: "conv17_2/bn/Prod/input"
  input: "conv17_2/bn/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2/bn/Cast"
  op: "Cast"
  input: "conv17_2/bn/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_2/bn/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv17_2/bn/sub"
  op: "Sub"
  input: "conv17_2/bn/Cast"
  input: "conv17_2/bn/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2/bn/truediv"
  op: "RealDiv"
  input: "conv17_2/bn/Cast"
  input: "conv17_2/bn/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2/bn/mul"
  op: "Mul"
  input: "conv17_2/bn/FusedBatchNorm:2"
  input: "conv17_2/bn/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2/bn/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/bn/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv17_2/bn/moving_mean/biased"
  input: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn/moving_mean/biased/read"
  op: "Identity"
  input: "conv17_2/bn/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2/bn/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/bn/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv17_2/bn/moving_mean/local_step"
  input: "conv17_2/bn/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn/moving_mean/local_step/read"
  op: "Identity"
  input: "conv17_2/bn/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/sub"
  op: "Sub"
  input: "conv17_2/bn/moving_mean/biased/read"
  input: "conv17_2/bn/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/mul"
  op: "Mul"
  input: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/sub"
  input: "conv17_2/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/conv17_2/bn/moving_mean"
  op: "AssignSub"
  input: "conv17_2/bn/moving_mean/biased"
  input: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv17_2/bn/moving_mean/local_step"
  input: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/read"
  op: "Identity"
  input: "conv17_2/bn/moving_mean/biased"
  input: "^conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/AssignAdd"
  input: "^conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/conv17_2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/AssignAdd"
  input: "^conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/conv17_2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/sub_1"
  op: "Sub"
  input: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/sub_1/x"
  input: "conv17_2/bn/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/read_1"
  op: "Identity"
  input: "conv17_2/bn/moving_mean/local_step"
  input: "^conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/AssignAdd"
  input: "^conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/conv17_2/bn/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/Pow"
  op: "Pow"
  input: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/sub_1"
  input: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/AssignAdd"
  input: "^conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/conv17_2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/sub_2"
  op: "Sub"
  input: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/sub_2/x"
  input: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/truediv"
  op: "RealDiv"
  input: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/read"
  input: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/sub_3"
  op: "Sub"
  input: "conv17_2/bn/moving_mean/read"
  input: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg"
  op: "AssignSub"
  input: "conv17_2/bn/moving_mean"
  input: "conv17_2/bn/AssignMovingAvg/conv17_2/bn/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2/bn/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/bn/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv17_2/bn/moving_variance/biased"
  input: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn/moving_variance/biased/read"
  op: "Identity"
  input: "conv17_2/bn/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2/bn/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/bn/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv17_2/bn/moving_variance/local_step"
  input: "conv17_2/bn/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn/moving_variance/local_step/read"
  op: "Identity"
  input: "conv17_2/bn/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/sub"
  op: "Sub"
  input: "conv17_2/bn/moving_variance/biased/read"
  input: "conv17_2/bn/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/mul"
  op: "Mul"
  input: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/sub"
  input: "conv17_2/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/conv17_2/bn/moving_variance"
  op: "AssignSub"
  input: "conv17_2/bn/moving_variance/biased"
  input: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv17_2/bn/moving_variance/local_step"
  input: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/read"
  op: "Identity"
  input: "conv17_2/bn/moving_variance/biased"
  input: "^conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/AssignAdd"
  input: "^conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/conv17_2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/AssignAdd"
  input: "^conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/conv17_2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/sub_1"
  op: "Sub"
  input: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/sub_1/x"
  input: "conv17_2/bn/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/read_1"
  op: "Identity"
  input: "conv17_2/bn/moving_variance/local_step"
  input: "^conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/AssignAdd"
  input: "^conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/conv17_2/bn/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/Pow"
  op: "Pow"
  input: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/sub_1"
  input: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/AssignAdd"
  input: "^conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/conv17_2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/sub_2"
  op: "Sub"
  input: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/sub_2/x"
  input: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/truediv"
  op: "RealDiv"
  input: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/read"
  input: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/sub_3"
  op: "Sub"
  input: "conv17_2/bn/moving_variance/read"
  input: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv17_2/bn/moving_variance"
  input: "conv17_2/bn/AssignMovingAvg_1/conv17_2/bn/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2/bn/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv17_2/convolution"
  input: "conv17_2/bn/gamma/read"
  input: "conv17_2/bn/beta/read"
  input: "conv17_2/bn/moving_mean/read"
  input: "conv17_2/bn/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "relu_conv9_2/Relu"
  op: "Relu"
  input: "conv17_2/bn/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_conf/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\034\000\000\000"
      }
    }
  }
}
node {
  name: "conv11_mbox_conf/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11_mbox_conf/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07105295360088348
      }
    }
  }
}
node {
  name: "conv11_mbox_conf/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv11_mbox_conf/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7289676
    }
  }
}
node {
  name: "conv11_mbox_conf/truncated_normal/mul"
  op: "Mul"
  input: "conv11_mbox_conf/truncated_normal/TruncatedNormal"
  input: "conv11_mbox_conf/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_conf/truncated_normal"
  op: "Add"
  input: "conv11_mbox_conf/truncated_normal/mul"
  input: "conv11_mbox_conf/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_conf/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 28
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11_mbox_conf/kernel/Assign"
  op: "Assign"
  input: "conv11_mbox_conf/kernel"
  input: "conv11_mbox_conf/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_conf/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11_mbox_conf/kernel/read"
  op: "Identity"
  input: "conv11_mbox_conf/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_conf/kernel"
      }
    }
  }
}
node {
  name: "conv11_mbox_conf/weight_regularizer/Square"
  op: "Square"
  input: "conv11_mbox_conf/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_conf/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv11_mbox_conf/weight_regularizer/mul"
  op: "Mul"
  input: "conv11_mbox_conf/weight_regularizer/mul/x"
  input: "conv11_mbox_conf/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_conf/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv11_mbox_conf/weight_regularizer/Sum"
  op: "Sum"
  input: "conv11_mbox_conf/weight_regularizer/mul"
  input: "conv11_mbox_conf/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv11_mbox_conf/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11_mbox_conf/weight_regularizer/add"
  op: "Add"
  input: "conv11_mbox_conf/weight_regularizer/add/x"
  input: "conv11_mbox_conf/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_conf/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 28
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11_mbox_conf/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 28
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11_mbox_conf/bias/Assign"
  op: "Assign"
  input: "conv11_mbox_conf/bias"
  input: "conv11_mbox_conf/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_conf/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11_mbox_conf/bias/read"
  op: "Identity"
  input: "conv11_mbox_conf/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_conf/bias"
      }
    }
  }
}
node {
  name: "conv11_mbox_conf/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv11_mbox_conf/convolution"
  op: "Conv2D"
  input: "activation_23/Relu"
  input: "conv11_mbox_conf/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv11_mbox_conf/BiasAdd"
  op: "BiasAdd"
  input: "conv11_mbox_conf/convolution"
  input: "conv11_mbox_conf/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv13_mbox_conf/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "conv13_mbox_conf/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13_mbox_conf/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "conv13_mbox_conf/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv13_mbox_conf/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8019307
    }
  }
}
node {
  name: "conv13_mbox_conf/truncated_normal/mul"
  op: "Mul"
  input: "conv13_mbox_conf/truncated_normal/TruncatedNormal"
  input: "conv13_mbox_conf/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_conf/truncated_normal"
  op: "Add"
  input: "conv13_mbox_conf/truncated_normal/mul"
  input: "conv13_mbox_conf/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_conf/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13_mbox_conf/kernel/Assign"
  op: "Assign"
  input: "conv13_mbox_conf/kernel"
  input: "conv13_mbox_conf/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_conf/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13_mbox_conf/kernel/read"
  op: "Identity"
  input: "conv13_mbox_conf/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_conf/kernel"
      }
    }
  }
}
node {
  name: "conv13_mbox_conf/weight_regularizer/Square"
  op: "Square"
  input: "conv13_mbox_conf/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_conf/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv13_mbox_conf/weight_regularizer/mul"
  op: "Mul"
  input: "conv13_mbox_conf/weight_regularizer/mul/x"
  input: "conv13_mbox_conf/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_conf/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv13_mbox_conf/weight_regularizer/Sum"
  op: "Sum"
  input: "conv13_mbox_conf/weight_regularizer/mul"
  input: "conv13_mbox_conf/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv13_mbox_conf/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13_mbox_conf/weight_regularizer/add"
  op: "Add"
  input: "conv13_mbox_conf/weight_regularizer/add/x"
  input: "conv13_mbox_conf/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_conf/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 42
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13_mbox_conf/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13_mbox_conf/bias/Assign"
  op: "Assign"
  input: "conv13_mbox_conf/bias"
  input: "conv13_mbox_conf/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_conf/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13_mbox_conf/bias/read"
  op: "Identity"
  input: "conv13_mbox_conf/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_conf/bias"
      }
    }
  }
}
node {
  name: "conv13_mbox_conf/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv13_mbox_conf/convolution"
  op: "Conv2D"
  input: "activation_27/Relu"
  input: "conv13_mbox_conf/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv13_mbox_conf/BiasAdd"
  op: "BiasAdd"
  input: "conv13_mbox_conf/convolution"
  input: "conv13_mbox_conf/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv14_2_mbox_conf/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07105295360088348
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv14_2_mbox_conf/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 717347
    }
  }
}
node {
  name: "conv14_2_mbox_conf/truncated_normal/mul"
  op: "Mul"
  input: "conv14_2_mbox_conf/truncated_normal/TruncatedNormal"
  input: "conv14_2_mbox_conf/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_conf/truncated_normal"
  op: "Add"
  input: "conv14_2_mbox_conf/truncated_normal/mul"
  input: "conv14_2_mbox_conf/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_conf/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2_mbox_conf/kernel/Assign"
  op: "Assign"
  input: "conv14_2_mbox_conf/kernel"
  input: "conv14_2_mbox_conf/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_conf/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2_mbox_conf/kernel/read"
  op: "Identity"
  input: "conv14_2_mbox_conf/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_conf/kernel"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf/weight_regularizer/Square"
  op: "Square"
  input: "conv14_2_mbox_conf/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_conf/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf/weight_regularizer/mul"
  op: "Mul"
  input: "conv14_2_mbox_conf/weight_regularizer/mul/x"
  input: "conv14_2_mbox_conf/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_conf/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf/weight_regularizer/Sum"
  op: "Sum"
  input: "conv14_2_mbox_conf/weight_regularizer/mul"
  input: "conv14_2_mbox_conf/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2_mbox_conf/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf/weight_regularizer/add"
  op: "Add"
  input: "conv14_2_mbox_conf/weight_regularizer/add/x"
  input: "conv14_2_mbox_conf/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_conf/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 42
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2_mbox_conf/bias/Assign"
  op: "Assign"
  input: "conv14_2_mbox_conf/bias"
  input: "conv14_2_mbox_conf/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_conf/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2_mbox_conf/bias/read"
  op: "Identity"
  input: "conv14_2_mbox_conf/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_conf/bias"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf/convolution"
  op: "Conv2D"
  input: "relu_conv6_2/Relu"
  input: "conv14_2_mbox_conf/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2_mbox_conf/BiasAdd"
  op: "BiasAdd"
  input: "conv14_2_mbox_conf/convolution"
  input: "conv14_2_mbox_conf/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv15_2_mbox_conf/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10048405081033707
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv15_2_mbox_conf/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9565378
    }
  }
}
node {
  name: "conv15_2_mbox_conf/truncated_normal/mul"
  op: "Mul"
  input: "conv15_2_mbox_conf/truncated_normal/TruncatedNormal"
  input: "conv15_2_mbox_conf/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_conf/truncated_normal"
  op: "Add"
  input: "conv15_2_mbox_conf/truncated_normal/mul"
  input: "conv15_2_mbox_conf/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_conf/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2_mbox_conf/kernel/Assign"
  op: "Assign"
  input: "conv15_2_mbox_conf/kernel"
  input: "conv15_2_mbox_conf/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_conf/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2_mbox_conf/kernel/read"
  op: "Identity"
  input: "conv15_2_mbox_conf/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_conf/kernel"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf/weight_regularizer/Square"
  op: "Square"
  input: "conv15_2_mbox_conf/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_conf/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf/weight_regularizer/mul"
  op: "Mul"
  input: "conv15_2_mbox_conf/weight_regularizer/mul/x"
  input: "conv15_2_mbox_conf/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_conf/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf/weight_regularizer/Sum"
  op: "Sum"
  input: "conv15_2_mbox_conf/weight_regularizer/mul"
  input: "conv15_2_mbox_conf/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2_mbox_conf/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf/weight_regularizer/add"
  op: "Add"
  input: "conv15_2_mbox_conf/weight_regularizer/add/x"
  input: "conv15_2_mbox_conf/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_conf/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 42
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2_mbox_conf/bias/Assign"
  op: "Assign"
  input: "conv15_2_mbox_conf/bias"
  input: "conv15_2_mbox_conf/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_conf/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2_mbox_conf/bias/read"
  op: "Identity"
  input: "conv15_2_mbox_conf/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_conf/bias"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf/convolution"
  op: "Conv2D"
  input: "relu_conv7_2/Relu"
  input: "conv15_2_mbox_conf/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2_mbox_conf/BiasAdd"
  op: "BiasAdd"
  input: "conv15_2_mbox_conf/convolution"
  input: "conv15_2_mbox_conf/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv16_2_mbox_conf/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\034\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10048405081033707
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv16_2_mbox_conf/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3134044
    }
  }
}
node {
  name: "conv16_2_mbox_conf/truncated_normal/mul"
  op: "Mul"
  input: "conv16_2_mbox_conf/truncated_normal/TruncatedNormal"
  input: "conv16_2_mbox_conf/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_conf/truncated_normal"
  op: "Add"
  input: "conv16_2_mbox_conf/truncated_normal/mul"
  input: "conv16_2_mbox_conf/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_conf/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 28
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2_mbox_conf/kernel/Assign"
  op: "Assign"
  input: "conv16_2_mbox_conf/kernel"
  input: "conv16_2_mbox_conf/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_conf/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2_mbox_conf/kernel/read"
  op: "Identity"
  input: "conv16_2_mbox_conf/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_conf/kernel"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf/weight_regularizer/Square"
  op: "Square"
  input: "conv16_2_mbox_conf/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_conf/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf/weight_regularizer/mul"
  op: "Mul"
  input: "conv16_2_mbox_conf/weight_regularizer/mul/x"
  input: "conv16_2_mbox_conf/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_conf/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf/weight_regularizer/Sum"
  op: "Sum"
  input: "conv16_2_mbox_conf/weight_regularizer/mul"
  input: "conv16_2_mbox_conf/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2_mbox_conf/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf/weight_regularizer/add"
  op: "Add"
  input: "conv16_2_mbox_conf/weight_regularizer/add/x"
  input: "conv16_2_mbox_conf/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_conf/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 28
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 28
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2_mbox_conf/bias/Assign"
  op: "Assign"
  input: "conv16_2_mbox_conf/bias"
  input: "conv16_2_mbox_conf/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_conf/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2_mbox_conf/bias/read"
  op: "Identity"
  input: "conv16_2_mbox_conf/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_conf/bias"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf/convolution"
  op: "Conv2D"
  input: "relu_conv8_2/Relu"
  input: "conv16_2_mbox_conf/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2_mbox_conf/BiasAdd"
  op: "BiasAdd"
  input: "conv16_2_mbox_conf/convolution"
  input: "conv16_2_mbox_conf/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv17_2_mbox_conf/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\034\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14210590720176697
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv17_2_mbox_conf/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5846042
    }
  }
}
node {
  name: "conv17_2_mbox_conf/truncated_normal/mul"
  op: "Mul"
  input: "conv17_2_mbox_conf/truncated_normal/TruncatedNormal"
  input: "conv17_2_mbox_conf/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_conf/truncated_normal"
  op: "Add"
  input: "conv17_2_mbox_conf/truncated_normal/mul"
  input: "conv17_2_mbox_conf/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_conf/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 28
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2_mbox_conf/kernel/Assign"
  op: "Assign"
  input: "conv17_2_mbox_conf/kernel"
  input: "conv17_2_mbox_conf/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_conf/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2_mbox_conf/kernel/read"
  op: "Identity"
  input: "conv17_2_mbox_conf/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_conf/kernel"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf/weight_regularizer/Square"
  op: "Square"
  input: "conv17_2_mbox_conf/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_conf/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf/weight_regularizer/mul"
  op: "Mul"
  input: "conv17_2_mbox_conf/weight_regularizer/mul/x"
  input: "conv17_2_mbox_conf/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_conf/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf/weight_regularizer/Sum"
  op: "Sum"
  input: "conv17_2_mbox_conf/weight_regularizer/mul"
  input: "conv17_2_mbox_conf/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2_mbox_conf/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf/weight_regularizer/add"
  op: "Add"
  input: "conv17_2_mbox_conf/weight_regularizer/add/x"
  input: "conv17_2_mbox_conf/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_conf/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 28
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 28
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2_mbox_conf/bias/Assign"
  op: "Assign"
  input: "conv17_2_mbox_conf/bias"
  input: "conv17_2_mbox_conf/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_conf/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2_mbox_conf/bias/read"
  op: "Identity"
  input: "conv17_2_mbox_conf/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_conf/bias"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf/convolution"
  op: "Conv2D"
  input: "relu_conv9_2/Relu"
  input: "conv17_2_mbox_conf/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2_mbox_conf/BiasAdd"
  op: "BiasAdd"
  input: "conv17_2_mbox_conf/convolution"
  input: "conv17_2_mbox_conf/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv11_mbox_loc/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv11_mbox_loc/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11_mbox_loc/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07105295360088348
      }
    }
  }
}
node {
  name: "conv11_mbox_loc/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv11_mbox_loc/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5325453
    }
  }
}
node {
  name: "conv11_mbox_loc/truncated_normal/mul"
  op: "Mul"
  input: "conv11_mbox_loc/truncated_normal/TruncatedNormal"
  input: "conv11_mbox_loc/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_loc/truncated_normal"
  op: "Add"
  input: "conv11_mbox_loc/truncated_normal/mul"
  input: "conv11_mbox_loc/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_loc/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11_mbox_loc/kernel/Assign"
  op: "Assign"
  input: "conv11_mbox_loc/kernel"
  input: "conv11_mbox_loc/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_loc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11_mbox_loc/kernel/read"
  op: "Identity"
  input: "conv11_mbox_loc/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_loc/kernel"
      }
    }
  }
}
node {
  name: "conv11_mbox_loc/weight_regularizer/Square"
  op: "Square"
  input: "conv11_mbox_loc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_loc/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv11_mbox_loc/weight_regularizer/mul"
  op: "Mul"
  input: "conv11_mbox_loc/weight_regularizer/mul/x"
  input: "conv11_mbox_loc/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_loc/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv11_mbox_loc/weight_regularizer/Sum"
  op: "Sum"
  input: "conv11_mbox_loc/weight_regularizer/mul"
  input: "conv11_mbox_loc/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv11_mbox_loc/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11_mbox_loc/weight_regularizer/add"
  op: "Add"
  input: "conv11_mbox_loc/weight_regularizer/add/x"
  input: "conv11_mbox_loc/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_loc/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11_mbox_loc/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11_mbox_loc/bias/Assign"
  op: "Assign"
  input: "conv11_mbox_loc/bias"
  input: "conv11_mbox_loc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_loc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11_mbox_loc/bias/read"
  op: "Identity"
  input: "conv11_mbox_loc/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_loc/bias"
      }
    }
  }
}
node {
  name: "conv11_mbox_loc/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv11_mbox_loc/convolution"
  op: "Conv2D"
  input: "activation_23/Relu"
  input: "conv11_mbox_loc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv11_mbox_loc/BiasAdd"
  op: "BiasAdd"
  input: "conv11_mbox_loc/convolution"
  input: "conv11_mbox_loc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv13_mbox_loc/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "conv13_mbox_loc/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13_mbox_loc/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "conv13_mbox_loc/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv13_mbox_loc/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2003945
    }
  }
}
node {
  name: "conv13_mbox_loc/truncated_normal/mul"
  op: "Mul"
  input: "conv13_mbox_loc/truncated_normal/TruncatedNormal"
  input: "conv13_mbox_loc/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_loc/truncated_normal"
  op: "Add"
  input: "conv13_mbox_loc/truncated_normal/mul"
  input: "conv13_mbox_loc/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_loc/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13_mbox_loc/kernel/Assign"
  op: "Assign"
  input: "conv13_mbox_loc/kernel"
  input: "conv13_mbox_loc/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_loc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13_mbox_loc/kernel/read"
  op: "Identity"
  input: "conv13_mbox_loc/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_loc/kernel"
      }
    }
  }
}
node {
  name: "conv13_mbox_loc/weight_regularizer/Square"
  op: "Square"
  input: "conv13_mbox_loc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_loc/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv13_mbox_loc/weight_regularizer/mul"
  op: "Mul"
  input: "conv13_mbox_loc/weight_regularizer/mul/x"
  input: "conv13_mbox_loc/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_loc/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv13_mbox_loc/weight_regularizer/Sum"
  op: "Sum"
  input: "conv13_mbox_loc/weight_regularizer/mul"
  input: "conv13_mbox_loc/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv13_mbox_loc/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13_mbox_loc/weight_regularizer/add"
  op: "Add"
  input: "conv13_mbox_loc/weight_regularizer/add/x"
  input: "conv13_mbox_loc/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_loc/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13_mbox_loc/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13_mbox_loc/bias/Assign"
  op: "Assign"
  input: "conv13_mbox_loc/bias"
  input: "conv13_mbox_loc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_loc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13_mbox_loc/bias/read"
  op: "Identity"
  input: "conv13_mbox_loc/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_loc/bias"
      }
    }
  }
}
node {
  name: "conv13_mbox_loc/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv13_mbox_loc/convolution"
  op: "Conv2D"
  input: "activation_27/Relu"
  input: "conv13_mbox_loc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv13_mbox_loc/BiasAdd"
  op: "BiasAdd"
  input: "conv13_mbox_loc/convolution"
  input: "conv13_mbox_loc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv14_2_mbox_loc/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07105295360088348
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv14_2_mbox_loc/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7972149
    }
  }
}
node {
  name: "conv14_2_mbox_loc/truncated_normal/mul"
  op: "Mul"
  input: "conv14_2_mbox_loc/truncated_normal/TruncatedNormal"
  input: "conv14_2_mbox_loc/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_loc/truncated_normal"
  op: "Add"
  input: "conv14_2_mbox_loc/truncated_normal/mul"
  input: "conv14_2_mbox_loc/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_loc/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2_mbox_loc/kernel/Assign"
  op: "Assign"
  input: "conv14_2_mbox_loc/kernel"
  input: "conv14_2_mbox_loc/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_loc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2_mbox_loc/kernel/read"
  op: "Identity"
  input: "conv14_2_mbox_loc/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_loc/kernel"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc/weight_regularizer/Square"
  op: "Square"
  input: "conv14_2_mbox_loc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_loc/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc/weight_regularizer/mul"
  op: "Mul"
  input: "conv14_2_mbox_loc/weight_regularizer/mul/x"
  input: "conv14_2_mbox_loc/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_loc/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc/weight_regularizer/Sum"
  op: "Sum"
  input: "conv14_2_mbox_loc/weight_regularizer/mul"
  input: "conv14_2_mbox_loc/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2_mbox_loc/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc/weight_regularizer/add"
  op: "Add"
  input: "conv14_2_mbox_loc/weight_regularizer/add/x"
  input: "conv14_2_mbox_loc/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_loc/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2_mbox_loc/bias/Assign"
  op: "Assign"
  input: "conv14_2_mbox_loc/bias"
  input: "conv14_2_mbox_loc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_loc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2_mbox_loc/bias/read"
  op: "Identity"
  input: "conv14_2_mbox_loc/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_loc/bias"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc/convolution"
  op: "Conv2D"
  input: "relu_conv6_2/Relu"
  input: "conv14_2_mbox_loc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2_mbox_loc/BiasAdd"
  op: "BiasAdd"
  input: "conv14_2_mbox_loc/convolution"
  input: "conv14_2_mbox_loc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv15_2_mbox_loc/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10048405081033707
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv15_2_mbox_loc/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7172053
    }
  }
}
node {
  name: "conv15_2_mbox_loc/truncated_normal/mul"
  op: "Mul"
  input: "conv15_2_mbox_loc/truncated_normal/TruncatedNormal"
  input: "conv15_2_mbox_loc/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_loc/truncated_normal"
  op: "Add"
  input: "conv15_2_mbox_loc/truncated_normal/mul"
  input: "conv15_2_mbox_loc/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_loc/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2_mbox_loc/kernel/Assign"
  op: "Assign"
  input: "conv15_2_mbox_loc/kernel"
  input: "conv15_2_mbox_loc/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_loc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2_mbox_loc/kernel/read"
  op: "Identity"
  input: "conv15_2_mbox_loc/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_loc/kernel"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc/weight_regularizer/Square"
  op: "Square"
  input: "conv15_2_mbox_loc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_loc/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc/weight_regularizer/mul"
  op: "Mul"
  input: "conv15_2_mbox_loc/weight_regularizer/mul/x"
  input: "conv15_2_mbox_loc/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_loc/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc/weight_regularizer/Sum"
  op: "Sum"
  input: "conv15_2_mbox_loc/weight_regularizer/mul"
  input: "conv15_2_mbox_loc/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2_mbox_loc/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc/weight_regularizer/add"
  op: "Add"
  input: "conv15_2_mbox_loc/weight_regularizer/add/x"
  input: "conv15_2_mbox_loc/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_loc/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2_mbox_loc/bias/Assign"
  op: "Assign"
  input: "conv15_2_mbox_loc/bias"
  input: "conv15_2_mbox_loc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_loc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2_mbox_loc/bias/read"
  op: "Identity"
  input: "conv15_2_mbox_loc/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_loc/bias"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc/convolution"
  op: "Conv2D"
  input: "relu_conv7_2/Relu"
  input: "conv15_2_mbox_loc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2_mbox_loc/BiasAdd"
  op: "BiasAdd"
  input: "conv15_2_mbox_loc/convolution"
  input: "conv15_2_mbox_loc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv16_2_mbox_loc/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10048405081033707
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv16_2_mbox_loc/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6823054
    }
  }
}
node {
  name: "conv16_2_mbox_loc/truncated_normal/mul"
  op: "Mul"
  input: "conv16_2_mbox_loc/truncated_normal/TruncatedNormal"
  input: "conv16_2_mbox_loc/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_loc/truncated_normal"
  op: "Add"
  input: "conv16_2_mbox_loc/truncated_normal/mul"
  input: "conv16_2_mbox_loc/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_loc/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2_mbox_loc/kernel/Assign"
  op: "Assign"
  input: "conv16_2_mbox_loc/kernel"
  input: "conv16_2_mbox_loc/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_loc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2_mbox_loc/kernel/read"
  op: "Identity"
  input: "conv16_2_mbox_loc/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_loc/kernel"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc/weight_regularizer/Square"
  op: "Square"
  input: "conv16_2_mbox_loc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_loc/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc/weight_regularizer/mul"
  op: "Mul"
  input: "conv16_2_mbox_loc/weight_regularizer/mul/x"
  input: "conv16_2_mbox_loc/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_loc/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc/weight_regularizer/Sum"
  op: "Sum"
  input: "conv16_2_mbox_loc/weight_regularizer/mul"
  input: "conv16_2_mbox_loc/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2_mbox_loc/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc/weight_regularizer/add"
  op: "Add"
  input: "conv16_2_mbox_loc/weight_regularizer/add/x"
  input: "conv16_2_mbox_loc/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_loc/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2_mbox_loc/bias/Assign"
  op: "Assign"
  input: "conv16_2_mbox_loc/bias"
  input: "conv16_2_mbox_loc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_loc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2_mbox_loc/bias/read"
  op: "Identity"
  input: "conv16_2_mbox_loc/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_loc/bias"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc/convolution"
  op: "Conv2D"
  input: "relu_conv8_2/Relu"
  input: "conv16_2_mbox_loc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2_mbox_loc/BiasAdd"
  op: "BiasAdd"
  input: "conv16_2_mbox_loc/convolution"
  input: "conv16_2_mbox_loc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv17_2_mbox_loc/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14210590720176697
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv17_2_mbox_loc/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8859592
    }
  }
}
node {
  name: "conv17_2_mbox_loc/truncated_normal/mul"
  op: "Mul"
  input: "conv17_2_mbox_loc/truncated_normal/TruncatedNormal"
  input: "conv17_2_mbox_loc/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_loc/truncated_normal"
  op: "Add"
  input: "conv17_2_mbox_loc/truncated_normal/mul"
  input: "conv17_2_mbox_loc/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_loc/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2_mbox_loc/kernel/Assign"
  op: "Assign"
  input: "conv17_2_mbox_loc/kernel"
  input: "conv17_2_mbox_loc/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_loc/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2_mbox_loc/kernel/read"
  op: "Identity"
  input: "conv17_2_mbox_loc/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_loc/kernel"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc/weight_regularizer/Square"
  op: "Square"
  input: "conv17_2_mbox_loc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_loc/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc/weight_regularizer/mul"
  op: "Mul"
  input: "conv17_2_mbox_loc/weight_regularizer/mul/x"
  input: "conv17_2_mbox_loc/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_loc/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc/weight_regularizer/Sum"
  op: "Sum"
  input: "conv17_2_mbox_loc/weight_regularizer/mul"
  input: "conv17_2_mbox_loc/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2_mbox_loc/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc/weight_regularizer/add"
  op: "Add"
  input: "conv17_2_mbox_loc/weight_regularizer/add/x"
  input: "conv17_2_mbox_loc/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_loc/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2_mbox_loc/bias/Assign"
  op: "Assign"
  input: "conv17_2_mbox_loc/bias"
  input: "conv17_2_mbox_loc/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_loc/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2_mbox_loc/bias/read"
  op: "Identity"
  input: "conv17_2_mbox_loc/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_loc/bias"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc/convolution"
  op: "Conv2D"
  input: "relu_conv9_2/Relu"
  input: "conv17_2_mbox_loc/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2_mbox_loc/BiasAdd"
  op: "BiasAdd"
  input: "conv17_2_mbox_loc/convolution"
  input: "conv17_2_mbox_loc/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\016tZ<\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\211\210\210=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\211\210\210=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\211\210\210=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\211\210\210=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\211\210\210=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\211\210\210=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\211\210\210=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\211\210\210=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\211\210\210=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\211\210\210=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\211\210\210=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\211\210\210=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\211\210\210=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\211\210\210=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\211\210\210=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\211\210\210=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\211\210\210=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\211\210\210=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\211\210\210=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\211\210\210=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\211\210\210=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\211\210\210=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\211\210\210=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\211\210\210=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\214%\277=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\214%\277=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\214%\277=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<\217\302\365=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\217\302\365=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\217\302\365=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\217\302\365=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\217\302\365=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\217\302\365=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\217\302\365=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\217\302\365=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\217\302\365=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\217\302\365=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\217\302\365=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\217\302\365=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\217\302\365=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\217\302\365=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\217\302\365=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\217\302\365=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\217\302\365=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\217\302\365=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\217\302\365=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\217\302\365=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\217\302\365=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\217\302\365=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\217\302\365=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\217\302\365=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\311/\026>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\311/\026>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\311/\026>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\311/\026>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\311/\026>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\311/\026>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\311/\026>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\315\314L>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\315\314L>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\315\314L>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\350\264\201>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\350\264\201>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\350\264\201>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\350\264\201>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\350\264\201>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\350\264\201>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\350\264\201>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\350\264\201>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\253\252\252>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\253\252\252>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\253\252\252>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<\354Q\270>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\354Q\270>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\354Q\270>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\354Q\270>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\354Q\270>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\354Q\270>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\354Q\270>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\354Q\270>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\354Q\270>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\354Q\270>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\354Q\270>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\354Q\270>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\354Q\270>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\354Q\270>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\354Q\270>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\354Q\270>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\354Q\270>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\354Q\270>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\354Q\270>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\354Q\270>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\354Q\270>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\354Q\270>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\354Q\270>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\354Q\270>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<,\371\305>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>,\371\305>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>,\371\305>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>,\371\305>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>,\371\305>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>,\371\305>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\256G\341>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\256G\341>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\256G\341>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\256G\341>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\256G\341>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\256G\341>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\256G\341>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\256G\341>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\256G\341>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\256G\341>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\256G\341>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\256G\341>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\256G\341>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\256G\341>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\256G\341>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\256G\341>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\256G\341>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\256G\341>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\256G\341>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\256G\341>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\256G\341>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\256G\341>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\256G\341>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\256G\341>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<\357\356\356>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\357\356\356>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\357\356\356>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\357\356\356>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\357\356\356>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\357\356\356>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\357\356\356>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\357\356\356>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\357\356\356>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\357\356\356>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\357\356\356>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\357\356\356>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\357\356\356>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\357\356\356>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\357\356\356>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\357\356\356>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\357\356\356>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\357\356\356>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\357\356\356>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\357\356\356>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\357\356\356>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\357\356\356>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\357\356\356>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\357\356\356>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<0\226\374>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>0\226\374>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>0\226\374>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>m
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox/Shape"
  op: "Shape"
  input: "conv11_mbox_loc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox/strided_slice"
  op: "StridedSlice"
  input: "conv4_3_norm_mbox_priorbox/Shape"
  input: "conv4_3_norm_mbox_priorbox/strided_slice/stack"
  input: "conv4_3_norm_mbox_priorbox/strided_slice/stack_1"
  input: "conv4_3_norm_mbox_priorbox/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox/Tile/multiples"
  op: "Pack"
  input: "conv4_3_norm_mbox_priorbox/strided_slice"
  input: "conv4_3_norm_mbox_priorbox/Tile/multiples/1"
  input: "conv4_3_norm_mbox_priorbox/Tile/multiples/2"
  input: "conv4_3_norm_mbox_priorbox/Tile/multiples/3"
  input: "conv4_3_norm_mbox_priorbox/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox/Tile"
  op: "Tile"
  input: "conv4_3_norm_mbox_priorbox/Const"
  input: "conv4_3_norm_mbox_priorbox/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7_mbox_priorbox/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\016t\332<\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>"
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox/Shape"
  op: "Shape"
  input: "conv13_mbox_loc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7_mbox_priorbox/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox/strided_slice"
  op: "StridedSlice"
  input: "fc7_mbox_priorbox/Shape"
  input: "fc7_mbox_priorbox/strided_slice/stack"
  input: "fc7_mbox_priorbox/strided_slice/stack_1"
  input: "fc7_mbox_priorbox/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "fc7_mbox_priorbox/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox/Tile/multiples"
  op: "Pack"
  input: "fc7_mbox_priorbox/strided_slice"
  input: "fc7_mbox_priorbox/Tile/multiples/1"
  input: "fc7_mbox_priorbox/Tile/multiples/2"
  input: "fc7_mbox_priorbox/Tile/multiples/3"
  input: "fc7_mbox_priorbox/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "fc7_mbox_priorbox/Tile"
  op: "Tile"
  input: "fc7_mbox_priorbox/Const"
  input: "fc7_mbox_priorbox/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\016tZ=\016tZ=\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\016tZ=\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\016tZ=N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\016tZ=N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\016tZ=R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\016tZ=\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\016tZ=\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\016tZ=\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\016tZ=N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\016tZ=N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\016tZ=R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\016tZ=\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\016tZ=\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\016tZ=\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\016tZ=N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\016tZ=N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\016tZ=R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\016tZ=\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\016tZ=\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\016tZ=\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\016tZ=N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\016tZ=N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\016tZ=R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\016tZ=\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\016tZ=\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\016tZ=\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\016tZ=N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\016tZ=N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\016tZ=R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\016tZ=\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\n\327#>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\n\327#>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\n\327#>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\n\327#>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\n\327#>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\n\327#>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\n\327#>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\n\327#>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\n\327#>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\n\327#>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\n\327#>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\n\327#>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\n\327#>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\n\327#>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\n\327#>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\n\327#>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\n\327#>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\n\327#>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\n\327#>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\n\327#>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\n\327#>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\n\327#>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\n\327#>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\n\327#>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\n\327#>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\n\327#>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\n\327#>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\n\327#>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\n\327#>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\n\327#>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\211\210\210>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\211\210\210>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\211\210\210>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\211\210\210>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\211\210\210>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\211\210\210>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\211\210\210>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\211\210\210>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\211\210\210>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\211\210\210>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\211\210\210>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\211\210\210>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\211\210\210>\244p\275>\244pp\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\211\210\210>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\211\210\210>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\211\210\210>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\211\210\210>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\211\210\210>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\211\210\210>\244p\275>\244ptZ=\214%\277>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\214%\277>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\214%\277>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\214%\277>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\214%\277>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\214%\277>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\214%\277>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\214%\277>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\214%\277>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\214%\277>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\214%\277>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\214%\277>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\214%\277>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\214%\277>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\214%\277>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\214%\277>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\214%\277>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\214%\277>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\214%\277>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\214%\277>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\214%\277>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\214%\277>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\214%\277>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\214%\277>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\214%\277>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\214%\277>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\214%\277>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\214%\277>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\214%\277>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\214%\277>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\217\302\365>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\217\302\365>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\217\302\365>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\217\302\365>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\217\302\365>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\217\302\365>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\217\302\365>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\217\302\365>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\217\302\365>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\217\302\365>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\217\302\365>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\217\302\365>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\217\302\365>\244p\275>\244pp\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\217\302\365>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\217\302\365>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\217\302\365>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\217\302\365>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\217\302\365>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\217\302\365>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\217\302\365>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\217\302\365>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\217\302\365>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\217\302\365>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\217\302\365>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>"
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox/Shape"
  op: "Shape"
  input: "conv14_2_mbox_loc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox/strided_slice"
  op: "StridedSlice"
  input: "conv6_2_mbox_priorbox/Shape"
  input: "conv6_2_mbox_priorbox/strided_slice/stack"
  input: "conv6_2_mbox_priorbox/strided_slice/stack_1"
  input: "conv6_2_mbox_priorbox/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox/Tile/multiples"
  op: "Pack"
  input: "conv6_2_mbox_priorbox/strided_slice"
  input: "conv6_2_mbox_priorbox/Tile/multiples/1"
  input: "conv6_2_mbox_priorbox/Tile/multiples/2"
  input: "conv6_2_mbox_priorbox/Tile/multiples/3"
  input: "conv6_2_mbox_priorbox/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox/Tile"
  op: "Tile"
  input: "conv6_2_mbox_priorbox/Const"
  input: "conv6_2_mbox_priorbox/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\016t\332=\016t\332=q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\016t\332=o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\016t\332=:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\016t\332=:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\016t\332=Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\016t\332=5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\016t\332=q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\016t\332=o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\016t\332=:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\016t\332=:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\016t\332=Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\016t\332=5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\016t\332=q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\016t\332=o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\016t\332=:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\016t\332=:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\016t\332=Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\016t\332=5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\n\327\243>q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\n\327\243>o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\n\327\243>:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\n\327\243>:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\n\327\243>Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\n\327\243>5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\n\327\243>q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\n\327\243>o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\n\327\243>:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\n\327\243>:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\n\327\243>Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\n\327\243>5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\n\327\243>q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\n\327\243>o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\n\327\243>:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\n\327\243>:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\n\327\243>Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\n\327\243>5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\211\210\010?q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\211\210\010?o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\211\210\010?:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\211\210\010?:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\211\210\010?Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\211\210\010?5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\211\210\010?q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\211\210\010?o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\211\210\010?:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\211\210\010?:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\211\210\010?Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\211\210\010?5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\211\210\010?q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\211\210\010?o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\211\210\010?:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\211\210\010?:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\211\210\010?Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\211\210\010?5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>"
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox/Shape"
  op: "Shape"
  input: "conv15_2_mbox_loc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox/strided_slice"
  op: "StridedSlice"
  input: "conv7_2_mbox_priorbox/Shape"
  input: "conv7_2_mbox_priorbox/strided_slice/stack"
  input: "conv7_2_mbox_priorbox/strided_slice/stack_1"
  input: "conv7_2_mbox_priorbox/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox/Tile/multiples"
  op: "Pack"
  input: "conv7_2_mbox_priorbox/strided_slice"
  input: "conv7_2_mbox_priorbox/Tile/multiples/1"
  input: "conv7_2_mbox_priorbox/Tile/multiples/2"
  input: "conv7_2_mbox_priorbox/Tile/multiples/3"
  input: "conv7_2_mbox_priorbox/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox/Tile"
  op: "Tile"
  input: "conv7_2_mbox_priorbox/Const"
  input: "conv7_2_mbox_priorbox/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\253\252*>\253\252*>\217\3025?\217\3025?\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252*>\253\252*>xZJ?xZJ?\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252*>\253\252*>\023\206\200?\023\206\000?\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252*>\253\252*>\023\206\000?\023\206\200?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\253\252*>\217\3025?\217\3025?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\253\252*>xZJ?xZJ?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\253\252*>\023\206\200?\023\206\000?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\253\252*>\023\206\000?\023\206\200?\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252*>\000\000\000?\217\3025?\217\3025?\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252*>\000\000\000?xZJ?xZJ?\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252*>\000\000\000?\023\206\200?\023\206\000?\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252*>\000\000\000?\023\206\000?\023\206\200?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\000\000\000?\217\3025?\217\3025?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\000\000\000?xZJ?xZJ?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\000\000\000?\023\206\200?\023\206\000?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\000\000\000?\023\206\000?\023\206\200?\315\314\314=\315\314\314=\315\314L>\315\314L>"
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox/Shape"
  op: "Shape"
  input: "conv16_2_mbox_loc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox/strided_slice"
  op: "StridedSlice"
  input: "conv8_2_mbox_priorbox/Shape"
  input: "conv8_2_mbox_priorbox/strided_slice/stack"
  input: "conv8_2_mbox_priorbox/strided_slice/stack_1"
  input: "conv8_2_mbox_priorbox/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox/Tile/multiples"
  op: "Pack"
  input: "conv8_2_mbox_priorbox/strided_slice"
  input: "conv8_2_mbox_priorbox/Tile/multiples/1"
  input: "conv8_2_mbox_priorbox/Tile/multiples/2"
  input: "conv8_2_mbox_priorbox/Tile/multiples/3"
  input: "conv8_2_mbox_priorbox/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox/Tile"
  op: "Tile"
  input: "conv8_2_mbox_priorbox/Const"
  input: "conv8_2_mbox_priorbox/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000?\000\000\000?\256Ga?\256Ga?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\000\000\000?m\024v?m\024v?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\000\000\000?\tL\237?\tL\037?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\000\000\000?\tL\037?\tL\237?\315\314\314=\315\314\314=\315\314L>\315\314L>"
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox/Shape"
  op: "Shape"
  input: "conv17_2_mbox_loc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox/strided_slice"
  op: "StridedSlice"
  input: "conv9_2_mbox_priorbox/Shape"
  input: "conv9_2_mbox_priorbox/strided_slice/stack"
  input: "conv9_2_mbox_priorbox/strided_slice/stack_1"
  input: "conv9_2_mbox_priorbox/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox/Tile/multiples"
  op: "Pack"
  input: "conv9_2_mbox_priorbox/strided_slice"
  input: "conv9_2_mbox_priorbox/Tile/multiples/1"
  input: "conv9_2_mbox_priorbox/Tile/multiples/2"
  input: "conv9_2_mbox_priorbox/Tile/multiples/3"
  input: "conv9_2_mbox_priorbox/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox/Tile"
  op: "Tile"
  input: "conv9_2_mbox_priorbox/Const"
  input: "conv9_2_mbox_priorbox/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape/Shape"
  op: "Shape"
  input: "conv11_mbox_conf/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape/strided_slice"
  op: "StridedSlice"
  input: "conv4_3_norm_mbox_conf_reshape/Shape"
  input: "conv4_3_norm_mbox_conf_reshape/strided_slice/stack"
  input: "conv4_3_norm_mbox_conf_reshape/strided_slice/stack_1"
  input: "conv4_3_norm_mbox_conf_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape/Reshape/shape"
  op: "Pack"
  input: "conv4_3_norm_mbox_conf_reshape/strided_slice"
  input: "conv4_3_norm_mbox_conf_reshape/Reshape/shape/1"
  input: "conv4_3_norm_mbox_conf_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape/Reshape"
  op: "Reshape"
  input: "conv11_mbox_conf/BiasAdd"
  input: "conv4_3_norm_mbox_conf_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape/Shape"
  op: "Shape"
  input: "conv13_mbox_conf/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape/strided_slice"
  op: "StridedSlice"
  input: "fc7_mbox_conf_reshape/Shape"
  input: "fc7_mbox_conf_reshape/strided_slice/stack"
  input: "fc7_mbox_conf_reshape/strided_slice/stack_1"
  input: "fc7_mbox_conf_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape/Reshape/shape"
  op: "Pack"
  input: "fc7_mbox_conf_reshape/strided_slice"
  input: "fc7_mbox_conf_reshape/Reshape/shape/1"
  input: "fc7_mbox_conf_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape/Reshape"
  op: "Reshape"
  input: "conv13_mbox_conf/BiasAdd"
  input: "fc7_mbox_conf_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape/Shape"
  op: "Shape"
  input: "conv14_2_mbox_conf/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape/strided_slice"
  op: "StridedSlice"
  input: "conv6_2_mbox_conf_reshape/Shape"
  input: "conv6_2_mbox_conf_reshape/strided_slice/stack"
  input: "conv6_2_mbox_conf_reshape/strided_slice/stack_1"
  input: "conv6_2_mbox_conf_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape/Reshape/shape"
  op: "Pack"
  input: "conv6_2_mbox_conf_reshape/strided_slice"
  input: "conv6_2_mbox_conf_reshape/Reshape/shape/1"
  input: "conv6_2_mbox_conf_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape/Reshape"
  op: "Reshape"
  input: "conv14_2_mbox_conf/BiasAdd"
  input: "conv6_2_mbox_conf_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape/Shape"
  op: "Shape"
  input: "conv15_2_mbox_conf/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape/strided_slice"
  op: "StridedSlice"
  input: "conv7_2_mbox_conf_reshape/Shape"
  input: "conv7_2_mbox_conf_reshape/strided_slice/stack"
  input: "conv7_2_mbox_conf_reshape/strided_slice/stack_1"
  input: "conv7_2_mbox_conf_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape/Reshape/shape"
  op: "Pack"
  input: "conv7_2_mbox_conf_reshape/strided_slice"
  input: "conv7_2_mbox_conf_reshape/Reshape/shape/1"
  input: "conv7_2_mbox_conf_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape/Reshape"
  op: "Reshape"
  input: "conv15_2_mbox_conf/BiasAdd"
  input: "conv7_2_mbox_conf_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape/Shape"
  op: "Shape"
  input: "conv16_2_mbox_conf/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape/strided_slice"
  op: "StridedSlice"
  input: "conv8_2_mbox_conf_reshape/Shape"
  input: "conv8_2_mbox_conf_reshape/strided_slice/stack"
  input: "conv8_2_mbox_conf_reshape/strided_slice/stack_1"
  input: "conv8_2_mbox_conf_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape/Reshape/shape"
  op: "Pack"
  input: "conv8_2_mbox_conf_reshape/strided_slice"
  input: "conv8_2_mbox_conf_reshape/Reshape/shape/1"
  input: "conv8_2_mbox_conf_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape/Reshape"
  op: "Reshape"
  input: "conv16_2_mbox_conf/BiasAdd"
  input: "conv8_2_mbox_conf_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape/Shape"
  op: "Shape"
  input: "conv17_2_mbox_conf/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape/strided_slice"
  op: "StridedSlice"
  input: "conv9_2_mbox_conf_reshape/Shape"
  input: "conv9_2_mbox_conf_reshape/strided_slice/stack"
  input: "conv9_2_mbox_conf_reshape/strided_slice/stack_1"
  input: "conv9_2_mbox_conf_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape/Reshape/shape"
  op: "Pack"
  input: "conv9_2_mbox_conf_reshape/strided_slice"
  input: "conv9_2_mbox_conf_reshape/Reshape/shape/1"
  input: "conv9_2_mbox_conf_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape/Reshape"
  op: "Reshape"
  input: "conv17_2_mbox_conf/BiasAdd"
  input: "conv9_2_mbox_conf_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape/Shape"
  op: "Shape"
  input: "conv11_mbox_loc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape/strided_slice"
  op: "StridedSlice"
  input: "conv4_3_norm_mbox_loc_reshape/Shape"
  input: "conv4_3_norm_mbox_loc_reshape/strided_slice/stack"
  input: "conv4_3_norm_mbox_loc_reshape/strided_slice/stack_1"
  input: "conv4_3_norm_mbox_loc_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape/Reshape/shape"
  op: "Pack"
  input: "conv4_3_norm_mbox_loc_reshape/strided_slice"
  input: "conv4_3_norm_mbox_loc_reshape/Reshape/shape/1"
  input: "conv4_3_norm_mbox_loc_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape/Reshape"
  op: "Reshape"
  input: "conv11_mbox_loc/BiasAdd"
  input: "conv4_3_norm_mbox_loc_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape/Shape"
  op: "Shape"
  input: "conv13_mbox_loc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape/strided_slice"
  op: "StridedSlice"
  input: "fc7_mbox_loc_reshape/Shape"
  input: "fc7_mbox_loc_reshape/strided_slice/stack"
  input: "fc7_mbox_loc_reshape/strided_slice/stack_1"
  input: "fc7_mbox_loc_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape/Reshape/shape"
  op: "Pack"
  input: "fc7_mbox_loc_reshape/strided_slice"
  input: "fc7_mbox_loc_reshape/Reshape/shape/1"
  input: "fc7_mbox_loc_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape/Reshape"
  op: "Reshape"
  input: "conv13_mbox_loc/BiasAdd"
  input: "fc7_mbox_loc_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape/Shape"
  op: "Shape"
  input: "conv14_2_mbox_loc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape/strided_slice"
  op: "StridedSlice"
  input: "conv6_2_mbox_loc_reshape/Shape"
  input: "conv6_2_mbox_loc_reshape/strided_slice/stack"
  input: "conv6_2_mbox_loc_reshape/strided_slice/stack_1"
  input: "conv6_2_mbox_loc_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape/Reshape/shape"
  op: "Pack"
  input: "conv6_2_mbox_loc_reshape/strided_slice"
  input: "conv6_2_mbox_loc_reshape/Reshape/shape/1"
  input: "conv6_2_mbox_loc_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape/Reshape"
  op: "Reshape"
  input: "conv14_2_mbox_loc/BiasAdd"
  input: "conv6_2_mbox_loc_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape/Shape"
  op: "Shape"
  input: "conv15_2_mbox_loc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape/strided_slice"
  op: "StridedSlice"
  input: "conv7_2_mbox_loc_reshape/Shape"
  input: "conv7_2_mbox_loc_reshape/strided_slice/stack"
  input: "conv7_2_mbox_loc_reshape/strided_slice/stack_1"
  input: "conv7_2_mbox_loc_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape/Reshape/shape"
  op: "Pack"
  input: "conv7_2_mbox_loc_reshape/strided_slice"
  input: "conv7_2_mbox_loc_reshape/Reshape/shape/1"
  input: "conv7_2_mbox_loc_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape/Reshape"
  op: "Reshape"
  input: "conv15_2_mbox_loc/BiasAdd"
  input: "conv7_2_mbox_loc_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape/Shape"
  op: "Shape"
  input: "conv16_2_mbox_loc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape/strided_slice"
  op: "StridedSlice"
  input: "conv8_2_mbox_loc_reshape/Shape"
  input: "conv8_2_mbox_loc_reshape/strided_slice/stack"
  input: "conv8_2_mbox_loc_reshape/strided_slice/stack_1"
  input: "conv8_2_mbox_loc_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape/Reshape/shape"
  op: "Pack"
  input: "conv8_2_mbox_loc_reshape/strided_slice"
  input: "conv8_2_mbox_loc_reshape/Reshape/shape/1"
  input: "conv8_2_mbox_loc_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape/Reshape"
  op: "Reshape"
  input: "conv16_2_mbox_loc/BiasAdd"
  input: "conv8_2_mbox_loc_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape/Shape"
  op: "Shape"
  input: "conv17_2_mbox_loc/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape/strided_slice"
  op: "StridedSlice"
  input: "conv9_2_mbox_loc_reshape/Shape"
  input: "conv9_2_mbox_loc_reshape/strided_slice/stack"
  input: "conv9_2_mbox_loc_reshape/strided_slice/stack_1"
  input: "conv9_2_mbox_loc_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape/Reshape/shape"
  op: "Pack"
  input: "conv9_2_mbox_loc_reshape/strided_slice"
  input: "conv9_2_mbox_loc_reshape/Reshape/shape/1"
  input: "conv9_2_mbox_loc_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape/Reshape"
  op: "Reshape"
  input: "conv17_2_mbox_loc/BiasAdd"
  input: "conv9_2_mbox_loc_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape/Shape"
  op: "Shape"
  input: "conv4_3_norm_mbox_priorbox/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape/strided_slice"
  op: "StridedSlice"
  input: "conv4_3_norm_mbox_priorbox_reshape/Shape"
  input: "conv4_3_norm_mbox_priorbox_reshape/strided_slice/stack"
  input: "conv4_3_norm_mbox_priorbox_reshape/strided_slice/stack_1"
  input: "conv4_3_norm_mbox_priorbox_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape/Reshape/shape"
  op: "Pack"
  input: "conv4_3_norm_mbox_priorbox_reshape/strided_slice"
  input: "conv4_3_norm_mbox_priorbox_reshape/Reshape/shape/1"
  input: "conv4_3_norm_mbox_priorbox_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape/Reshape"
  op: "Reshape"
  input: "conv4_3_norm_mbox_priorbox/Tile"
  input: "conv4_3_norm_mbox_priorbox_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape/Shape"
  op: "Shape"
  input: "fc7_mbox_priorbox/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape/strided_slice"
  op: "StridedSlice"
  input: "fc7_mbox_priorbox_reshape/Shape"
  input: "fc7_mbox_priorbox_reshape/strided_slice/stack"
  input: "fc7_mbox_priorbox_reshape/strided_slice/stack_1"
  input: "fc7_mbox_priorbox_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape/Reshape/shape"
  op: "Pack"
  input: "fc7_mbox_priorbox_reshape/strided_slice"
  input: "fc7_mbox_priorbox_reshape/Reshape/shape/1"
  input: "fc7_mbox_priorbox_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape/Reshape"
  op: "Reshape"
  input: "fc7_mbox_priorbox/Tile"
  input: "fc7_mbox_priorbox_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape/Shape"
  op: "Shape"
  input: "conv6_2_mbox_priorbox/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape/strided_slice"
  op: "StridedSlice"
  input: "conv6_2_mbox_priorbox_reshape/Shape"
  input: "conv6_2_mbox_priorbox_reshape/strided_slice/stack"
  input: "conv6_2_mbox_priorbox_reshape/strided_slice/stack_1"
  input: "conv6_2_mbox_priorbox_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape/Reshape/shape"
  op: "Pack"
  input: "conv6_2_mbox_priorbox_reshape/strided_slice"
  input: "conv6_2_mbox_priorbox_reshape/Reshape/shape/1"
  input: "conv6_2_mbox_priorbox_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape/Reshape"
  op: "Reshape"
  input: "conv6_2_mbox_priorbox/Tile"
  input: "conv6_2_mbox_priorbox_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape/Shape"
  op: "Shape"
  input: "conv7_2_mbox_priorbox/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape/strided_slice"
  op: "StridedSlice"
  input: "conv7_2_mbox_priorbox_reshape/Shape"
  input: "conv7_2_mbox_priorbox_reshape/strided_slice/stack"
  input: "conv7_2_mbox_priorbox_reshape/strided_slice/stack_1"
  input: "conv7_2_mbox_priorbox_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape/Reshape/shape"
  op: "Pack"
  input: "conv7_2_mbox_priorbox_reshape/strided_slice"
  input: "conv7_2_mbox_priorbox_reshape/Reshape/shape/1"
  input: "conv7_2_mbox_priorbox_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape/Reshape"
  op: "Reshape"
  input: "conv7_2_mbox_priorbox/Tile"
  input: "conv7_2_mbox_priorbox_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape/Shape"
  op: "Shape"
  input: "conv8_2_mbox_priorbox/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape/strided_slice"
  op: "StridedSlice"
  input: "conv8_2_mbox_priorbox_reshape/Shape"
  input: "conv8_2_mbox_priorbox_reshape/strided_slice/stack"
  input: "conv8_2_mbox_priorbox_reshape/strided_slice/stack_1"
  input: "conv8_2_mbox_priorbox_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape/Reshape/shape"
  op: "Pack"
  input: "conv8_2_mbox_priorbox_reshape/strided_slice"
  input: "conv8_2_mbox_priorbox_reshape/Reshape/shape/1"
  input: "conv8_2_mbox_priorbox_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape/Reshape"
  op: "Reshape"
  input: "conv8_2_mbox_priorbox/Tile"
  input: "conv8_2_mbox_priorbox_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape/Shape"
  op: "Shape"
  input: "conv9_2_mbox_priorbox/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape/strided_slice"
  op: "StridedSlice"
  input: "conv9_2_mbox_priorbox_reshape/Shape"
  input: "conv9_2_mbox_priorbox_reshape/strided_slice/stack"
  input: "conv9_2_mbox_priorbox_reshape/strided_slice/stack_1"
  input: "conv9_2_mbox_priorbox_reshape/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape/Reshape/shape"
  op: "Pack"
  input: "conv9_2_mbox_priorbox_reshape/strided_slice"
  input: "conv9_2_mbox_priorbox_reshape/Reshape/shape/1"
  input: "conv9_2_mbox_priorbox_reshape/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape/Reshape"
  op: "Reshape"
  input: "conv9_2_mbox_priorbox/Tile"
  input: "conv9_2_mbox_priorbox_reshape/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mbox_conf/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mbox_conf/concat"
  op: "ConcatV2"
  input: "conv4_3_norm_mbox_conf_reshape/Reshape"
  input: "fc7_mbox_conf_reshape/Reshape"
  input: "conv6_2_mbox_conf_reshape/Reshape"
  input: "conv7_2_mbox_conf_reshape/Reshape"
  input: "conv8_2_mbox_conf_reshape/Reshape"
  input: "conv9_2_mbox_conf_reshape/Reshape"
  input: "mbox_conf/concat/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mbox_loc/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mbox_loc/concat"
  op: "ConcatV2"
  input: "conv4_3_norm_mbox_loc_reshape/Reshape"
  input: "fc7_mbox_loc_reshape/Reshape"
  input: "conv6_2_mbox_loc_reshape/Reshape"
  input: "conv7_2_mbox_loc_reshape/Reshape"
  input: "conv8_2_mbox_loc_reshape/Reshape"
  input: "conv9_2_mbox_loc_reshape/Reshape"
  input: "mbox_loc/concat/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mbox_priorbox/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mbox_priorbox/concat"
  op: "ConcatV2"
  input: "conv4_3_norm_mbox_priorbox_reshape/Reshape"
  input: "fc7_mbox_priorbox_reshape/Reshape"
  input: "conv6_2_mbox_priorbox_reshape/Reshape"
  input: "conv7_2_mbox_priorbox_reshape/Reshape"
  input: "conv8_2_mbox_priorbox_reshape/Reshape"
  input: "conv9_2_mbox_priorbox_reshape/Reshape"
  input: "mbox_priorbox/concat/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mbox_conf_softmax/Max/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mbox_conf_softmax/Max"
  op: "Max"
  input: "mbox_conf/concat"
  input: "mbox_conf_softmax/Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "mbox_conf_softmax/sub"
  op: "Sub"
  input: "mbox_conf/concat"
  input: "mbox_conf_softmax/Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mbox_conf_softmax/Exp"
  op: "Exp"
  input: "mbox_conf_softmax/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mbox_conf_softmax/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mbox_conf_softmax/Sum"
  op: "Sum"
  input: "mbox_conf_softmax/Exp"
  input: "mbox_conf_softmax/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "mbox_conf_softmax/truediv"
  op: "RealDiv"
  input: "mbox_conf_softmax/Exp"
  input: "mbox_conf_softmax/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "predictions/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "predictions/concat"
  op: "ConcatV2"
  input: "mbox_conf_softmax/truediv"
  input: "mbox_loc/concat"
  input: "mbox_priorbox/concat"
  input: "predictions/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 300
        }
        dim {
          size: 300
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "identity_layer_1/Identity"
  op: "Identity"
  input: "input_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_mean_normalization_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\366B\000\000\352B\000\000\320B"
      }
    }
  }
}
node {
  name: "input_mean_normalization_1/sub"
  op: "Sub"
  input: "identity_layer_1/Identity"
  input: "input_mean_normalization_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_stddev_normalization_1/truediv/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 127.5
      }
    }
  }
}
node {
  name: "input_stddev_normalization_1/truediv"
  op: "RealDiv"
  input: "input_mean_normalization_1/sub"
  input: "input_stddev_normalization_1/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "input_channel_swap_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "input_channel_swap_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "input_channel_swap_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "input_channel_swap_1/strided_slice"
  op: "StridedSlice"
  input: "input_stddev_normalization_1/truediv"
  input: "input_channel_swap_1/strided_slice/stack"
  input: "input_channel_swap_1/strided_slice/stack_1"
  input: "input_channel_swap_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1_padding_1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv1_padding_1/Pad"
  op: "Pad"
  input: "input_channel_swap_1/strided_slice"
  input: "conv1_padding_1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv0_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "conv0_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1380131095647812
      }
    }
  }
}
node {
  name: "conv0_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1380131095647812
      }
    }
  }
}
node {
  name: "conv0_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv0_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 756182
    }
  }
}
node {
  name: "conv0_1/random_uniform/sub"
  op: "Sub"
  input: "conv0_1/random_uniform/max"
  input: "conv0_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0_1/random_uniform/mul"
  op: "Mul"
  input: "conv0_1/random_uniform/RandomUniform"
  input: "conv0_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0_1/random_uniform"
  op: "Add"
  input: "conv0_1/random_uniform/mul"
  input: "conv0_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0_1/kernel/Assign"
  op: "Assign"
  input: "conv0_1/kernel"
  input: "conv0_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0_1/kernel/read"
  op: "Identity"
  input: "conv0_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_1/kernel"
      }
    }
  }
}
node {
  name: "conv0_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv0_1/convolution"
  op: "Conv2D"
  input: "conv1_padding_1/Pad"
  input: "conv0_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv0/bn_1/gamma"
  input: "conv0/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn_1/gamma/read"
  op: "Identity"
  input: "conv0/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv0/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv0/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/bn_1/beta/Assign"
  op: "Assign"
  input: "conv0/bn_1/beta"
  input: "conv0/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn_1/beta/read"
  op: "Identity"
  input: "conv0/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv0/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv0/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv0/bn_1/moving_mean"
  input: "conv0/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv0/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv0/bn_1/moving_variance"
  input: "conv0/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv0/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv0/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv0/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv0_1/convolution"
  input: "conv0/bn_1/gamma/read"
  input: "conv0/bn_1/beta/read"
  input: "conv0/bn_1/Const_4"
  input: "conv0/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn_1/Shape"
  op: "Shape"
  input: "conv0_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv0/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv0/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv0/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv0/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv0/bn_1/Shape"
  input: "conv0/bn_1/strided_slice/stack"
  input: "conv0/bn_1/strided_slice/stack_1"
  input: "conv0/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv0/bn_1/Shape_1"
  op: "Shape"
  input: "conv0_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv0/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv0/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv0/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv0/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv0/bn_1/Shape_1"
  input: "conv0/bn_1/strided_slice_1/stack"
  input: "conv0/bn_1/strided_slice_1/stack_1"
  input: "conv0/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv0/bn_1/Shape_2"
  op: "Shape"
  input: "conv0_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv0/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv0/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv0/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv0/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv0/bn_1/Shape_2"
  input: "conv0/bn_1/strided_slice_2/stack"
  input: "conv0/bn_1/strided_slice_2/stack_1"
  input: "conv0/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv0/bn_1/Rank/packed"
  op: "Pack"
  input: "conv0/bn_1/strided_slice"
  input: "conv0/bn_1/strided_slice_1"
  input: "conv0/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv0/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv0/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv0/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv0/bn_1/range"
  op: "Range"
  input: "conv0/bn_1/range/start"
  input: "conv0/bn_1/Rank"
  input: "conv0/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv0/bn_1/Prod/input"
  op: "Pack"
  input: "conv0/bn_1/strided_slice"
  input: "conv0/bn_1/strided_slice_1"
  input: "conv0/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv0/bn_1/Prod"
  op: "Prod"
  input: "conv0/bn_1/Prod/input"
  input: "conv0/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv0/bn_1/Cast"
  op: "Cast"
  input: "conv0/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv0/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv0/bn_1/sub"
  op: "Sub"
  input: "conv0/bn_1/Cast"
  input: "conv0/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0/bn_1/truediv"
  op: "RealDiv"
  input: "conv0/bn_1/Cast"
  input: "conv0/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0/bn_1/mul"
  op: "Mul"
  input: "conv0/bn_1/FusedBatchNorm:2"
  input: "conv0/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv0/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv0/bn_1/moving_mean/biased"
  input: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv0/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv0/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv0/bn_1/moving_mean/local_step"
  input: "conv0/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv0/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv0/bn_1/moving_mean/biased/read"
  input: "conv0/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/sub"
  input: "conv0/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/conv0/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv0/bn_1/moving_mean/biased"
  input: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv0/bn_1/moving_mean/local_step"
  input: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv0/bn_1/moving_mean/biased"
  input: "^conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/AssignAdd"
  input: "^conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/conv0/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/AssignAdd"
  input: "^conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/conv0/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/sub_1/x"
  input: "conv0/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv0/bn_1/moving_mean/local_step"
  input: "^conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/AssignAdd"
  input: "^conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/conv0/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/sub_1"
  input: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/AssignAdd"
  input: "^conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/conv0/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/sub_2/x"
  input: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/read"
  input: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv0/bn_1/moving_mean/read"
  input: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv0/bn_1/moving_mean"
  input: "conv0/bn_1/AssignMovingAvg/conv0/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv0/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv0/bn_1/moving_variance/biased"
  input: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv0/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv0/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv0/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv0/bn_1/moving_variance/local_step"
  input: "conv0/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv0/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv0/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv0/bn_1/moving_variance/biased/read"
  input: "conv0/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/sub"
  input: "conv0/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/conv0/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv0/bn_1/moving_variance/biased"
  input: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv0/bn_1/moving_variance/local_step"
  input: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv0/bn_1/moving_variance/biased"
  input: "^conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/AssignAdd"
  input: "^conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/conv0/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/AssignAdd"
  input: "^conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/conv0/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/sub_1/x"
  input: "conv0/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv0/bn_1/moving_variance/local_step"
  input: "^conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/AssignAdd"
  input: "^conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/conv0/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/sub_1"
  input: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/AssignAdd"
  input: "^conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/conv0/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/sub_2/x"
  input: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/read"
  input: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv0/bn_1/moving_variance/read"
  input: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv0/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv0/bn_1/moving_variance"
  input: "conv0/bn_1/AssignMovingAvg_1/conv0/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv0/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv0_1/convolution"
  input: "conv0/bn_1/gamma/read"
  input: "conv0/bn_1/beta/read"
  input: "conv0/bn_1/moving_mean/read"
  input: "conv0/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_28/Relu"
  op: "Relu"
  input: "conv0/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/dw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/dw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.14213381707668304
      }
    }
  }
}
node {
  name: "conv1/dw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14213381707668304
      }
    }
  }
}
node {
  name: "conv1/dw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1/dw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 646375
    }
  }
}
node {
  name: "conv1/dw_1/random_uniform/sub"
  op: "Sub"
  input: "conv1/dw_1/random_uniform/max"
  input: "conv1/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/dw_1/random_uniform/mul"
  op: "Mul"
  input: "conv1/dw_1/random_uniform/RandomUniform"
  input: "conv1/dw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/dw_1/random_uniform"
  op: "Add"
  input: "conv1/dw_1/random_uniform/mul"
  input: "conv1/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/dw_1/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw_1/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv1/dw_1/depthwise_kernel"
  input: "conv1/dw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw_1/depthwise_kernel/read"
  op: "Identity"
  input: "conv1/dw_1/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw_1/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv1/dw_1/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000 \000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/dw_1/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv1/dw_1/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_28/Relu"
  input: "conv1/dw_1/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv1/dw/bn_1/gamma"
  input: "conv1/dw/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn_1/gamma/read"
  op: "Identity"
  input: "conv1/dw/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/bn_1/beta/Assign"
  op: "Assign"
  input: "conv1/dw/bn_1/beta"
  input: "conv1/dw/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn_1/beta/read"
  op: "Identity"
  input: "conv1/dw/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv1/dw/bn_1/moving_mean"
  input: "conv1/dw/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv1/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv1/dw/bn_1/moving_variance"
  input: "conv1/dw/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv1/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv1/dw_1/depthwise"
  input: "conv1/dw/bn_1/gamma/read"
  input: "conv1/dw/bn_1/beta/read"
  input: "conv1/dw/bn_1/Const_4"
  input: "conv1/dw/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn_1/Shape"
  op: "Shape"
  input: "conv1/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/dw/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv1/dw/bn_1/Shape"
  input: "conv1/dw/bn_1/strided_slice/stack"
  input: "conv1/dw/bn_1/strided_slice/stack_1"
  input: "conv1/dw/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1/dw/bn_1/Shape_1"
  op: "Shape"
  input: "conv1/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/dw/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv1/dw/bn_1/Shape_1"
  input: "conv1/dw/bn_1/strided_slice_1/stack"
  input: "conv1/dw/bn_1/strided_slice_1/stack_1"
  input: "conv1/dw/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1/dw/bn_1/Shape_2"
  op: "Shape"
  input: "conv1/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/dw/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv1/dw/bn_1/Shape_2"
  input: "conv1/dw/bn_1/strided_slice_2/stack"
  input: "conv1/dw/bn_1/strided_slice_2/stack_1"
  input: "conv1/dw/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1/dw/bn_1/Rank/packed"
  op: "Pack"
  input: "conv1/dw/bn_1/strided_slice"
  input: "conv1/dw/bn_1/strided_slice_1"
  input: "conv1/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/dw/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/range"
  op: "Range"
  input: "conv1/dw/bn_1/range/start"
  input: "conv1/dw/bn_1/Rank"
  input: "conv1/dw/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/dw/bn_1/Prod/input"
  op: "Pack"
  input: "conv1/dw/bn_1/strided_slice"
  input: "conv1/dw/bn_1/strided_slice_1"
  input: "conv1/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/dw/bn_1/Prod"
  op: "Prod"
  input: "conv1/dw/bn_1/Prod/input"
  input: "conv1/dw/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/dw/bn_1/Cast"
  op: "Cast"
  input: "conv1/dw/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/dw/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/sub"
  op: "Sub"
  input: "conv1/dw/bn_1/Cast"
  input: "conv1/dw/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/dw/bn_1/truediv"
  op: "RealDiv"
  input: "conv1/dw/bn_1/Cast"
  input: "conv1/dw/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/dw/bn_1/mul"
  op: "Mul"
  input: "conv1/dw/bn_1/FusedBatchNorm:2"
  input: "conv1/dw/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv1/dw/bn_1/moving_mean/biased"
  input: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv1/dw/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv1/dw/bn_1/moving_mean/local_step"
  input: "conv1/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv1/dw/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv1/dw/bn_1/moving_mean/biased/read"
  input: "conv1/dw/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/sub"
  input: "conv1/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/conv1/dw/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv1/dw/bn_1/moving_mean/biased"
  input: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv1/dw/bn_1/moving_mean/local_step"
  input: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv1/dw/bn_1/moving_mean/biased"
  input: "^conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/conv1/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/conv1/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/sub_1/x"
  input: "conv1/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv1/dw/bn_1/moving_mean/local_step"
  input: "^conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/conv1/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/sub_1"
  input: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/conv1/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/sub_2/x"
  input: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/read"
  input: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv1/dw/bn_1/moving_mean/read"
  input: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv1/dw/bn_1/moving_mean"
  input: "conv1/dw/bn_1/AssignMovingAvg/conv1/dw/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv1/dw/bn_1/moving_variance/biased"
  input: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv1/dw/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv1/dw/bn_1/moving_variance/local_step"
  input: "conv1/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/dw/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv1/dw/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv1/dw/bn_1/moving_variance/biased/read"
  input: "conv1/dw/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/sub"
  input: "conv1/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/conv1/dw/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv1/dw/bn_1/moving_variance/biased"
  input: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv1/dw/bn_1/moving_variance/local_step"
  input: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv1/dw/bn_1/moving_variance/biased"
  input: "^conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/conv1/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/conv1/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/sub_1/x"
  input: "conv1/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv1/dw/bn_1/moving_variance/local_step"
  input: "^conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/conv1/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/sub_1"
  input: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/conv1/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/sub_2/x"
  input: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/read"
  input: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv1/dw/bn_1/moving_variance/read"
  input: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/dw/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv1/dw/bn_1/moving_variance"
  input: "conv1/dw/bn_1/AssignMovingAvg_1/conv1/dw/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/dw/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv1/dw_1/depthwise"
  input: "conv1/dw/bn_1/gamma/read"
  input: "conv1/dw/bn_1/beta/read"
  input: "conv1/dw/bn_1/moving_mean/read"
  input: "conv1/dw/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_29/Relu"
  op: "Relu"
  input: "conv1/dw/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv1_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.25
      }
    }
  }
}
node {
  name: "conv1_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "conv1_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv1_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6016707
    }
  }
}
node {
  name: "conv1_1/random_uniform/sub"
  op: "Sub"
  input: "conv1_1/random_uniform/max"
  input: "conv1_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_1/random_uniform/mul"
  op: "Mul"
  input: "conv1_1/random_uniform/RandomUniform"
  input: "conv1_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_1/random_uniform"
  op: "Add"
  input: "conv1_1/random_uniform/mul"
  input: "conv1_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1_1/kernel/Assign"
  op: "Assign"
  input: "conv1_1/kernel"
  input: "conv1_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1_1/kernel/read"
  op: "Identity"
  input: "conv1_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/kernel"
      }
    }
  }
}
node {
  name: "conv1_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv1_1/convolution"
  op: "Conv2D"
  input: "activation_29/Relu"
  input: "conv1_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv1/bn_1/gamma"
  input: "conv1/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn_1/gamma/read"
  op: "Identity"
  input: "conv1/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv1/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bn_1/beta/Assign"
  op: "Assign"
  input: "conv1/bn_1/beta"
  input: "conv1/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn_1/beta/read"
  op: "Identity"
  input: "conv1/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv1/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv1/bn_1/moving_mean"
  input: "conv1/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv1/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv1/bn_1/moving_variance"
  input: "conv1/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv1/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv1/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv1/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv1_1/convolution"
  input: "conv1/bn_1/gamma/read"
  input: "conv1/bn_1/beta/read"
  input: "conv1/bn_1/Const_4"
  input: "conv1/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn_1/Shape"
  op: "Shape"
  input: "conv1_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv1/bn_1/Shape"
  input: "conv1/bn_1/strided_slice/stack"
  input: "conv1/bn_1/strided_slice/stack_1"
  input: "conv1/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1/bn_1/Shape_1"
  op: "Shape"
  input: "conv1_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv1/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv1/bn_1/Shape_1"
  input: "conv1/bn_1/strided_slice_1/stack"
  input: "conv1/bn_1/strided_slice_1/stack_1"
  input: "conv1/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1/bn_1/Shape_2"
  op: "Shape"
  input: "conv1_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv1/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv1/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv1/bn_1/Shape_2"
  input: "conv1/bn_1/strided_slice_2/stack"
  input: "conv1/bn_1/strided_slice_2/stack_1"
  input: "conv1/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv1/bn_1/Rank/packed"
  op: "Pack"
  input: "conv1/bn_1/strided_slice"
  input: "conv1/bn_1/strided_slice_1"
  input: "conv1/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv1/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv1/bn_1/range"
  op: "Range"
  input: "conv1/bn_1/range/start"
  input: "conv1/bn_1/Rank"
  input: "conv1/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/bn_1/Prod/input"
  op: "Pack"
  input: "conv1/bn_1/strided_slice"
  input: "conv1/bn_1/strided_slice_1"
  input: "conv1/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv1/bn_1/Prod"
  op: "Prod"
  input: "conv1/bn_1/Prod/input"
  input: "conv1/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/bn_1/Cast"
  op: "Cast"
  input: "conv1/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv1/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv1/bn_1/sub"
  op: "Sub"
  input: "conv1/bn_1/Cast"
  input: "conv1/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/bn_1/truediv"
  op: "RealDiv"
  input: "conv1/bn_1/Cast"
  input: "conv1/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/bn_1/mul"
  op: "Mul"
  input: "conv1/bn_1/FusedBatchNorm:2"
  input: "conv1/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv1/bn_1/moving_mean/biased"
  input: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv1/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv1/bn_1/moving_mean/local_step"
  input: "conv1/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv1/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv1/bn_1/moving_mean/biased/read"
  input: "conv1/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/sub"
  input: "conv1/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/conv1/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv1/bn_1/moving_mean/biased"
  input: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv1/bn_1/moving_mean/local_step"
  input: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv1/bn_1/moving_mean/biased"
  input: "^conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/AssignAdd"
  input: "^conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/conv1/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/AssignAdd"
  input: "^conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/conv1/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/sub_1/x"
  input: "conv1/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv1/bn_1/moving_mean/local_step"
  input: "^conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/AssignAdd"
  input: "^conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/conv1/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/sub_1"
  input: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/AssignAdd"
  input: "^conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/conv1/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/sub_2/x"
  input: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/read"
  input: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv1/bn_1/moving_mean/read"
  input: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv1/bn_1/moving_mean"
  input: "conv1/bn_1/AssignMovingAvg/conv1/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv1/bn_1/moving_variance/biased"
  input: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv1/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv1/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv1/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv1/bn_1/moving_variance/local_step"
  input: "conv1/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv1/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv1/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv1/bn_1/moving_variance/biased/read"
  input: "conv1/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/sub"
  input: "conv1/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/conv1/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv1/bn_1/moving_variance/biased"
  input: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv1/bn_1/moving_variance/local_step"
  input: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv1/bn_1/moving_variance/biased"
  input: "^conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/AssignAdd"
  input: "^conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/conv1/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/AssignAdd"
  input: "^conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/conv1/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/sub_1/x"
  input: "conv1/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv1/bn_1/moving_variance/local_step"
  input: "^conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/AssignAdd"
  input: "^conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/conv1/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/sub_1"
  input: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/AssignAdd"
  input: "^conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/conv1/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/sub_2/x"
  input: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/read"
  input: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv1/bn_1/moving_variance/read"
  input: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv1/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv1/bn_1/moving_variance"
  input: "conv1/bn_1/AssignMovingAvg_1/conv1/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv1/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv1_1/convolution"
  input: "conv1/bn_1/gamma/read"
  input: "conv1/bn_1/beta/read"
  input: "conv1/bn_1/moving_mean/read"
  input: "conv1/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_30/Relu"
  op: "Relu"
  input: "conv1/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2_padding_1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv2_padding_1/Pad"
  op: "Pad"
  input: "activation_30/Relu"
  input: "conv2_padding_1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/dw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/dw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "conv2/dw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "conv2/dw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2/dw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 443546
    }
  }
}
node {
  name: "conv2/dw_1/random_uniform/sub"
  op: "Sub"
  input: "conv2/dw_1/random_uniform/max"
  input: "conv2/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/dw_1/random_uniform/mul"
  op: "Mul"
  input: "conv2/dw_1/random_uniform/RandomUniform"
  input: "conv2/dw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/dw_1/random_uniform"
  op: "Add"
  input: "conv2/dw_1/random_uniform/mul"
  input: "conv2/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/dw_1/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw_1/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv2/dw_1/depthwise_kernel"
  input: "conv2/dw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw_1/depthwise_kernel/read"
  op: "Identity"
  input: "conv2/dw_1/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw_1/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv2/dw_1/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/dw_1/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2/dw_1/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv2_padding_1/Pad"
  input: "conv2/dw_1/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv2/dw/bn_1/gamma"
  input: "conv2/dw/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn_1/gamma/read"
  op: "Identity"
  input: "conv2/dw/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/bn_1/beta/Assign"
  op: "Assign"
  input: "conv2/dw/bn_1/beta"
  input: "conv2/dw/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn_1/beta/read"
  op: "Identity"
  input: "conv2/dw/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv2/dw/bn_1/moving_mean"
  input: "conv2/dw/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv2/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv2/dw/bn_1/moving_variance"
  input: "conv2/dw/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv2/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2/dw_1/depthwise"
  input: "conv2/dw/bn_1/gamma/read"
  input: "conv2/dw/bn_1/beta/read"
  input: "conv2/dw/bn_1/Const_4"
  input: "conv2/dw/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn_1/Shape"
  op: "Shape"
  input: "conv2/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/dw/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv2/dw/bn_1/Shape"
  input: "conv2/dw/bn_1/strided_slice/stack"
  input: "conv2/dw/bn_1/strided_slice/stack_1"
  input: "conv2/dw/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2/dw/bn_1/Shape_1"
  op: "Shape"
  input: "conv2/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/dw/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv2/dw/bn_1/Shape_1"
  input: "conv2/dw/bn_1/strided_slice_1/stack"
  input: "conv2/dw/bn_1/strided_slice_1/stack_1"
  input: "conv2/dw/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2/dw/bn_1/Shape_2"
  op: "Shape"
  input: "conv2/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/dw/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv2/dw/bn_1/Shape_2"
  input: "conv2/dw/bn_1/strided_slice_2/stack"
  input: "conv2/dw/bn_1/strided_slice_2/stack_1"
  input: "conv2/dw/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2/dw/bn_1/Rank/packed"
  op: "Pack"
  input: "conv2/dw/bn_1/strided_slice"
  input: "conv2/dw/bn_1/strided_slice_1"
  input: "conv2/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/dw/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/range"
  op: "Range"
  input: "conv2/dw/bn_1/range/start"
  input: "conv2/dw/bn_1/Rank"
  input: "conv2/dw/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/dw/bn_1/Prod/input"
  op: "Pack"
  input: "conv2/dw/bn_1/strided_slice"
  input: "conv2/dw/bn_1/strided_slice_1"
  input: "conv2/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/dw/bn_1/Prod"
  op: "Prod"
  input: "conv2/dw/bn_1/Prod/input"
  input: "conv2/dw/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/dw/bn_1/Cast"
  op: "Cast"
  input: "conv2/dw/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/dw/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/sub"
  op: "Sub"
  input: "conv2/dw/bn_1/Cast"
  input: "conv2/dw/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/dw/bn_1/truediv"
  op: "RealDiv"
  input: "conv2/dw/bn_1/Cast"
  input: "conv2/dw/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/dw/bn_1/mul"
  op: "Mul"
  input: "conv2/dw/bn_1/FusedBatchNorm:2"
  input: "conv2/dw/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv2/dw/bn_1/moving_mean/biased"
  input: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv2/dw/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv2/dw/bn_1/moving_mean/local_step"
  input: "conv2/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv2/dw/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv2/dw/bn_1/moving_mean/biased/read"
  input: "conv2/dw/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/sub"
  input: "conv2/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/conv2/dw/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv2/dw/bn_1/moving_mean/biased"
  input: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv2/dw/bn_1/moving_mean/local_step"
  input: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv2/dw/bn_1/moving_mean/biased"
  input: "^conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/conv2/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/conv2/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/sub_1/x"
  input: "conv2/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv2/dw/bn_1/moving_mean/local_step"
  input: "^conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/conv2/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/sub_1"
  input: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/conv2/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/sub_2/x"
  input: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/read"
  input: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv2/dw/bn_1/moving_mean/read"
  input: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv2/dw/bn_1/moving_mean"
  input: "conv2/dw/bn_1/AssignMovingAvg/conv2/dw/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv2/dw/bn_1/moving_variance/biased"
  input: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv2/dw/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv2/dw/bn_1/moving_variance/local_step"
  input: "conv2/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/dw/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv2/dw/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv2/dw/bn_1/moving_variance/biased/read"
  input: "conv2/dw/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/sub"
  input: "conv2/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/conv2/dw/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv2/dw/bn_1/moving_variance/biased"
  input: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv2/dw/bn_1/moving_variance/local_step"
  input: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv2/dw/bn_1/moving_variance/biased"
  input: "^conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/conv2/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/conv2/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/sub_1/x"
  input: "conv2/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv2/dw/bn_1/moving_variance/local_step"
  input: "^conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/conv2/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/sub_1"
  input: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/conv2/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/sub_2/x"
  input: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/read"
  input: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv2/dw/bn_1/moving_variance/read"
  input: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/dw/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv2/dw/bn_1/moving_variance"
  input: "conv2/dw/bn_1/AssignMovingAvg_1/conv2/dw/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/dw/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv2/dw_1/depthwise"
  input: "conv2/dw/bn_1/gamma/read"
  input: "conv2/dw/bn_1/beta/read"
  input: "conv2/dw/bn_1/moving_mean/read"
  input: "conv2/dw/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_31/Relu"
  op: "Relu"
  input: "conv2/dw/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv2_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1767766922712326
      }
    }
  }
}
node {
  name: "conv2_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1767766922712326
      }
    }
  }
}
node {
  name: "conv2_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv2_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1162139
    }
  }
}
node {
  name: "conv2_1/random_uniform/sub"
  op: "Sub"
  input: "conv2_1/random_uniform/max"
  input: "conv2_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2_1/random_uniform/mul"
  op: "Mul"
  input: "conv2_1/random_uniform/RandomUniform"
  input: "conv2_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2_1/random_uniform"
  op: "Add"
  input: "conv2_1/random_uniform/mul"
  input: "conv2_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2_1/kernel/Assign"
  op: "Assign"
  input: "conv2_1/kernel"
  input: "conv2_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2_1/kernel/read"
  op: "Identity"
  input: "conv2_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/kernel"
      }
    }
  }
}
node {
  name: "conv2_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv2_1/convolution"
  op: "Conv2D"
  input: "activation_31/Relu"
  input: "conv2_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv2/bn_1/gamma"
  input: "conv2/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn_1/gamma/read"
  op: "Identity"
  input: "conv2/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv2/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bn_1/beta/Assign"
  op: "Assign"
  input: "conv2/bn_1/beta"
  input: "conv2/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn_1/beta/read"
  op: "Identity"
  input: "conv2/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv2/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv2/bn_1/moving_mean"
  input: "conv2/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv2/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv2/bn_1/moving_variance"
  input: "conv2/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv2/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv2/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv2/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv2_1/convolution"
  input: "conv2/bn_1/gamma/read"
  input: "conv2/bn_1/beta/read"
  input: "conv2/bn_1/Const_4"
  input: "conv2/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn_1/Shape"
  op: "Shape"
  input: "conv2_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv2/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv2/bn_1/Shape"
  input: "conv2/bn_1/strided_slice/stack"
  input: "conv2/bn_1/strided_slice/stack_1"
  input: "conv2/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2/bn_1/Shape_1"
  op: "Shape"
  input: "conv2_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv2/bn_1/Shape_1"
  input: "conv2/bn_1/strided_slice_1/stack"
  input: "conv2/bn_1/strided_slice_1/stack_1"
  input: "conv2/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2/bn_1/Shape_2"
  op: "Shape"
  input: "conv2_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv2/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv2/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv2/bn_1/Shape_2"
  input: "conv2/bn_1/strided_slice_2/stack"
  input: "conv2/bn_1/strided_slice_2/stack_1"
  input: "conv2/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv2/bn_1/Rank/packed"
  op: "Pack"
  input: "conv2/bn_1/strided_slice"
  input: "conv2/bn_1/strided_slice_1"
  input: "conv2/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv2/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv2/bn_1/range"
  op: "Range"
  input: "conv2/bn_1/range/start"
  input: "conv2/bn_1/Rank"
  input: "conv2/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/bn_1/Prod/input"
  op: "Pack"
  input: "conv2/bn_1/strided_slice"
  input: "conv2/bn_1/strided_slice_1"
  input: "conv2/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv2/bn_1/Prod"
  op: "Prod"
  input: "conv2/bn_1/Prod/input"
  input: "conv2/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/bn_1/Cast"
  op: "Cast"
  input: "conv2/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv2/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv2/bn_1/sub"
  op: "Sub"
  input: "conv2/bn_1/Cast"
  input: "conv2/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/bn_1/truediv"
  op: "RealDiv"
  input: "conv2/bn_1/Cast"
  input: "conv2/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/bn_1/mul"
  op: "Mul"
  input: "conv2/bn_1/FusedBatchNorm:2"
  input: "conv2/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv2/bn_1/moving_mean/biased"
  input: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv2/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv2/bn_1/moving_mean/local_step"
  input: "conv2/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv2/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv2/bn_1/moving_mean/biased/read"
  input: "conv2/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/sub"
  input: "conv2/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/conv2/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv2/bn_1/moving_mean/biased"
  input: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv2/bn_1/moving_mean/local_step"
  input: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv2/bn_1/moving_mean/biased"
  input: "^conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/AssignAdd"
  input: "^conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/conv2/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/AssignAdd"
  input: "^conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/conv2/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/sub_1/x"
  input: "conv2/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv2/bn_1/moving_mean/local_step"
  input: "^conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/AssignAdd"
  input: "^conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/conv2/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/sub_1"
  input: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/AssignAdd"
  input: "^conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/conv2/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/sub_2/x"
  input: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/read"
  input: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv2/bn_1/moving_mean/read"
  input: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv2/bn_1/moving_mean"
  input: "conv2/bn_1/AssignMovingAvg/conv2/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv2/bn_1/moving_variance/biased"
  input: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv2/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv2/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv2/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv2/bn_1/moving_variance/local_step"
  input: "conv2/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv2/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv2/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv2/bn_1/moving_variance/biased/read"
  input: "conv2/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/sub"
  input: "conv2/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/conv2/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv2/bn_1/moving_variance/biased"
  input: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv2/bn_1/moving_variance/local_step"
  input: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv2/bn_1/moving_variance/biased"
  input: "^conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/AssignAdd"
  input: "^conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/conv2/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/AssignAdd"
  input: "^conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/conv2/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/sub_1/x"
  input: "conv2/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv2/bn_1/moving_variance/local_step"
  input: "^conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/AssignAdd"
  input: "^conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/conv2/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/sub_1"
  input: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/AssignAdd"
  input: "^conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/conv2/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/sub_2/x"
  input: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/read"
  input: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv2/bn_1/moving_variance/read"
  input: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv2/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv2/bn_1/moving_variance"
  input: "conv2/bn_1/AssignMovingAvg_1/conv2/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv2/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv2_1/convolution"
  input: "conv2/bn_1/gamma/read"
  input: "conv2/bn_1/beta/read"
  input: "conv2/bn_1/moving_mean/read"
  input: "conv2/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_32/Relu"
  op: "Relu"
  input: "conv2/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/dw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv3/dw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "conv3/dw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "conv3/dw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv3/dw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1324009
    }
  }
}
node {
  name: "conv3/dw_1/random_uniform/sub"
  op: "Sub"
  input: "conv3/dw_1/random_uniform/max"
  input: "conv3/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/dw_1/random_uniform/mul"
  op: "Mul"
  input: "conv3/dw_1/random_uniform/RandomUniform"
  input: "conv3/dw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/dw_1/random_uniform"
  op: "Add"
  input: "conv3/dw_1/random_uniform/mul"
  input: "conv3/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/dw_1/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw_1/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv3/dw_1/depthwise_kernel"
  input: "conv3/dw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw_1/depthwise_kernel/read"
  op: "Identity"
  input: "conv3/dw_1/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw_1/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv3/dw_1/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv3/dw_1/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv3/dw_1/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_32/Relu"
  input: "conv3/dw_1/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv3/dw/bn_1/gamma"
  input: "conv3/dw/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn_1/gamma/read"
  op: "Identity"
  input: "conv3/dw/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/bn_1/beta/Assign"
  op: "Assign"
  input: "conv3/dw/bn_1/beta"
  input: "conv3/dw/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn_1/beta/read"
  op: "Identity"
  input: "conv3/dw/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv3/dw/bn_1/moving_mean"
  input: "conv3/dw/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv3/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv3/dw/bn_1/moving_variance"
  input: "conv3/dw/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv3/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv3/dw_1/depthwise"
  input: "conv3/dw/bn_1/gamma/read"
  input: "conv3/dw/bn_1/beta/read"
  input: "conv3/dw/bn_1/Const_4"
  input: "conv3/dw/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn_1/Shape"
  op: "Shape"
  input: "conv3/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/dw/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv3/dw/bn_1/Shape"
  input: "conv3/dw/bn_1/strided_slice/stack"
  input: "conv3/dw/bn_1/strided_slice/stack_1"
  input: "conv3/dw/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv3/dw/bn_1/Shape_1"
  op: "Shape"
  input: "conv3/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/dw/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv3/dw/bn_1/Shape_1"
  input: "conv3/dw/bn_1/strided_slice_1/stack"
  input: "conv3/dw/bn_1/strided_slice_1/stack_1"
  input: "conv3/dw/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv3/dw/bn_1/Shape_2"
  op: "Shape"
  input: "conv3/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/dw/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv3/dw/bn_1/Shape_2"
  input: "conv3/dw/bn_1/strided_slice_2/stack"
  input: "conv3/dw/bn_1/strided_slice_2/stack_1"
  input: "conv3/dw/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv3/dw/bn_1/Rank/packed"
  op: "Pack"
  input: "conv3/dw/bn_1/strided_slice"
  input: "conv3/dw/bn_1/strided_slice_1"
  input: "conv3/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3/dw/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/range"
  op: "Range"
  input: "conv3/dw/bn_1/range/start"
  input: "conv3/dw/bn_1/Rank"
  input: "conv3/dw/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/dw/bn_1/Prod/input"
  op: "Pack"
  input: "conv3/dw/bn_1/strided_slice"
  input: "conv3/dw/bn_1/strided_slice_1"
  input: "conv3/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3/dw/bn_1/Prod"
  op: "Prod"
  input: "conv3/dw/bn_1/Prod/input"
  input: "conv3/dw/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/dw/bn_1/Cast"
  op: "Cast"
  input: "conv3/dw/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/dw/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/sub"
  op: "Sub"
  input: "conv3/dw/bn_1/Cast"
  input: "conv3/dw/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/dw/bn_1/truediv"
  op: "RealDiv"
  input: "conv3/dw/bn_1/Cast"
  input: "conv3/dw/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/dw/bn_1/mul"
  op: "Mul"
  input: "conv3/dw/bn_1/FusedBatchNorm:2"
  input: "conv3/dw/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv3/dw/bn_1/moving_mean/biased"
  input: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv3/dw/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv3/dw/bn_1/moving_mean/local_step"
  input: "conv3/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv3/dw/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv3/dw/bn_1/moving_mean/biased/read"
  input: "conv3/dw/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/sub"
  input: "conv3/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/conv3/dw/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv3/dw/bn_1/moving_mean/biased"
  input: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv3/dw/bn_1/moving_mean/local_step"
  input: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv3/dw/bn_1/moving_mean/biased"
  input: "^conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/conv3/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/conv3/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/sub_1/x"
  input: "conv3/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv3/dw/bn_1/moving_mean/local_step"
  input: "^conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/conv3/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/sub_1"
  input: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/conv3/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/sub_2/x"
  input: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/read"
  input: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv3/dw/bn_1/moving_mean/read"
  input: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv3/dw/bn_1/moving_mean"
  input: "conv3/dw/bn_1/AssignMovingAvg/conv3/dw/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv3/dw/bn_1/moving_variance/biased"
  input: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv3/dw/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv3/dw/bn_1/moving_variance/local_step"
  input: "conv3/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/dw/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv3/dw/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv3/dw/bn_1/moving_variance/biased/read"
  input: "conv3/dw/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/sub"
  input: "conv3/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/conv3/dw/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv3/dw/bn_1/moving_variance/biased"
  input: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv3/dw/bn_1/moving_variance/local_step"
  input: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv3/dw/bn_1/moving_variance/biased"
  input: "^conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/conv3/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/conv3/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/sub_1/x"
  input: "conv3/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv3/dw/bn_1/moving_variance/local_step"
  input: "^conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/conv3/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/sub_1"
  input: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/conv3/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/sub_2/x"
  input: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/read"
  input: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv3/dw/bn_1/moving_variance/read"
  input: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/dw/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv3/dw/bn_1/moving_variance"
  input: "conv3/dw/bn_1/AssignMovingAvg_1/conv3/dw/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/dw/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv3/dw_1/depthwise"
  input: "conv3/dw/bn_1/gamma/read"
  input: "conv3/dw/bn_1/beta/read"
  input: "conv3/dw/bn_1/moving_mean/read"
  input: "conv3/dw/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_33/Relu"
  op: "Relu"
  input: "conv3/dw/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "conv3_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "conv3_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv3_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3799791
    }
  }
}
node {
  name: "conv3_1/random_uniform/sub"
  op: "Sub"
  input: "conv3_1/random_uniform/max"
  input: "conv3_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3_1/random_uniform/mul"
  op: "Mul"
  input: "conv3_1/random_uniform/RandomUniform"
  input: "conv3_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3_1/random_uniform"
  op: "Add"
  input: "conv3_1/random_uniform/mul"
  input: "conv3_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3_1/kernel/Assign"
  op: "Assign"
  input: "conv3_1/kernel"
  input: "conv3_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3_1/kernel/read"
  op: "Identity"
  input: "conv3_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/kernel"
      }
    }
  }
}
node {
  name: "conv3_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_1/convolution"
  op: "Conv2D"
  input: "activation_33/Relu"
  input: "conv3_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv3/bn_1/gamma"
  input: "conv3/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn_1/gamma/read"
  op: "Identity"
  input: "conv3/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv3/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/bn_1/beta/Assign"
  op: "Assign"
  input: "conv3/bn_1/beta"
  input: "conv3/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn_1/beta/read"
  op: "Identity"
  input: "conv3/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv3/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv3/bn_1/moving_mean"
  input: "conv3/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv3/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv3/bn_1/moving_variance"
  input: "conv3/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv3/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv3/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv3/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv3_1/convolution"
  input: "conv3/bn_1/gamma/read"
  input: "conv3/bn_1/beta/read"
  input: "conv3/bn_1/Const_4"
  input: "conv3/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn_1/Shape"
  op: "Shape"
  input: "conv3_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv3/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv3/bn_1/Shape"
  input: "conv3/bn_1/strided_slice/stack"
  input: "conv3/bn_1/strided_slice/stack_1"
  input: "conv3/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv3/bn_1/Shape_1"
  op: "Shape"
  input: "conv3_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv3/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv3/bn_1/Shape_1"
  input: "conv3/bn_1/strided_slice_1/stack"
  input: "conv3/bn_1/strided_slice_1/stack_1"
  input: "conv3/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv3/bn_1/Shape_2"
  op: "Shape"
  input: "conv3_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv3/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv3/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv3/bn_1/Shape_2"
  input: "conv3/bn_1/strided_slice_2/stack"
  input: "conv3/bn_1/strided_slice_2/stack_1"
  input: "conv3/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv3/bn_1/Rank/packed"
  op: "Pack"
  input: "conv3/bn_1/strided_slice"
  input: "conv3/bn_1/strided_slice_1"
  input: "conv3/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv3/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv3/bn_1/range"
  op: "Range"
  input: "conv3/bn_1/range/start"
  input: "conv3/bn_1/Rank"
  input: "conv3/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/bn_1/Prod/input"
  op: "Pack"
  input: "conv3/bn_1/strided_slice"
  input: "conv3/bn_1/strided_slice_1"
  input: "conv3/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv3/bn_1/Prod"
  op: "Prod"
  input: "conv3/bn_1/Prod/input"
  input: "conv3/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/bn_1/Cast"
  op: "Cast"
  input: "conv3/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv3/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv3/bn_1/sub"
  op: "Sub"
  input: "conv3/bn_1/Cast"
  input: "conv3/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/bn_1/truediv"
  op: "RealDiv"
  input: "conv3/bn_1/Cast"
  input: "conv3/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/bn_1/mul"
  op: "Mul"
  input: "conv3/bn_1/FusedBatchNorm:2"
  input: "conv3/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv3/bn_1/moving_mean/biased"
  input: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv3/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv3/bn_1/moving_mean/local_step"
  input: "conv3/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv3/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv3/bn_1/moving_mean/biased/read"
  input: "conv3/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/sub"
  input: "conv3/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/conv3/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv3/bn_1/moving_mean/biased"
  input: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv3/bn_1/moving_mean/local_step"
  input: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv3/bn_1/moving_mean/biased"
  input: "^conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/AssignAdd"
  input: "^conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/conv3/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/AssignAdd"
  input: "^conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/conv3/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/sub_1/x"
  input: "conv3/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv3/bn_1/moving_mean/local_step"
  input: "^conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/AssignAdd"
  input: "^conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/conv3/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/sub_1"
  input: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/AssignAdd"
  input: "^conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/conv3/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/sub_2/x"
  input: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/read"
  input: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv3/bn_1/moving_mean/read"
  input: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv3/bn_1/moving_mean"
  input: "conv3/bn_1/AssignMovingAvg/conv3/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv3/bn_1/moving_variance/biased"
  input: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv3/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv3/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv3/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv3/bn_1/moving_variance/local_step"
  input: "conv3/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv3/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv3/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv3/bn_1/moving_variance/biased/read"
  input: "conv3/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/sub"
  input: "conv3/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/conv3/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv3/bn_1/moving_variance/biased"
  input: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv3/bn_1/moving_variance/local_step"
  input: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv3/bn_1/moving_variance/biased"
  input: "^conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/AssignAdd"
  input: "^conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/conv3/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/AssignAdd"
  input: "^conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/conv3/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/sub_1/x"
  input: "conv3/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv3/bn_1/moving_variance/local_step"
  input: "^conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/AssignAdd"
  input: "^conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/conv3/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/sub_1"
  input: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/AssignAdd"
  input: "^conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/conv3/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/sub_2/x"
  input: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/read"
  input: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv3/bn_1/moving_variance/read"
  input: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv3/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv3/bn_1/moving_variance"
  input: "conv3/bn_1/AssignMovingAvg_1/conv3/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv3/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv3_1/convolution"
  input: "conv3/bn_1/gamma/read"
  input: "conv3/bn_1/beta/read"
  input: "conv3/bn_1/moving_mean/read"
  input: "conv3/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_34/Relu"
  op: "Relu"
  input: "conv3/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv3_padding_1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv3_padding_1/Pad"
  op: "Pad"
  input: "activation_34/Relu"
  input: "conv3_padding_1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/dw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv4/dw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0718885138630867
      }
    }
  }
}
node {
  name: "conv4/dw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0718885138630867
      }
    }
  }
}
node {
  name: "conv4/dw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv4/dw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2154523
    }
  }
}
node {
  name: "conv4/dw_1/random_uniform/sub"
  op: "Sub"
  input: "conv4/dw_1/random_uniform/max"
  input: "conv4/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/dw_1/random_uniform/mul"
  op: "Mul"
  input: "conv4/dw_1/random_uniform/RandomUniform"
  input: "conv4/dw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/dw_1/random_uniform"
  op: "Add"
  input: "conv4/dw_1/random_uniform/mul"
  input: "conv4/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/dw_1/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw_1/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv4/dw_1/depthwise_kernel"
  input: "conv4/dw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw_1/depthwise_kernel/read"
  op: "Identity"
  input: "conv4/dw_1/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw_1/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv4/dw_1/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv4/dw_1/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv4/dw_1/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv3_padding_1/Pad"
  input: "conv4/dw_1/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv4/dw/bn_1/gamma"
  input: "conv4/dw/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn_1/gamma/read"
  op: "Identity"
  input: "conv4/dw/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/bn_1/beta/Assign"
  op: "Assign"
  input: "conv4/dw/bn_1/beta"
  input: "conv4/dw/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn_1/beta/read"
  op: "Identity"
  input: "conv4/dw/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv4/dw/bn_1/moving_mean"
  input: "conv4/dw/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv4/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv4/dw/bn_1/moving_variance"
  input: "conv4/dw/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv4/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv4/dw_1/depthwise"
  input: "conv4/dw/bn_1/gamma/read"
  input: "conv4/dw/bn_1/beta/read"
  input: "conv4/dw/bn_1/Const_4"
  input: "conv4/dw/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn_1/Shape"
  op: "Shape"
  input: "conv4/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/dw/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv4/dw/bn_1/Shape"
  input: "conv4/dw/bn_1/strided_slice/stack"
  input: "conv4/dw/bn_1/strided_slice/stack_1"
  input: "conv4/dw/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4/dw/bn_1/Shape_1"
  op: "Shape"
  input: "conv4/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/dw/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv4/dw/bn_1/Shape_1"
  input: "conv4/dw/bn_1/strided_slice_1/stack"
  input: "conv4/dw/bn_1/strided_slice_1/stack_1"
  input: "conv4/dw/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4/dw/bn_1/Shape_2"
  op: "Shape"
  input: "conv4/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/dw/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv4/dw/bn_1/Shape_2"
  input: "conv4/dw/bn_1/strided_slice_2/stack"
  input: "conv4/dw/bn_1/strided_slice_2/stack_1"
  input: "conv4/dw/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4/dw/bn_1/Rank/packed"
  op: "Pack"
  input: "conv4/dw/bn_1/strided_slice"
  input: "conv4/dw/bn_1/strided_slice_1"
  input: "conv4/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4/dw/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/range"
  op: "Range"
  input: "conv4/dw/bn_1/range/start"
  input: "conv4/dw/bn_1/Rank"
  input: "conv4/dw/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/dw/bn_1/Prod/input"
  op: "Pack"
  input: "conv4/dw/bn_1/strided_slice"
  input: "conv4/dw/bn_1/strided_slice_1"
  input: "conv4/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4/dw/bn_1/Prod"
  op: "Prod"
  input: "conv4/dw/bn_1/Prod/input"
  input: "conv4/dw/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/dw/bn_1/Cast"
  op: "Cast"
  input: "conv4/dw/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/dw/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/sub"
  op: "Sub"
  input: "conv4/dw/bn_1/Cast"
  input: "conv4/dw/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/dw/bn_1/truediv"
  op: "RealDiv"
  input: "conv4/dw/bn_1/Cast"
  input: "conv4/dw/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/dw/bn_1/mul"
  op: "Mul"
  input: "conv4/dw/bn_1/FusedBatchNorm:2"
  input: "conv4/dw/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv4/dw/bn_1/moving_mean/biased"
  input: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv4/dw/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv4/dw/bn_1/moving_mean/local_step"
  input: "conv4/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv4/dw/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv4/dw/bn_1/moving_mean/biased/read"
  input: "conv4/dw/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/sub"
  input: "conv4/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/conv4/dw/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv4/dw/bn_1/moving_mean/biased"
  input: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv4/dw/bn_1/moving_mean/local_step"
  input: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv4/dw/bn_1/moving_mean/biased"
  input: "^conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/conv4/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/conv4/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/sub_1/x"
  input: "conv4/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv4/dw/bn_1/moving_mean/local_step"
  input: "^conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/conv4/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/sub_1"
  input: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/conv4/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/sub_2/x"
  input: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/read"
  input: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv4/dw/bn_1/moving_mean/read"
  input: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv4/dw/bn_1/moving_mean"
  input: "conv4/dw/bn_1/AssignMovingAvg/conv4/dw/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv4/dw/bn_1/moving_variance/biased"
  input: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv4/dw/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv4/dw/bn_1/moving_variance/local_step"
  input: "conv4/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/dw/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv4/dw/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv4/dw/bn_1/moving_variance/biased/read"
  input: "conv4/dw/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/sub"
  input: "conv4/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/conv4/dw/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv4/dw/bn_1/moving_variance/biased"
  input: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv4/dw/bn_1/moving_variance/local_step"
  input: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv4/dw/bn_1/moving_variance/biased"
  input: "^conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/conv4/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/conv4/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/sub_1/x"
  input: "conv4/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv4/dw/bn_1/moving_variance/local_step"
  input: "^conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/conv4/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/sub_1"
  input: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/conv4/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/sub_2/x"
  input: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/read"
  input: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv4/dw/bn_1/moving_variance/read"
  input: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/dw/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv4/dw/bn_1/moving_variance"
  input: "conv4/dw/bn_1/AssignMovingAvg_1/conv4/dw/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/dw/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv4/dw_1/depthwise"
  input: "conv4/dw/bn_1/gamma/read"
  input: "conv4/dw/bn_1/beta/read"
  input: "conv4/dw/bn_1/moving_mean/read"
  input: "conv4/dw/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_35/Relu"
  op: "Relu"
  input: "conv4/dw/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv4_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "conv4_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "conv4_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv4_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6927310
    }
  }
}
node {
  name: "conv4_1/random_uniform/sub"
  op: "Sub"
  input: "conv4_1/random_uniform/max"
  input: "conv4_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4_1/random_uniform/mul"
  op: "Mul"
  input: "conv4_1/random_uniform/RandomUniform"
  input: "conv4_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4_1/random_uniform"
  op: "Add"
  input: "conv4_1/random_uniform/mul"
  input: "conv4_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4_1/kernel/Assign"
  op: "Assign"
  input: "conv4_1/kernel"
  input: "conv4_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4_1/kernel/read"
  op: "Identity"
  input: "conv4_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/kernel"
      }
    }
  }
}
node {
  name: "conv4_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_1/convolution"
  op: "Conv2D"
  input: "activation_35/Relu"
  input: "conv4_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv4/bn_1/gamma"
  input: "conv4/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn_1/gamma/read"
  op: "Identity"
  input: "conv4/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv4/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/bn_1/beta/Assign"
  op: "Assign"
  input: "conv4/bn_1/beta"
  input: "conv4/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn_1/beta/read"
  op: "Identity"
  input: "conv4/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv4/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv4/bn_1/moving_mean"
  input: "conv4/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv4/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv4/bn_1/moving_variance"
  input: "conv4/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv4/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv4/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv4/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv4_1/convolution"
  input: "conv4/bn_1/gamma/read"
  input: "conv4/bn_1/beta/read"
  input: "conv4/bn_1/Const_4"
  input: "conv4/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn_1/Shape"
  op: "Shape"
  input: "conv4_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv4/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv4/bn_1/Shape"
  input: "conv4/bn_1/strided_slice/stack"
  input: "conv4/bn_1/strided_slice/stack_1"
  input: "conv4/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4/bn_1/Shape_1"
  op: "Shape"
  input: "conv4_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv4/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv4/bn_1/Shape_1"
  input: "conv4/bn_1/strided_slice_1/stack"
  input: "conv4/bn_1/strided_slice_1/stack_1"
  input: "conv4/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4/bn_1/Shape_2"
  op: "Shape"
  input: "conv4_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv4/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv4/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv4/bn_1/Shape_2"
  input: "conv4/bn_1/strided_slice_2/stack"
  input: "conv4/bn_1/strided_slice_2/stack_1"
  input: "conv4/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4/bn_1/Rank/packed"
  op: "Pack"
  input: "conv4/bn_1/strided_slice"
  input: "conv4/bn_1/strided_slice_1"
  input: "conv4/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv4/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4/bn_1/range"
  op: "Range"
  input: "conv4/bn_1/range/start"
  input: "conv4/bn_1/Rank"
  input: "conv4/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/bn_1/Prod/input"
  op: "Pack"
  input: "conv4/bn_1/strided_slice"
  input: "conv4/bn_1/strided_slice_1"
  input: "conv4/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4/bn_1/Prod"
  op: "Prod"
  input: "conv4/bn_1/Prod/input"
  input: "conv4/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/bn_1/Cast"
  op: "Cast"
  input: "conv4/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv4/bn_1/sub"
  op: "Sub"
  input: "conv4/bn_1/Cast"
  input: "conv4/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/bn_1/truediv"
  op: "RealDiv"
  input: "conv4/bn_1/Cast"
  input: "conv4/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/bn_1/mul"
  op: "Mul"
  input: "conv4/bn_1/FusedBatchNorm:2"
  input: "conv4/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv4/bn_1/moving_mean/biased"
  input: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv4/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv4/bn_1/moving_mean/local_step"
  input: "conv4/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv4/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv4/bn_1/moving_mean/biased/read"
  input: "conv4/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/sub"
  input: "conv4/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/conv4/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv4/bn_1/moving_mean/biased"
  input: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv4/bn_1/moving_mean/local_step"
  input: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv4/bn_1/moving_mean/biased"
  input: "^conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/AssignAdd"
  input: "^conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/conv4/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/AssignAdd"
  input: "^conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/conv4/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/sub_1/x"
  input: "conv4/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv4/bn_1/moving_mean/local_step"
  input: "^conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/AssignAdd"
  input: "^conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/conv4/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/sub_1"
  input: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/AssignAdd"
  input: "^conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/conv4/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/sub_2/x"
  input: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/read"
  input: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv4/bn_1/moving_mean/read"
  input: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv4/bn_1/moving_mean"
  input: "conv4/bn_1/AssignMovingAvg/conv4/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv4/bn_1/moving_variance/biased"
  input: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv4/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv4/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv4/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv4/bn_1/moving_variance/local_step"
  input: "conv4/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv4/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv4/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv4/bn_1/moving_variance/biased/read"
  input: "conv4/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/sub"
  input: "conv4/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/conv4/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv4/bn_1/moving_variance/biased"
  input: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv4/bn_1/moving_variance/local_step"
  input: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv4/bn_1/moving_variance/biased"
  input: "^conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/AssignAdd"
  input: "^conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/conv4/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/AssignAdd"
  input: "^conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/conv4/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/sub_1/x"
  input: "conv4/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv4/bn_1/moving_variance/local_step"
  input: "^conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/AssignAdd"
  input: "^conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/conv4/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/sub_1"
  input: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/AssignAdd"
  input: "^conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/conv4/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/sub_2/x"
  input: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/read"
  input: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv4/bn_1/moving_variance/read"
  input: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv4/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv4/bn_1/moving_variance"
  input: "conv4/bn_1/AssignMovingAvg_1/conv4/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv4/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv4_1/convolution"
  input: "conv4/bn_1/gamma/read"
  input: "conv4/bn_1/beta/read"
  input: "conv4/bn_1/moving_mean/read"
  input: "conv4/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_36/Relu"
  op: "Relu"
  input: "conv4/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/dw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv5/dw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "conv5/dw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "conv5/dw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv5/dw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7461473
    }
  }
}
node {
  name: "conv5/dw_1/random_uniform/sub"
  op: "Sub"
  input: "conv5/dw_1/random_uniform/max"
  input: "conv5/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/dw_1/random_uniform/mul"
  op: "Mul"
  input: "conv5/dw_1/random_uniform/RandomUniform"
  input: "conv5/dw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/dw_1/random_uniform"
  op: "Add"
  input: "conv5/dw_1/random_uniform/mul"
  input: "conv5/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/dw_1/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw_1/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv5/dw_1/depthwise_kernel"
  input: "conv5/dw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw_1/depthwise_kernel/read"
  op: "Identity"
  input: "conv5/dw_1/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw_1/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv5/dw_1/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv5/dw_1/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv5/dw_1/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_36/Relu"
  input: "conv5/dw_1/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv5/dw/bn_1/gamma"
  input: "conv5/dw/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn_1/gamma/read"
  op: "Identity"
  input: "conv5/dw/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/bn_1/beta/Assign"
  op: "Assign"
  input: "conv5/dw/bn_1/beta"
  input: "conv5/dw/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn_1/beta/read"
  op: "Identity"
  input: "conv5/dw/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv5/dw/bn_1/moving_mean"
  input: "conv5/dw/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv5/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv5/dw/bn_1/moving_variance"
  input: "conv5/dw/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv5/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv5/dw_1/depthwise"
  input: "conv5/dw/bn_1/gamma/read"
  input: "conv5/dw/bn_1/beta/read"
  input: "conv5/dw/bn_1/Const_4"
  input: "conv5/dw/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn_1/Shape"
  op: "Shape"
  input: "conv5/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/dw/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv5/dw/bn_1/Shape"
  input: "conv5/dw/bn_1/strided_slice/stack"
  input: "conv5/dw/bn_1/strided_slice/stack_1"
  input: "conv5/dw/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv5/dw/bn_1/Shape_1"
  op: "Shape"
  input: "conv5/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/dw/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv5/dw/bn_1/Shape_1"
  input: "conv5/dw/bn_1/strided_slice_1/stack"
  input: "conv5/dw/bn_1/strided_slice_1/stack_1"
  input: "conv5/dw/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv5/dw/bn_1/Shape_2"
  op: "Shape"
  input: "conv5/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/dw/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv5/dw/bn_1/Shape_2"
  input: "conv5/dw/bn_1/strided_slice_2/stack"
  input: "conv5/dw/bn_1/strided_slice_2/stack_1"
  input: "conv5/dw/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv5/dw/bn_1/Rank/packed"
  op: "Pack"
  input: "conv5/dw/bn_1/strided_slice"
  input: "conv5/dw/bn_1/strided_slice_1"
  input: "conv5/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv5/dw/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/range"
  op: "Range"
  input: "conv5/dw/bn_1/range/start"
  input: "conv5/dw/bn_1/Rank"
  input: "conv5/dw/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/dw/bn_1/Prod/input"
  op: "Pack"
  input: "conv5/dw/bn_1/strided_slice"
  input: "conv5/dw/bn_1/strided_slice_1"
  input: "conv5/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv5/dw/bn_1/Prod"
  op: "Prod"
  input: "conv5/dw/bn_1/Prod/input"
  input: "conv5/dw/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/dw/bn_1/Cast"
  op: "Cast"
  input: "conv5/dw/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/dw/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/sub"
  op: "Sub"
  input: "conv5/dw/bn_1/Cast"
  input: "conv5/dw/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/dw/bn_1/truediv"
  op: "RealDiv"
  input: "conv5/dw/bn_1/Cast"
  input: "conv5/dw/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/dw/bn_1/mul"
  op: "Mul"
  input: "conv5/dw/bn_1/FusedBatchNorm:2"
  input: "conv5/dw/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv5/dw/bn_1/moving_mean/biased"
  input: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv5/dw/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv5/dw/bn_1/moving_mean/local_step"
  input: "conv5/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv5/dw/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv5/dw/bn_1/moving_mean/biased/read"
  input: "conv5/dw/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/sub"
  input: "conv5/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/conv5/dw/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv5/dw/bn_1/moving_mean/biased"
  input: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv5/dw/bn_1/moving_mean/local_step"
  input: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv5/dw/bn_1/moving_mean/biased"
  input: "^conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/conv5/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/conv5/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/sub_1/x"
  input: "conv5/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv5/dw/bn_1/moving_mean/local_step"
  input: "^conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/conv5/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/sub_1"
  input: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/conv5/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/sub_2/x"
  input: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/read"
  input: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv5/dw/bn_1/moving_mean/read"
  input: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv5/dw/bn_1/moving_mean"
  input: "conv5/dw/bn_1/AssignMovingAvg/conv5/dw/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv5/dw/bn_1/moving_variance/biased"
  input: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv5/dw/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv5/dw/bn_1/moving_variance/local_step"
  input: "conv5/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/dw/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv5/dw/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv5/dw/bn_1/moving_variance/biased/read"
  input: "conv5/dw/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/sub"
  input: "conv5/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/conv5/dw/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv5/dw/bn_1/moving_variance/biased"
  input: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv5/dw/bn_1/moving_variance/local_step"
  input: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv5/dw/bn_1/moving_variance/biased"
  input: "^conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/conv5/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/conv5/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/sub_1/x"
  input: "conv5/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv5/dw/bn_1/moving_variance/local_step"
  input: "^conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/conv5/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/sub_1"
  input: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/conv5/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/sub_2/x"
  input: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/read"
  input: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv5/dw/bn_1/moving_variance/read"
  input: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/dw/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv5/dw/bn_1/moving_variance"
  input: "conv5/dw/bn_1/AssignMovingAvg_1/conv5/dw/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/dw/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv5/dw_1/depthwise"
  input: "conv5/dw/bn_1/gamma/read"
  input: "conv5/dw/bn_1/beta/read"
  input: "conv5/dw/bn_1/moving_mean/read"
  input: "conv5/dw/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_37/Relu"
  op: "Relu"
  input: "conv5/dw/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv5_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "conv5_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "conv5_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv5_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6295766
    }
  }
}
node {
  name: "conv5_1/random_uniform/sub"
  op: "Sub"
  input: "conv5_1/random_uniform/max"
  input: "conv5_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5_1/random_uniform/mul"
  op: "Mul"
  input: "conv5_1/random_uniform/RandomUniform"
  input: "conv5_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5_1/random_uniform"
  op: "Add"
  input: "conv5_1/random_uniform/mul"
  input: "conv5_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5_1/kernel/Assign"
  op: "Assign"
  input: "conv5_1/kernel"
  input: "conv5_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5_1/kernel/read"
  op: "Identity"
  input: "conv5_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5_1/kernel"
      }
    }
  }
}
node {
  name: "conv5_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv5_1/convolution"
  op: "Conv2D"
  input: "activation_37/Relu"
  input: "conv5_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv5/bn_1/gamma"
  input: "conv5/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn_1/gamma/read"
  op: "Identity"
  input: "conv5/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv5/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/bn_1/beta/Assign"
  op: "Assign"
  input: "conv5/bn_1/beta"
  input: "conv5/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn_1/beta/read"
  op: "Identity"
  input: "conv5/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv5/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv5/bn_1/moving_mean"
  input: "conv5/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv5/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv5/bn_1/moving_variance"
  input: "conv5/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv5/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv5/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv5/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv5_1/convolution"
  input: "conv5/bn_1/gamma/read"
  input: "conv5/bn_1/beta/read"
  input: "conv5/bn_1/Const_4"
  input: "conv5/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn_1/Shape"
  op: "Shape"
  input: "conv5_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv5/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv5/bn_1/Shape"
  input: "conv5/bn_1/strided_slice/stack"
  input: "conv5/bn_1/strided_slice/stack_1"
  input: "conv5/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv5/bn_1/Shape_1"
  op: "Shape"
  input: "conv5_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv5/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv5/bn_1/Shape_1"
  input: "conv5/bn_1/strided_slice_1/stack"
  input: "conv5/bn_1/strided_slice_1/stack_1"
  input: "conv5/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv5/bn_1/Shape_2"
  op: "Shape"
  input: "conv5_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv5/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv5/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv5/bn_1/Shape_2"
  input: "conv5/bn_1/strided_slice_2/stack"
  input: "conv5/bn_1/strided_slice_2/stack_1"
  input: "conv5/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv5/bn_1/Rank/packed"
  op: "Pack"
  input: "conv5/bn_1/strided_slice"
  input: "conv5/bn_1/strided_slice_1"
  input: "conv5/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv5/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv5/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv5/bn_1/range"
  op: "Range"
  input: "conv5/bn_1/range/start"
  input: "conv5/bn_1/Rank"
  input: "conv5/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/bn_1/Prod/input"
  op: "Pack"
  input: "conv5/bn_1/strided_slice"
  input: "conv5/bn_1/strided_slice_1"
  input: "conv5/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv5/bn_1/Prod"
  op: "Prod"
  input: "conv5/bn_1/Prod/input"
  input: "conv5/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/bn_1/Cast"
  op: "Cast"
  input: "conv5/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv5/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv5/bn_1/sub"
  op: "Sub"
  input: "conv5/bn_1/Cast"
  input: "conv5/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/bn_1/truediv"
  op: "RealDiv"
  input: "conv5/bn_1/Cast"
  input: "conv5/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/bn_1/mul"
  op: "Mul"
  input: "conv5/bn_1/FusedBatchNorm:2"
  input: "conv5/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv5/bn_1/moving_mean/biased"
  input: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv5/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv5/bn_1/moving_mean/local_step"
  input: "conv5/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv5/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv5/bn_1/moving_mean/biased/read"
  input: "conv5/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/sub"
  input: "conv5/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/conv5/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv5/bn_1/moving_mean/biased"
  input: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv5/bn_1/moving_mean/local_step"
  input: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv5/bn_1/moving_mean/biased"
  input: "^conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/AssignAdd"
  input: "^conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/conv5/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/AssignAdd"
  input: "^conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/conv5/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/sub_1/x"
  input: "conv5/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv5/bn_1/moving_mean/local_step"
  input: "^conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/AssignAdd"
  input: "^conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/conv5/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/sub_1"
  input: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/AssignAdd"
  input: "^conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/conv5/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/sub_2/x"
  input: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/read"
  input: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv5/bn_1/moving_mean/read"
  input: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv5/bn_1/moving_mean"
  input: "conv5/bn_1/AssignMovingAvg/conv5/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv5/bn_1/moving_variance/biased"
  input: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv5/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv5/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv5/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv5/bn_1/moving_variance/local_step"
  input: "conv5/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv5/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv5/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv5/bn_1/moving_variance/biased/read"
  input: "conv5/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/sub"
  input: "conv5/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/conv5/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv5/bn_1/moving_variance/biased"
  input: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv5/bn_1/moving_variance/local_step"
  input: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv5/bn_1/moving_variance/biased"
  input: "^conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/AssignAdd"
  input: "^conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/conv5/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/AssignAdd"
  input: "^conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/conv5/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/sub_1/x"
  input: "conv5/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv5/bn_1/moving_variance/local_step"
  input: "^conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/AssignAdd"
  input: "^conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/conv5/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/sub_1"
  input: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/AssignAdd"
  input: "^conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/conv5/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/sub_2/x"
  input: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/read"
  input: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv5/bn_1/moving_variance/read"
  input: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv5/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv5/bn_1/moving_variance"
  input: "conv5/bn_1/AssignMovingAvg_1/conv5/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv5/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv5_1/convolution"
  input: "conv5/bn_1/gamma/read"
  input: "conv5/bn_1/beta/read"
  input: "conv5/bn_1/moving_mean/read"
  input: "conv5/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_38/Relu"
  op: "Relu"
  input: "conv5/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv4_padding_1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv4_padding_1/Pad"
  op: "Pad"
  input: "activation_38/Relu"
  input: "conv4_padding_1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/dw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv6/dw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0509316585958004
      }
    }
  }
}
node {
  name: "conv6/dw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0509316585958004
      }
    }
  }
}
node {
  name: "conv6/dw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv6/dw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4640128
    }
  }
}
node {
  name: "conv6/dw_1/random_uniform/sub"
  op: "Sub"
  input: "conv6/dw_1/random_uniform/max"
  input: "conv6/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/dw_1/random_uniform/mul"
  op: "Mul"
  input: "conv6/dw_1/random_uniform/RandomUniform"
  input: "conv6/dw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/dw_1/random_uniform"
  op: "Add"
  input: "conv6/dw_1/random_uniform/mul"
  input: "conv6/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/dw_1/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw_1/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv6/dw_1/depthwise_kernel"
  input: "conv6/dw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw_1/depthwise_kernel/read"
  op: "Identity"
  input: "conv6/dw_1/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw_1/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv6/dw_1/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv6/dw_1/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv6/dw_1/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv4_padding_1/Pad"
  input: "conv6/dw_1/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv6/dw/bn_1/gamma"
  input: "conv6/dw/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn_1/gamma/read"
  op: "Identity"
  input: "conv6/dw/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/bn_1/beta/Assign"
  op: "Assign"
  input: "conv6/dw/bn_1/beta"
  input: "conv6/dw/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn_1/beta/read"
  op: "Identity"
  input: "conv6/dw/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv6/dw/bn_1/moving_mean"
  input: "conv6/dw/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv6/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv6/dw/bn_1/moving_variance"
  input: "conv6/dw/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv6/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv6/dw_1/depthwise"
  input: "conv6/dw/bn_1/gamma/read"
  input: "conv6/dw/bn_1/beta/read"
  input: "conv6/dw/bn_1/Const_4"
  input: "conv6/dw/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn_1/Shape"
  op: "Shape"
  input: "conv6/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/dw/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv6/dw/bn_1/Shape"
  input: "conv6/dw/bn_1/strided_slice/stack"
  input: "conv6/dw/bn_1/strided_slice/stack_1"
  input: "conv6/dw/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6/dw/bn_1/Shape_1"
  op: "Shape"
  input: "conv6/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/dw/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv6/dw/bn_1/Shape_1"
  input: "conv6/dw/bn_1/strided_slice_1/stack"
  input: "conv6/dw/bn_1/strided_slice_1/stack_1"
  input: "conv6/dw/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6/dw/bn_1/Shape_2"
  op: "Shape"
  input: "conv6/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/dw/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv6/dw/bn_1/Shape_2"
  input: "conv6/dw/bn_1/strided_slice_2/stack"
  input: "conv6/dw/bn_1/strided_slice_2/stack_1"
  input: "conv6/dw/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6/dw/bn_1/Rank/packed"
  op: "Pack"
  input: "conv6/dw/bn_1/strided_slice"
  input: "conv6/dw/bn_1/strided_slice_1"
  input: "conv6/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv6/dw/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/range"
  op: "Range"
  input: "conv6/dw/bn_1/range/start"
  input: "conv6/dw/bn_1/Rank"
  input: "conv6/dw/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/dw/bn_1/Prod/input"
  op: "Pack"
  input: "conv6/dw/bn_1/strided_slice"
  input: "conv6/dw/bn_1/strided_slice_1"
  input: "conv6/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv6/dw/bn_1/Prod"
  op: "Prod"
  input: "conv6/dw/bn_1/Prod/input"
  input: "conv6/dw/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/dw/bn_1/Cast"
  op: "Cast"
  input: "conv6/dw/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/dw/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/sub"
  op: "Sub"
  input: "conv6/dw/bn_1/Cast"
  input: "conv6/dw/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/dw/bn_1/truediv"
  op: "RealDiv"
  input: "conv6/dw/bn_1/Cast"
  input: "conv6/dw/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/dw/bn_1/mul"
  op: "Mul"
  input: "conv6/dw/bn_1/FusedBatchNorm:2"
  input: "conv6/dw/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv6/dw/bn_1/moving_mean/biased"
  input: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv6/dw/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv6/dw/bn_1/moving_mean/local_step"
  input: "conv6/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv6/dw/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv6/dw/bn_1/moving_mean/biased/read"
  input: "conv6/dw/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/sub"
  input: "conv6/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/conv6/dw/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv6/dw/bn_1/moving_mean/biased"
  input: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv6/dw/bn_1/moving_mean/local_step"
  input: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv6/dw/bn_1/moving_mean/biased"
  input: "^conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/conv6/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/conv6/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/sub_1/x"
  input: "conv6/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv6/dw/bn_1/moving_mean/local_step"
  input: "^conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/conv6/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/sub_1"
  input: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/conv6/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/sub_2/x"
  input: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/read"
  input: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv6/dw/bn_1/moving_mean/read"
  input: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv6/dw/bn_1/moving_mean"
  input: "conv6/dw/bn_1/AssignMovingAvg/conv6/dw/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv6/dw/bn_1/moving_variance/biased"
  input: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv6/dw/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv6/dw/bn_1/moving_variance/local_step"
  input: "conv6/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/dw/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv6/dw/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv6/dw/bn_1/moving_variance/biased/read"
  input: "conv6/dw/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/sub"
  input: "conv6/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/conv6/dw/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv6/dw/bn_1/moving_variance/biased"
  input: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv6/dw/bn_1/moving_variance/local_step"
  input: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv6/dw/bn_1/moving_variance/biased"
  input: "^conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/conv6/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/conv6/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/sub_1/x"
  input: "conv6/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv6/dw/bn_1/moving_variance/local_step"
  input: "^conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/conv6/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/sub_1"
  input: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/conv6/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/sub_2/x"
  input: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/read"
  input: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv6/dw/bn_1/moving_variance/read"
  input: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/dw/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv6/dw/bn_1/moving_variance"
  input: "conv6/dw/bn_1/AssignMovingAvg_1/conv6/dw/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/dw/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv6/dw_1/depthwise"
  input: "conv6/dw/bn_1/gamma/read"
  input: "conv6/dw/bn_1/beta/read"
  input: "conv6/dw/bn_1/moving_mean/read"
  input: "conv6/dw/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_39/Relu"
  op: "Relu"
  input: "conv6/dw/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv6_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "conv6_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "conv6_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv6_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 556343
    }
  }
}
node {
  name: "conv6_1/random_uniform/sub"
  op: "Sub"
  input: "conv6_1/random_uniform/max"
  input: "conv6_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6_1/random_uniform/mul"
  op: "Mul"
  input: "conv6_1/random_uniform/RandomUniform"
  input: "conv6_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6_1/random_uniform"
  op: "Add"
  input: "conv6_1/random_uniform/mul"
  input: "conv6_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6_1/kernel/Assign"
  op: "Assign"
  input: "conv6_1/kernel"
  input: "conv6_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6_1/kernel/read"
  op: "Identity"
  input: "conv6_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6_1/kernel"
      }
    }
  }
}
node {
  name: "conv6_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv6_1/convolution"
  op: "Conv2D"
  input: "activation_39/Relu"
  input: "conv6_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv6/bn_1/gamma"
  input: "conv6/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn_1/gamma/read"
  op: "Identity"
  input: "conv6/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv6/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/bn_1/beta/Assign"
  op: "Assign"
  input: "conv6/bn_1/beta"
  input: "conv6/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn_1/beta/read"
  op: "Identity"
  input: "conv6/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv6/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv6/bn_1/moving_mean"
  input: "conv6/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv6/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv6/bn_1/moving_variance"
  input: "conv6/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv6/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv6/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv6/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv6_1/convolution"
  input: "conv6/bn_1/gamma/read"
  input: "conv6/bn_1/beta/read"
  input: "conv6/bn_1/Const_4"
  input: "conv6/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn_1/Shape"
  op: "Shape"
  input: "conv6_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv6/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv6/bn_1/Shape"
  input: "conv6/bn_1/strided_slice/stack"
  input: "conv6/bn_1/strided_slice/stack_1"
  input: "conv6/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6/bn_1/Shape_1"
  op: "Shape"
  input: "conv6_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv6/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv6/bn_1/Shape_1"
  input: "conv6/bn_1/strided_slice_1/stack"
  input: "conv6/bn_1/strided_slice_1/stack_1"
  input: "conv6/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6/bn_1/Shape_2"
  op: "Shape"
  input: "conv6_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv6/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv6/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv6/bn_1/Shape_2"
  input: "conv6/bn_1/strided_slice_2/stack"
  input: "conv6/bn_1/strided_slice_2/stack_1"
  input: "conv6/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6/bn_1/Rank/packed"
  op: "Pack"
  input: "conv6/bn_1/strided_slice"
  input: "conv6/bn_1/strided_slice_1"
  input: "conv6/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv6/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv6/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6/bn_1/range"
  op: "Range"
  input: "conv6/bn_1/range/start"
  input: "conv6/bn_1/Rank"
  input: "conv6/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/bn_1/Prod/input"
  op: "Pack"
  input: "conv6/bn_1/strided_slice"
  input: "conv6/bn_1/strided_slice_1"
  input: "conv6/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv6/bn_1/Prod"
  op: "Prod"
  input: "conv6/bn_1/Prod/input"
  input: "conv6/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/bn_1/Cast"
  op: "Cast"
  input: "conv6/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv6/bn_1/sub"
  op: "Sub"
  input: "conv6/bn_1/Cast"
  input: "conv6/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/bn_1/truediv"
  op: "RealDiv"
  input: "conv6/bn_1/Cast"
  input: "conv6/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/bn_1/mul"
  op: "Mul"
  input: "conv6/bn_1/FusedBatchNorm:2"
  input: "conv6/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv6/bn_1/moving_mean/biased"
  input: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv6/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv6/bn_1/moving_mean/local_step"
  input: "conv6/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv6/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv6/bn_1/moving_mean/biased/read"
  input: "conv6/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/sub"
  input: "conv6/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/conv6/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv6/bn_1/moving_mean/biased"
  input: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv6/bn_1/moving_mean/local_step"
  input: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv6/bn_1/moving_mean/biased"
  input: "^conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/AssignAdd"
  input: "^conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/conv6/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/AssignAdd"
  input: "^conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/conv6/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/sub_1/x"
  input: "conv6/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv6/bn_1/moving_mean/local_step"
  input: "^conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/AssignAdd"
  input: "^conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/conv6/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/sub_1"
  input: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/AssignAdd"
  input: "^conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/conv6/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/sub_2/x"
  input: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/read"
  input: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv6/bn_1/moving_mean/read"
  input: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv6/bn_1/moving_mean"
  input: "conv6/bn_1/AssignMovingAvg/conv6/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv6/bn_1/moving_variance/biased"
  input: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv6/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv6/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv6/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv6/bn_1/moving_variance/local_step"
  input: "conv6/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv6/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv6/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv6/bn_1/moving_variance/biased/read"
  input: "conv6/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/sub"
  input: "conv6/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/conv6/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv6/bn_1/moving_variance/biased"
  input: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv6/bn_1/moving_variance/local_step"
  input: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv6/bn_1/moving_variance/biased"
  input: "^conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/AssignAdd"
  input: "^conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/conv6/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/AssignAdd"
  input: "^conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/conv6/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/sub_1/x"
  input: "conv6/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv6/bn_1/moving_variance/local_step"
  input: "^conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/AssignAdd"
  input: "^conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/conv6/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/sub_1"
  input: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/AssignAdd"
  input: "^conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/conv6/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/sub_2/x"
  input: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/read"
  input: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv6/bn_1/moving_variance/read"
  input: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv6/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv6/bn_1/moving_variance"
  input: "conv6/bn_1/AssignMovingAvg_1/conv6/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv6/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv6_1/convolution"
  input: "conv6/bn_1/gamma/read"
  input: "conv6/bn_1/beta/read"
  input: "conv6/bn_1/moving_mean/read"
  input: "conv6/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_40/Relu"
  op: "Relu"
  input: "conv6/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/dw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv7/dw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv7/dw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv7/dw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv7/dw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3323627
    }
  }
}
node {
  name: "conv7/dw_1/random_uniform/sub"
  op: "Sub"
  input: "conv7/dw_1/random_uniform/max"
  input: "conv7/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/dw_1/random_uniform/mul"
  op: "Mul"
  input: "conv7/dw_1/random_uniform/RandomUniform"
  input: "conv7/dw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/dw_1/random_uniform"
  op: "Add"
  input: "conv7/dw_1/random_uniform/mul"
  input: "conv7/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/dw_1/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw_1/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv7/dw_1/depthwise_kernel"
  input: "conv7/dw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw_1/depthwise_kernel/read"
  op: "Identity"
  input: "conv7/dw_1/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw_1/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv7/dw_1/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv7/dw_1/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv7/dw_1/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_40/Relu"
  input: "conv7/dw_1/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv7/dw/bn_1/gamma"
  input: "conv7/dw/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn_1/gamma/read"
  op: "Identity"
  input: "conv7/dw/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/bn_1/beta/Assign"
  op: "Assign"
  input: "conv7/dw/bn_1/beta"
  input: "conv7/dw/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn_1/beta/read"
  op: "Identity"
  input: "conv7/dw/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv7/dw/bn_1/moving_mean"
  input: "conv7/dw/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv7/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv7/dw/bn_1/moving_variance"
  input: "conv7/dw/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv7/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv7/dw_1/depthwise"
  input: "conv7/dw/bn_1/gamma/read"
  input: "conv7/dw/bn_1/beta/read"
  input: "conv7/dw/bn_1/Const_4"
  input: "conv7/dw/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn_1/Shape"
  op: "Shape"
  input: "conv7/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/dw/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv7/dw/bn_1/Shape"
  input: "conv7/dw/bn_1/strided_slice/stack"
  input: "conv7/dw/bn_1/strided_slice/stack_1"
  input: "conv7/dw/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7/dw/bn_1/Shape_1"
  op: "Shape"
  input: "conv7/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/dw/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv7/dw/bn_1/Shape_1"
  input: "conv7/dw/bn_1/strided_slice_1/stack"
  input: "conv7/dw/bn_1/strided_slice_1/stack_1"
  input: "conv7/dw/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7/dw/bn_1/Shape_2"
  op: "Shape"
  input: "conv7/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/dw/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv7/dw/bn_1/Shape_2"
  input: "conv7/dw/bn_1/strided_slice_2/stack"
  input: "conv7/dw/bn_1/strided_slice_2/stack_1"
  input: "conv7/dw/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7/dw/bn_1/Rank/packed"
  op: "Pack"
  input: "conv7/dw/bn_1/strided_slice"
  input: "conv7/dw/bn_1/strided_slice_1"
  input: "conv7/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv7/dw/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/range"
  op: "Range"
  input: "conv7/dw/bn_1/range/start"
  input: "conv7/dw/bn_1/Rank"
  input: "conv7/dw/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/dw/bn_1/Prod/input"
  op: "Pack"
  input: "conv7/dw/bn_1/strided_slice"
  input: "conv7/dw/bn_1/strided_slice_1"
  input: "conv7/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv7/dw/bn_1/Prod"
  op: "Prod"
  input: "conv7/dw/bn_1/Prod/input"
  input: "conv7/dw/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/dw/bn_1/Cast"
  op: "Cast"
  input: "conv7/dw/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/dw/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/sub"
  op: "Sub"
  input: "conv7/dw/bn_1/Cast"
  input: "conv7/dw/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/dw/bn_1/truediv"
  op: "RealDiv"
  input: "conv7/dw/bn_1/Cast"
  input: "conv7/dw/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/dw/bn_1/mul"
  op: "Mul"
  input: "conv7/dw/bn_1/FusedBatchNorm:2"
  input: "conv7/dw/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv7/dw/bn_1/moving_mean/biased"
  input: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv7/dw/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv7/dw/bn_1/moving_mean/local_step"
  input: "conv7/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv7/dw/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv7/dw/bn_1/moving_mean/biased/read"
  input: "conv7/dw/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/sub"
  input: "conv7/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/conv7/dw/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv7/dw/bn_1/moving_mean/biased"
  input: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv7/dw/bn_1/moving_mean/local_step"
  input: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv7/dw/bn_1/moving_mean/biased"
  input: "^conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/conv7/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/conv7/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/sub_1/x"
  input: "conv7/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv7/dw/bn_1/moving_mean/local_step"
  input: "^conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/conv7/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/sub_1"
  input: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/conv7/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/sub_2/x"
  input: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/read"
  input: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv7/dw/bn_1/moving_mean/read"
  input: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv7/dw/bn_1/moving_mean"
  input: "conv7/dw/bn_1/AssignMovingAvg/conv7/dw/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv7/dw/bn_1/moving_variance/biased"
  input: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv7/dw/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv7/dw/bn_1/moving_variance/local_step"
  input: "conv7/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/dw/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv7/dw/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv7/dw/bn_1/moving_variance/biased/read"
  input: "conv7/dw/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/sub"
  input: "conv7/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/conv7/dw/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv7/dw/bn_1/moving_variance/biased"
  input: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv7/dw/bn_1/moving_variance/local_step"
  input: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv7/dw/bn_1/moving_variance/biased"
  input: "^conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/conv7/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/conv7/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/sub_1/x"
  input: "conv7/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv7/dw/bn_1/moving_variance/local_step"
  input: "^conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/conv7/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/sub_1"
  input: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/conv7/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/sub_2/x"
  input: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/read"
  input: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv7/dw/bn_1/moving_variance/read"
  input: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/dw/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv7/dw/bn_1/moving_variance"
  input: "conv7/dw/bn_1/AssignMovingAvg_1/conv7/dw/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/dw/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv7/dw_1/depthwise"
  input: "conv7/dw/bn_1/gamma/read"
  input: "conv7/dw/bn_1/beta/read"
  input: "conv7/dw/bn_1/moving_mean/read"
  input: "conv7/dw/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_41/Relu"
  op: "Relu"
  input: "conv7/dw/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv7_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv7_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv7_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv7_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1096233
    }
  }
}
node {
  name: "conv7_1/random_uniform/sub"
  op: "Sub"
  input: "conv7_1/random_uniform/max"
  input: "conv7_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7_1/random_uniform/mul"
  op: "Mul"
  input: "conv7_1/random_uniform/RandomUniform"
  input: "conv7_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7_1/random_uniform"
  op: "Add"
  input: "conv7_1/random_uniform/mul"
  input: "conv7_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7_1/kernel/Assign"
  op: "Assign"
  input: "conv7_1/kernel"
  input: "conv7_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7_1/kernel/read"
  op: "Identity"
  input: "conv7_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7_1/kernel"
      }
    }
  }
}
node {
  name: "conv7_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv7_1/convolution"
  op: "Conv2D"
  input: "activation_41/Relu"
  input: "conv7_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv7/bn_1/gamma"
  input: "conv7/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn_1/gamma/read"
  op: "Identity"
  input: "conv7/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv7/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/bn_1/beta/Assign"
  op: "Assign"
  input: "conv7/bn_1/beta"
  input: "conv7/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn_1/beta/read"
  op: "Identity"
  input: "conv7/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv7/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv7/bn_1/moving_mean"
  input: "conv7/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv7/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv7/bn_1/moving_variance"
  input: "conv7/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv7/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv7/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv7/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv7_1/convolution"
  input: "conv7/bn_1/gamma/read"
  input: "conv7/bn_1/beta/read"
  input: "conv7/bn_1/Const_4"
  input: "conv7/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn_1/Shape"
  op: "Shape"
  input: "conv7_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv7/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv7/bn_1/Shape"
  input: "conv7/bn_1/strided_slice/stack"
  input: "conv7/bn_1/strided_slice/stack_1"
  input: "conv7/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7/bn_1/Shape_1"
  op: "Shape"
  input: "conv7_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv7/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv7/bn_1/Shape_1"
  input: "conv7/bn_1/strided_slice_1/stack"
  input: "conv7/bn_1/strided_slice_1/stack_1"
  input: "conv7/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7/bn_1/Shape_2"
  op: "Shape"
  input: "conv7_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv7/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv7/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv7/bn_1/Shape_2"
  input: "conv7/bn_1/strided_slice_2/stack"
  input: "conv7/bn_1/strided_slice_2/stack_1"
  input: "conv7/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7/bn_1/Rank/packed"
  op: "Pack"
  input: "conv7/bn_1/strided_slice"
  input: "conv7/bn_1/strided_slice_1"
  input: "conv7/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv7/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv7/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7/bn_1/range"
  op: "Range"
  input: "conv7/bn_1/range/start"
  input: "conv7/bn_1/Rank"
  input: "conv7/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/bn_1/Prod/input"
  op: "Pack"
  input: "conv7/bn_1/strided_slice"
  input: "conv7/bn_1/strided_slice_1"
  input: "conv7/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv7/bn_1/Prod"
  op: "Prod"
  input: "conv7/bn_1/Prod/input"
  input: "conv7/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/bn_1/Cast"
  op: "Cast"
  input: "conv7/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv7/bn_1/sub"
  op: "Sub"
  input: "conv7/bn_1/Cast"
  input: "conv7/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/bn_1/truediv"
  op: "RealDiv"
  input: "conv7/bn_1/Cast"
  input: "conv7/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/bn_1/mul"
  op: "Mul"
  input: "conv7/bn_1/FusedBatchNorm:2"
  input: "conv7/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv7/bn_1/moving_mean/biased"
  input: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv7/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv7/bn_1/moving_mean/local_step"
  input: "conv7/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv7/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv7/bn_1/moving_mean/biased/read"
  input: "conv7/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/sub"
  input: "conv7/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/conv7/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv7/bn_1/moving_mean/biased"
  input: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv7/bn_1/moving_mean/local_step"
  input: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv7/bn_1/moving_mean/biased"
  input: "^conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/AssignAdd"
  input: "^conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/conv7/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/AssignAdd"
  input: "^conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/conv7/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/sub_1/x"
  input: "conv7/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv7/bn_1/moving_mean/local_step"
  input: "^conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/AssignAdd"
  input: "^conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/conv7/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/sub_1"
  input: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/AssignAdd"
  input: "^conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/conv7/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/sub_2/x"
  input: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/read"
  input: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv7/bn_1/moving_mean/read"
  input: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv7/bn_1/moving_mean"
  input: "conv7/bn_1/AssignMovingAvg/conv7/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv7/bn_1/moving_variance/biased"
  input: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv7/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv7/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv7/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv7/bn_1/moving_variance/local_step"
  input: "conv7/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv7/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv7/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv7/bn_1/moving_variance/biased/read"
  input: "conv7/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/sub"
  input: "conv7/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/conv7/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv7/bn_1/moving_variance/biased"
  input: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv7/bn_1/moving_variance/local_step"
  input: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv7/bn_1/moving_variance/biased"
  input: "^conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/AssignAdd"
  input: "^conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/conv7/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/AssignAdd"
  input: "^conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/conv7/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/sub_1/x"
  input: "conv7/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv7/bn_1/moving_variance/local_step"
  input: "^conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/AssignAdd"
  input: "^conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/conv7/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/sub_1"
  input: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/AssignAdd"
  input: "^conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/conv7/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/sub_2/x"
  input: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/read"
  input: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv7/bn_1/moving_variance/read"
  input: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv7/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv7/bn_1/moving_variance"
  input: "conv7/bn_1/AssignMovingAvg_1/conv7/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv7/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv7_1/convolution"
  input: "conv7/bn_1/gamma/read"
  input: "conv7/bn_1/beta/read"
  input: "conv7/bn_1/moving_mean/read"
  input: "conv7/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_42/Relu"
  op: "Relu"
  input: "conv7/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/dw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv8/dw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv8/dw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv8/dw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv8/dw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9337433
    }
  }
}
node {
  name: "conv8/dw_1/random_uniform/sub"
  op: "Sub"
  input: "conv8/dw_1/random_uniform/max"
  input: "conv8/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/dw_1/random_uniform/mul"
  op: "Mul"
  input: "conv8/dw_1/random_uniform/RandomUniform"
  input: "conv8/dw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/dw_1/random_uniform"
  op: "Add"
  input: "conv8/dw_1/random_uniform/mul"
  input: "conv8/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/dw_1/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw_1/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv8/dw_1/depthwise_kernel"
  input: "conv8/dw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw_1/depthwise_kernel/read"
  op: "Identity"
  input: "conv8/dw_1/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw_1/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv8/dw_1/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv8/dw_1/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv8/dw_1/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_42/Relu"
  input: "conv8/dw_1/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv8/dw/bn_1/gamma"
  input: "conv8/dw/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn_1/gamma/read"
  op: "Identity"
  input: "conv8/dw/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/bn_1/beta/Assign"
  op: "Assign"
  input: "conv8/dw/bn_1/beta"
  input: "conv8/dw/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn_1/beta/read"
  op: "Identity"
  input: "conv8/dw/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv8/dw/bn_1/moving_mean"
  input: "conv8/dw/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv8/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv8/dw/bn_1/moving_variance"
  input: "conv8/dw/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv8/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv8/dw_1/depthwise"
  input: "conv8/dw/bn_1/gamma/read"
  input: "conv8/dw/bn_1/beta/read"
  input: "conv8/dw/bn_1/Const_4"
  input: "conv8/dw/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn_1/Shape"
  op: "Shape"
  input: "conv8/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/dw/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv8/dw/bn_1/Shape"
  input: "conv8/dw/bn_1/strided_slice/stack"
  input: "conv8/dw/bn_1/strided_slice/stack_1"
  input: "conv8/dw/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8/dw/bn_1/Shape_1"
  op: "Shape"
  input: "conv8/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/dw/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv8/dw/bn_1/Shape_1"
  input: "conv8/dw/bn_1/strided_slice_1/stack"
  input: "conv8/dw/bn_1/strided_slice_1/stack_1"
  input: "conv8/dw/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8/dw/bn_1/Shape_2"
  op: "Shape"
  input: "conv8/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/dw/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv8/dw/bn_1/Shape_2"
  input: "conv8/dw/bn_1/strided_slice_2/stack"
  input: "conv8/dw/bn_1/strided_slice_2/stack_1"
  input: "conv8/dw/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8/dw/bn_1/Rank/packed"
  op: "Pack"
  input: "conv8/dw/bn_1/strided_slice"
  input: "conv8/dw/bn_1/strided_slice_1"
  input: "conv8/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8/dw/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/range"
  op: "Range"
  input: "conv8/dw/bn_1/range/start"
  input: "conv8/dw/bn_1/Rank"
  input: "conv8/dw/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/dw/bn_1/Prod/input"
  op: "Pack"
  input: "conv8/dw/bn_1/strided_slice"
  input: "conv8/dw/bn_1/strided_slice_1"
  input: "conv8/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8/dw/bn_1/Prod"
  op: "Prod"
  input: "conv8/dw/bn_1/Prod/input"
  input: "conv8/dw/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/dw/bn_1/Cast"
  op: "Cast"
  input: "conv8/dw/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/dw/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/sub"
  op: "Sub"
  input: "conv8/dw/bn_1/Cast"
  input: "conv8/dw/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/dw/bn_1/truediv"
  op: "RealDiv"
  input: "conv8/dw/bn_1/Cast"
  input: "conv8/dw/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/dw/bn_1/mul"
  op: "Mul"
  input: "conv8/dw/bn_1/FusedBatchNorm:2"
  input: "conv8/dw/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv8/dw/bn_1/moving_mean/biased"
  input: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv8/dw/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv8/dw/bn_1/moving_mean/local_step"
  input: "conv8/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv8/dw/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv8/dw/bn_1/moving_mean/biased/read"
  input: "conv8/dw/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/sub"
  input: "conv8/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/conv8/dw/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv8/dw/bn_1/moving_mean/biased"
  input: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv8/dw/bn_1/moving_mean/local_step"
  input: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv8/dw/bn_1/moving_mean/biased"
  input: "^conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/conv8/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/conv8/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/sub_1/x"
  input: "conv8/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv8/dw/bn_1/moving_mean/local_step"
  input: "^conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/conv8/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/sub_1"
  input: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/conv8/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/sub_2/x"
  input: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/read"
  input: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv8/dw/bn_1/moving_mean/read"
  input: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv8/dw/bn_1/moving_mean"
  input: "conv8/dw/bn_1/AssignMovingAvg/conv8/dw/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv8/dw/bn_1/moving_variance/biased"
  input: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv8/dw/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv8/dw/bn_1/moving_variance/local_step"
  input: "conv8/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/dw/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv8/dw/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv8/dw/bn_1/moving_variance/biased/read"
  input: "conv8/dw/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/sub"
  input: "conv8/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/conv8/dw/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv8/dw/bn_1/moving_variance/biased"
  input: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv8/dw/bn_1/moving_variance/local_step"
  input: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv8/dw/bn_1/moving_variance/biased"
  input: "^conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/conv8/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/conv8/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/sub_1/x"
  input: "conv8/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv8/dw/bn_1/moving_variance/local_step"
  input: "^conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/conv8/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/sub_1"
  input: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/conv8/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/sub_2/x"
  input: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/read"
  input: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv8/dw/bn_1/moving_variance/read"
  input: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/dw/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv8/dw/bn_1/moving_variance"
  input: "conv8/dw/bn_1/AssignMovingAvg_1/conv8/dw/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/dw/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv8/dw_1/depthwise"
  input: "conv8/dw/bn_1/gamma/read"
  input: "conv8/dw/bn_1/beta/read"
  input: "conv8/dw/bn_1/moving_mean/read"
  input: "conv8/dw/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_43/Relu"
  op: "Relu"
  input: "conv8/dw/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv8_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv8_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv8_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv8_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3237180
    }
  }
}
node {
  name: "conv8_1/random_uniform/sub"
  op: "Sub"
  input: "conv8_1/random_uniform/max"
  input: "conv8_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_1/random_uniform/mul"
  op: "Mul"
  input: "conv8_1/random_uniform/RandomUniform"
  input: "conv8_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_1/random_uniform"
  op: "Add"
  input: "conv8_1/random_uniform/mul"
  input: "conv8_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8_1/kernel/Assign"
  op: "Assign"
  input: "conv8_1/kernel"
  input: "conv8_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8_1/kernel/read"
  op: "Identity"
  input: "conv8_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_1/kernel"
      }
    }
  }
}
node {
  name: "conv8_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv8_1/convolution"
  op: "Conv2D"
  input: "activation_43/Relu"
  input: "conv8_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv8/bn_1/gamma"
  input: "conv8/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn_1/gamma/read"
  op: "Identity"
  input: "conv8/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv8/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/bn_1/beta/Assign"
  op: "Assign"
  input: "conv8/bn_1/beta"
  input: "conv8/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn_1/beta/read"
  op: "Identity"
  input: "conv8/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv8/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv8/bn_1/moving_mean"
  input: "conv8/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv8/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv8/bn_1/moving_variance"
  input: "conv8/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv8/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv8/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv8/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv8_1/convolution"
  input: "conv8/bn_1/gamma/read"
  input: "conv8/bn_1/beta/read"
  input: "conv8/bn_1/Const_4"
  input: "conv8/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn_1/Shape"
  op: "Shape"
  input: "conv8_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv8/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv8/bn_1/Shape"
  input: "conv8/bn_1/strided_slice/stack"
  input: "conv8/bn_1/strided_slice/stack_1"
  input: "conv8/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8/bn_1/Shape_1"
  op: "Shape"
  input: "conv8_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv8/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv8/bn_1/Shape_1"
  input: "conv8/bn_1/strided_slice_1/stack"
  input: "conv8/bn_1/strided_slice_1/stack_1"
  input: "conv8/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8/bn_1/Shape_2"
  op: "Shape"
  input: "conv8_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv8/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv8/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv8/bn_1/Shape_2"
  input: "conv8/bn_1/strided_slice_2/stack"
  input: "conv8/bn_1/strided_slice_2/stack_1"
  input: "conv8/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8/bn_1/Rank/packed"
  op: "Pack"
  input: "conv8/bn_1/strided_slice"
  input: "conv8/bn_1/strided_slice_1"
  input: "conv8/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv8/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8/bn_1/range"
  op: "Range"
  input: "conv8/bn_1/range/start"
  input: "conv8/bn_1/Rank"
  input: "conv8/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/bn_1/Prod/input"
  op: "Pack"
  input: "conv8/bn_1/strided_slice"
  input: "conv8/bn_1/strided_slice_1"
  input: "conv8/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8/bn_1/Prod"
  op: "Prod"
  input: "conv8/bn_1/Prod/input"
  input: "conv8/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/bn_1/Cast"
  op: "Cast"
  input: "conv8/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv8/bn_1/sub"
  op: "Sub"
  input: "conv8/bn_1/Cast"
  input: "conv8/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/bn_1/truediv"
  op: "RealDiv"
  input: "conv8/bn_1/Cast"
  input: "conv8/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/bn_1/mul"
  op: "Mul"
  input: "conv8/bn_1/FusedBatchNorm:2"
  input: "conv8/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv8/bn_1/moving_mean/biased"
  input: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv8/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv8/bn_1/moving_mean/local_step"
  input: "conv8/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv8/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv8/bn_1/moving_mean/biased/read"
  input: "conv8/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/sub"
  input: "conv8/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/conv8/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv8/bn_1/moving_mean/biased"
  input: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv8/bn_1/moving_mean/local_step"
  input: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv8/bn_1/moving_mean/biased"
  input: "^conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/AssignAdd"
  input: "^conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/conv8/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/AssignAdd"
  input: "^conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/conv8/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/sub_1/x"
  input: "conv8/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv8/bn_1/moving_mean/local_step"
  input: "^conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/AssignAdd"
  input: "^conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/conv8/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/sub_1"
  input: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/AssignAdd"
  input: "^conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/conv8/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/sub_2/x"
  input: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/read"
  input: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv8/bn_1/moving_mean/read"
  input: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv8/bn_1/moving_mean"
  input: "conv8/bn_1/AssignMovingAvg/conv8/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv8/bn_1/moving_variance/biased"
  input: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv8/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv8/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv8/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv8/bn_1/moving_variance/local_step"
  input: "conv8/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv8/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv8/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv8/bn_1/moving_variance/biased/read"
  input: "conv8/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/sub"
  input: "conv8/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/conv8/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv8/bn_1/moving_variance/biased"
  input: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv8/bn_1/moving_variance/local_step"
  input: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv8/bn_1/moving_variance/biased"
  input: "^conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/AssignAdd"
  input: "^conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/conv8/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/AssignAdd"
  input: "^conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/conv8/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/sub_1/x"
  input: "conv8/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv8/bn_1/moving_variance/local_step"
  input: "^conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/AssignAdd"
  input: "^conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/conv8/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/sub_1"
  input: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/AssignAdd"
  input: "^conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/conv8/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/sub_2/x"
  input: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/read"
  input: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv8/bn_1/moving_variance/read"
  input: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv8/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv8/bn_1/moving_variance"
  input: "conv8/bn_1/AssignMovingAvg_1/conv8/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv8/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv8_1/convolution"
  input: "conv8/bn_1/gamma/read"
  input: "conv8/bn_1/beta/read"
  input: "conv8/bn_1/moving_mean/read"
  input: "conv8/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_44/Relu"
  op: "Relu"
  input: "conv8/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/dw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv9/dw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv9/dw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv9/dw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv9/dw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1274862
    }
  }
}
node {
  name: "conv9/dw_1/random_uniform/sub"
  op: "Sub"
  input: "conv9/dw_1/random_uniform/max"
  input: "conv9/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/dw_1/random_uniform/mul"
  op: "Mul"
  input: "conv9/dw_1/random_uniform/RandomUniform"
  input: "conv9/dw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/dw_1/random_uniform"
  op: "Add"
  input: "conv9/dw_1/random_uniform/mul"
  input: "conv9/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/dw_1/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw_1/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv9/dw_1/depthwise_kernel"
  input: "conv9/dw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw_1/depthwise_kernel/read"
  op: "Identity"
  input: "conv9/dw_1/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw_1/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv9/dw_1/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv9/dw_1/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv9/dw_1/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_44/Relu"
  input: "conv9/dw_1/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv9/dw/bn_1/gamma"
  input: "conv9/dw/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn_1/gamma/read"
  op: "Identity"
  input: "conv9/dw/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/bn_1/beta/Assign"
  op: "Assign"
  input: "conv9/dw/bn_1/beta"
  input: "conv9/dw/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn_1/beta/read"
  op: "Identity"
  input: "conv9/dw/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv9/dw/bn_1/moving_mean"
  input: "conv9/dw/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv9/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv9/dw/bn_1/moving_variance"
  input: "conv9/dw/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv9/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv9/dw_1/depthwise"
  input: "conv9/dw/bn_1/gamma/read"
  input: "conv9/dw/bn_1/beta/read"
  input: "conv9/dw/bn_1/Const_4"
  input: "conv9/dw/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn_1/Shape"
  op: "Shape"
  input: "conv9/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/dw/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv9/dw/bn_1/Shape"
  input: "conv9/dw/bn_1/strided_slice/stack"
  input: "conv9/dw/bn_1/strided_slice/stack_1"
  input: "conv9/dw/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9/dw/bn_1/Shape_1"
  op: "Shape"
  input: "conv9/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/dw/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv9/dw/bn_1/Shape_1"
  input: "conv9/dw/bn_1/strided_slice_1/stack"
  input: "conv9/dw/bn_1/strided_slice_1/stack_1"
  input: "conv9/dw/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9/dw/bn_1/Shape_2"
  op: "Shape"
  input: "conv9/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/dw/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv9/dw/bn_1/Shape_2"
  input: "conv9/dw/bn_1/strided_slice_2/stack"
  input: "conv9/dw/bn_1/strided_slice_2/stack_1"
  input: "conv9/dw/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9/dw/bn_1/Rank/packed"
  op: "Pack"
  input: "conv9/dw/bn_1/strided_slice"
  input: "conv9/dw/bn_1/strided_slice_1"
  input: "conv9/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9/dw/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/range"
  op: "Range"
  input: "conv9/dw/bn_1/range/start"
  input: "conv9/dw/bn_1/Rank"
  input: "conv9/dw/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/dw/bn_1/Prod/input"
  op: "Pack"
  input: "conv9/dw/bn_1/strided_slice"
  input: "conv9/dw/bn_1/strided_slice_1"
  input: "conv9/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9/dw/bn_1/Prod"
  op: "Prod"
  input: "conv9/dw/bn_1/Prod/input"
  input: "conv9/dw/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/dw/bn_1/Cast"
  op: "Cast"
  input: "conv9/dw/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/dw/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/sub"
  op: "Sub"
  input: "conv9/dw/bn_1/Cast"
  input: "conv9/dw/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/dw/bn_1/truediv"
  op: "RealDiv"
  input: "conv9/dw/bn_1/Cast"
  input: "conv9/dw/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/dw/bn_1/mul"
  op: "Mul"
  input: "conv9/dw/bn_1/FusedBatchNorm:2"
  input: "conv9/dw/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv9/dw/bn_1/moving_mean/biased"
  input: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv9/dw/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv9/dw/bn_1/moving_mean/local_step"
  input: "conv9/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv9/dw/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv9/dw/bn_1/moving_mean/biased/read"
  input: "conv9/dw/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/sub"
  input: "conv9/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/conv9/dw/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv9/dw/bn_1/moving_mean/biased"
  input: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv9/dw/bn_1/moving_mean/local_step"
  input: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv9/dw/bn_1/moving_mean/biased"
  input: "^conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/conv9/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/conv9/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/sub_1/x"
  input: "conv9/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv9/dw/bn_1/moving_mean/local_step"
  input: "^conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/conv9/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/sub_1"
  input: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/conv9/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/sub_2/x"
  input: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/read"
  input: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv9/dw/bn_1/moving_mean/read"
  input: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv9/dw/bn_1/moving_mean"
  input: "conv9/dw/bn_1/AssignMovingAvg/conv9/dw/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv9/dw/bn_1/moving_variance/biased"
  input: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv9/dw/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv9/dw/bn_1/moving_variance/local_step"
  input: "conv9/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/dw/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv9/dw/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv9/dw/bn_1/moving_variance/biased/read"
  input: "conv9/dw/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/sub"
  input: "conv9/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/conv9/dw/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv9/dw/bn_1/moving_variance/biased"
  input: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv9/dw/bn_1/moving_variance/local_step"
  input: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv9/dw/bn_1/moving_variance/biased"
  input: "^conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/conv9/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/conv9/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/sub_1/x"
  input: "conv9/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv9/dw/bn_1/moving_variance/local_step"
  input: "^conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/conv9/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/sub_1"
  input: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/conv9/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/sub_2/x"
  input: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/read"
  input: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv9/dw/bn_1/moving_variance/read"
  input: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/dw/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv9/dw/bn_1/moving_variance"
  input: "conv9/dw/bn_1/AssignMovingAvg_1/conv9/dw/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/dw/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv9/dw_1/depthwise"
  input: "conv9/dw/bn_1/gamma/read"
  input: "conv9/dw/bn_1/beta/read"
  input: "conv9/dw/bn_1/moving_mean/read"
  input: "conv9/dw/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_45/Relu"
  op: "Relu"
  input: "conv9/dw/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv9_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv9_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv9_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv9_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7986900
    }
  }
}
node {
  name: "conv9_1/random_uniform/sub"
  op: "Sub"
  input: "conv9_1/random_uniform/max"
  input: "conv9_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_1/random_uniform/mul"
  op: "Mul"
  input: "conv9_1/random_uniform/RandomUniform"
  input: "conv9_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_1/random_uniform"
  op: "Add"
  input: "conv9_1/random_uniform/mul"
  input: "conv9_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9_1/kernel/Assign"
  op: "Assign"
  input: "conv9_1/kernel"
  input: "conv9_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9_1/kernel/read"
  op: "Identity"
  input: "conv9_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_1/kernel"
      }
    }
  }
}
node {
  name: "conv9_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv9_1/convolution"
  op: "Conv2D"
  input: "activation_45/Relu"
  input: "conv9_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv9/bn_1/gamma"
  input: "conv9/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn_1/gamma/read"
  op: "Identity"
  input: "conv9/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv9/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/bn_1/beta/Assign"
  op: "Assign"
  input: "conv9/bn_1/beta"
  input: "conv9/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn_1/beta/read"
  op: "Identity"
  input: "conv9/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv9/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv9/bn_1/moving_mean"
  input: "conv9/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv9/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv9/bn_1/moving_variance"
  input: "conv9/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv9/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv9/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv9/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv9_1/convolution"
  input: "conv9/bn_1/gamma/read"
  input: "conv9/bn_1/beta/read"
  input: "conv9/bn_1/Const_4"
  input: "conv9/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn_1/Shape"
  op: "Shape"
  input: "conv9_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv9/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv9/bn_1/Shape"
  input: "conv9/bn_1/strided_slice/stack"
  input: "conv9/bn_1/strided_slice/stack_1"
  input: "conv9/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9/bn_1/Shape_1"
  op: "Shape"
  input: "conv9_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv9/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv9/bn_1/Shape_1"
  input: "conv9/bn_1/strided_slice_1/stack"
  input: "conv9/bn_1/strided_slice_1/stack_1"
  input: "conv9/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9/bn_1/Shape_2"
  op: "Shape"
  input: "conv9_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv9/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv9/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv9/bn_1/Shape_2"
  input: "conv9/bn_1/strided_slice_2/stack"
  input: "conv9/bn_1/strided_slice_2/stack_1"
  input: "conv9/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9/bn_1/Rank/packed"
  op: "Pack"
  input: "conv9/bn_1/strided_slice"
  input: "conv9/bn_1/strided_slice_1"
  input: "conv9/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv9/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9/bn_1/range"
  op: "Range"
  input: "conv9/bn_1/range/start"
  input: "conv9/bn_1/Rank"
  input: "conv9/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/bn_1/Prod/input"
  op: "Pack"
  input: "conv9/bn_1/strided_slice"
  input: "conv9/bn_1/strided_slice_1"
  input: "conv9/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9/bn_1/Prod"
  op: "Prod"
  input: "conv9/bn_1/Prod/input"
  input: "conv9/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/bn_1/Cast"
  op: "Cast"
  input: "conv9/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv9/bn_1/sub"
  op: "Sub"
  input: "conv9/bn_1/Cast"
  input: "conv9/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/bn_1/truediv"
  op: "RealDiv"
  input: "conv9/bn_1/Cast"
  input: "conv9/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/bn_1/mul"
  op: "Mul"
  input: "conv9/bn_1/FusedBatchNorm:2"
  input: "conv9/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv9/bn_1/moving_mean/biased"
  input: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv9/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv9/bn_1/moving_mean/local_step"
  input: "conv9/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv9/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv9/bn_1/moving_mean/biased/read"
  input: "conv9/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/sub"
  input: "conv9/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/conv9/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv9/bn_1/moving_mean/biased"
  input: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv9/bn_1/moving_mean/local_step"
  input: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv9/bn_1/moving_mean/biased"
  input: "^conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/AssignAdd"
  input: "^conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/conv9/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/AssignAdd"
  input: "^conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/conv9/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/sub_1/x"
  input: "conv9/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv9/bn_1/moving_mean/local_step"
  input: "^conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/AssignAdd"
  input: "^conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/conv9/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/sub_1"
  input: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/AssignAdd"
  input: "^conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/conv9/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/sub_2/x"
  input: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/read"
  input: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv9/bn_1/moving_mean/read"
  input: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv9/bn_1/moving_mean"
  input: "conv9/bn_1/AssignMovingAvg/conv9/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv9/bn_1/moving_variance/biased"
  input: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv9/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv9/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv9/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv9/bn_1/moving_variance/local_step"
  input: "conv9/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv9/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv9/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv9/bn_1/moving_variance/biased/read"
  input: "conv9/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/sub"
  input: "conv9/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/conv9/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv9/bn_1/moving_variance/biased"
  input: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv9/bn_1/moving_variance/local_step"
  input: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv9/bn_1/moving_variance/biased"
  input: "^conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/AssignAdd"
  input: "^conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/conv9/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/AssignAdd"
  input: "^conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/conv9/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/sub_1/x"
  input: "conv9/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv9/bn_1/moving_variance/local_step"
  input: "^conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/AssignAdd"
  input: "^conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/conv9/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/sub_1"
  input: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/AssignAdd"
  input: "^conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/conv9/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/sub_2/x"
  input: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/read"
  input: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv9/bn_1/moving_variance/read"
  input: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv9/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv9/bn_1/moving_variance"
  input: "conv9/bn_1/AssignMovingAvg_1/conv9/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv9/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv9_1/convolution"
  input: "conv9/bn_1/gamma/read"
  input: "conv9/bn_1/beta/read"
  input: "conv9/bn_1/moving_mean/read"
  input: "conv9/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_46/Relu"
  op: "Relu"
  input: "conv9/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/dw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv10/dw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv10/dw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv10/dw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv10/dw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 605100
    }
  }
}
node {
  name: "conv10/dw_1/random_uniform/sub"
  op: "Sub"
  input: "conv10/dw_1/random_uniform/max"
  input: "conv10/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/dw_1/random_uniform/mul"
  op: "Mul"
  input: "conv10/dw_1/random_uniform/RandomUniform"
  input: "conv10/dw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/dw_1/random_uniform"
  op: "Add"
  input: "conv10/dw_1/random_uniform/mul"
  input: "conv10/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/dw_1/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw_1/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv10/dw_1/depthwise_kernel"
  input: "conv10/dw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw_1/depthwise_kernel/read"
  op: "Identity"
  input: "conv10/dw_1/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw_1/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv10/dw_1/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv10/dw_1/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv10/dw_1/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_46/Relu"
  input: "conv10/dw_1/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv10/dw/bn_1/gamma"
  input: "conv10/dw/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn_1/gamma/read"
  op: "Identity"
  input: "conv10/dw/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/bn_1/beta/Assign"
  op: "Assign"
  input: "conv10/dw/bn_1/beta"
  input: "conv10/dw/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn_1/beta/read"
  op: "Identity"
  input: "conv10/dw/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv10/dw/bn_1/moving_mean"
  input: "conv10/dw/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv10/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv10/dw/bn_1/moving_variance"
  input: "conv10/dw/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv10/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv10/dw_1/depthwise"
  input: "conv10/dw/bn_1/gamma/read"
  input: "conv10/dw/bn_1/beta/read"
  input: "conv10/dw/bn_1/Const_4"
  input: "conv10/dw/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn_1/Shape"
  op: "Shape"
  input: "conv10/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/dw/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv10/dw/bn_1/Shape"
  input: "conv10/dw/bn_1/strided_slice/stack"
  input: "conv10/dw/bn_1/strided_slice/stack_1"
  input: "conv10/dw/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv10/dw/bn_1/Shape_1"
  op: "Shape"
  input: "conv10/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/dw/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv10/dw/bn_1/Shape_1"
  input: "conv10/dw/bn_1/strided_slice_1/stack"
  input: "conv10/dw/bn_1/strided_slice_1/stack_1"
  input: "conv10/dw/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv10/dw/bn_1/Shape_2"
  op: "Shape"
  input: "conv10/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/dw/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv10/dw/bn_1/Shape_2"
  input: "conv10/dw/bn_1/strided_slice_2/stack"
  input: "conv10/dw/bn_1/strided_slice_2/stack_1"
  input: "conv10/dw/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv10/dw/bn_1/Rank/packed"
  op: "Pack"
  input: "conv10/dw/bn_1/strided_slice"
  input: "conv10/dw/bn_1/strided_slice_1"
  input: "conv10/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv10/dw/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/range"
  op: "Range"
  input: "conv10/dw/bn_1/range/start"
  input: "conv10/dw/bn_1/Rank"
  input: "conv10/dw/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/dw/bn_1/Prod/input"
  op: "Pack"
  input: "conv10/dw/bn_1/strided_slice"
  input: "conv10/dw/bn_1/strided_slice_1"
  input: "conv10/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv10/dw/bn_1/Prod"
  op: "Prod"
  input: "conv10/dw/bn_1/Prod/input"
  input: "conv10/dw/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/dw/bn_1/Cast"
  op: "Cast"
  input: "conv10/dw/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/dw/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/sub"
  op: "Sub"
  input: "conv10/dw/bn_1/Cast"
  input: "conv10/dw/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/dw/bn_1/truediv"
  op: "RealDiv"
  input: "conv10/dw/bn_1/Cast"
  input: "conv10/dw/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/dw/bn_1/mul"
  op: "Mul"
  input: "conv10/dw/bn_1/FusedBatchNorm:2"
  input: "conv10/dw/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv10/dw/bn_1/moving_mean/biased"
  input: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv10/dw/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv10/dw/bn_1/moving_mean/local_step"
  input: "conv10/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv10/dw/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv10/dw/bn_1/moving_mean/biased/read"
  input: "conv10/dw/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/sub"
  input: "conv10/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/conv10/dw/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv10/dw/bn_1/moving_mean/biased"
  input: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv10/dw/bn_1/moving_mean/local_step"
  input: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv10/dw/bn_1/moving_mean/biased"
  input: "^conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/conv10/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/conv10/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/sub_1/x"
  input: "conv10/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv10/dw/bn_1/moving_mean/local_step"
  input: "^conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/conv10/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/sub_1"
  input: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/conv10/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/sub_2/x"
  input: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/read"
  input: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv10/dw/bn_1/moving_mean/read"
  input: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv10/dw/bn_1/moving_mean"
  input: "conv10/dw/bn_1/AssignMovingAvg/conv10/dw/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv10/dw/bn_1/moving_variance/biased"
  input: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv10/dw/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv10/dw/bn_1/moving_variance/local_step"
  input: "conv10/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/dw/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv10/dw/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv10/dw/bn_1/moving_variance/biased/read"
  input: "conv10/dw/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/sub"
  input: "conv10/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/conv10/dw/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv10/dw/bn_1/moving_variance/biased"
  input: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv10/dw/bn_1/moving_variance/local_step"
  input: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv10/dw/bn_1/moving_variance/biased"
  input: "^conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/conv10/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/conv10/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/sub_1/x"
  input: "conv10/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv10/dw/bn_1/moving_variance/local_step"
  input: "^conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/conv10/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/sub_1"
  input: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/conv10/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/sub_2/x"
  input: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/read"
  input: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv10/dw/bn_1/moving_variance/read"
  input: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/dw/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv10/dw/bn_1/moving_variance"
  input: "conv10/dw/bn_1/AssignMovingAvg_1/conv10/dw/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/dw/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv10/dw_1/depthwise"
  input: "conv10/dw/bn_1/gamma/read"
  input: "conv10/dw/bn_1/beta/read"
  input: "conv10/dw/bn_1/moving_mean/read"
  input: "conv10/dw/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_47/Relu"
  op: "Relu"
  input: "conv10/dw/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv10_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv10_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv10_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv10_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2410324
    }
  }
}
node {
  name: "conv10_1/random_uniform/sub"
  op: "Sub"
  input: "conv10_1/random_uniform/max"
  input: "conv10_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_1/random_uniform/mul"
  op: "Mul"
  input: "conv10_1/random_uniform/RandomUniform"
  input: "conv10_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_1/random_uniform"
  op: "Add"
  input: "conv10_1/random_uniform/mul"
  input: "conv10_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10_1/kernel/Assign"
  op: "Assign"
  input: "conv10_1/kernel"
  input: "conv10_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10_1/kernel/read"
  op: "Identity"
  input: "conv10_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_1/kernel"
      }
    }
  }
}
node {
  name: "conv10_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv10_1/convolution"
  op: "Conv2D"
  input: "activation_47/Relu"
  input: "conv10_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv10/bn_1/gamma"
  input: "conv10/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn_1/gamma/read"
  op: "Identity"
  input: "conv10/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv10/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/bn_1/beta/Assign"
  op: "Assign"
  input: "conv10/bn_1/beta"
  input: "conv10/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn_1/beta/read"
  op: "Identity"
  input: "conv10/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv10/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv10/bn_1/moving_mean"
  input: "conv10/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv10/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv10/bn_1/moving_variance"
  input: "conv10/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv10/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv10/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv10/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv10_1/convolution"
  input: "conv10/bn_1/gamma/read"
  input: "conv10/bn_1/beta/read"
  input: "conv10/bn_1/Const_4"
  input: "conv10/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn_1/Shape"
  op: "Shape"
  input: "conv10_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv10/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv10/bn_1/Shape"
  input: "conv10/bn_1/strided_slice/stack"
  input: "conv10/bn_1/strided_slice/stack_1"
  input: "conv10/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv10/bn_1/Shape_1"
  op: "Shape"
  input: "conv10_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv10/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv10/bn_1/Shape_1"
  input: "conv10/bn_1/strided_slice_1/stack"
  input: "conv10/bn_1/strided_slice_1/stack_1"
  input: "conv10/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv10/bn_1/Shape_2"
  op: "Shape"
  input: "conv10_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv10/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv10/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv10/bn_1/Shape_2"
  input: "conv10/bn_1/strided_slice_2/stack"
  input: "conv10/bn_1/strided_slice_2/stack_1"
  input: "conv10/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv10/bn_1/Rank/packed"
  op: "Pack"
  input: "conv10/bn_1/strided_slice"
  input: "conv10/bn_1/strided_slice_1"
  input: "conv10/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv10/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv10/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv10/bn_1/range"
  op: "Range"
  input: "conv10/bn_1/range/start"
  input: "conv10/bn_1/Rank"
  input: "conv10/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/bn_1/Prod/input"
  op: "Pack"
  input: "conv10/bn_1/strided_slice"
  input: "conv10/bn_1/strided_slice_1"
  input: "conv10/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv10/bn_1/Prod"
  op: "Prod"
  input: "conv10/bn_1/Prod/input"
  input: "conv10/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/bn_1/Cast"
  op: "Cast"
  input: "conv10/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv10/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv10/bn_1/sub"
  op: "Sub"
  input: "conv10/bn_1/Cast"
  input: "conv10/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/bn_1/truediv"
  op: "RealDiv"
  input: "conv10/bn_1/Cast"
  input: "conv10/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/bn_1/mul"
  op: "Mul"
  input: "conv10/bn_1/FusedBatchNorm:2"
  input: "conv10/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv10/bn_1/moving_mean/biased"
  input: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv10/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv10/bn_1/moving_mean/local_step"
  input: "conv10/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv10/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv10/bn_1/moving_mean/biased/read"
  input: "conv10/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/sub"
  input: "conv10/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/conv10/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv10/bn_1/moving_mean/biased"
  input: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv10/bn_1/moving_mean/local_step"
  input: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv10/bn_1/moving_mean/biased"
  input: "^conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/AssignAdd"
  input: "^conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/conv10/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/AssignAdd"
  input: "^conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/conv10/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/sub_1/x"
  input: "conv10/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv10/bn_1/moving_mean/local_step"
  input: "^conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/AssignAdd"
  input: "^conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/conv10/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/sub_1"
  input: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/AssignAdd"
  input: "^conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/conv10/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/sub_2/x"
  input: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/read"
  input: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv10/bn_1/moving_mean/read"
  input: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv10/bn_1/moving_mean"
  input: "conv10/bn_1/AssignMovingAvg/conv10/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv10/bn_1/moving_variance/biased"
  input: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv10/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv10/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv10/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv10/bn_1/moving_variance/local_step"
  input: "conv10/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv10/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv10/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv10/bn_1/moving_variance/biased/read"
  input: "conv10/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/sub"
  input: "conv10/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/conv10/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv10/bn_1/moving_variance/biased"
  input: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv10/bn_1/moving_variance/local_step"
  input: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv10/bn_1/moving_variance/biased"
  input: "^conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/AssignAdd"
  input: "^conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/conv10/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/AssignAdd"
  input: "^conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/conv10/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/sub_1/x"
  input: "conv10/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv10/bn_1/moving_variance/local_step"
  input: "^conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/AssignAdd"
  input: "^conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/conv10/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/sub_1"
  input: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/AssignAdd"
  input: "^conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/conv10/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/sub_2/x"
  input: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/read"
  input: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv10/bn_1/moving_variance/read"
  input: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv10/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv10/bn_1/moving_variance"
  input: "conv10/bn_1/AssignMovingAvg_1/conv10/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv10/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv10_1/convolution"
  input: "conv10/bn_1/gamma/read"
  input: "conv10/bn_1/beta/read"
  input: "conv10/bn_1/moving_mean/read"
  input: "conv10/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_48/Relu"
  op: "Relu"
  input: "conv10/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/dw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv11/dw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv11/dw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv11/dw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv11/dw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8853842
    }
  }
}
node {
  name: "conv11/dw_1/random_uniform/sub"
  op: "Sub"
  input: "conv11/dw_1/random_uniform/max"
  input: "conv11/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/dw_1/random_uniform/mul"
  op: "Mul"
  input: "conv11/dw_1/random_uniform/RandomUniform"
  input: "conv11/dw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/dw_1/random_uniform"
  op: "Add"
  input: "conv11/dw_1/random_uniform/mul"
  input: "conv11/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/dw_1/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw_1/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv11/dw_1/depthwise_kernel"
  input: "conv11/dw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw_1/depthwise_kernel/read"
  op: "Identity"
  input: "conv11/dw_1/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw_1/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv11/dw_1/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv11/dw_1/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv11/dw_1/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_48/Relu"
  input: "conv11/dw_1/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv11/dw/bn_1/gamma"
  input: "conv11/dw/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn_1/gamma/read"
  op: "Identity"
  input: "conv11/dw/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/bn_1/beta/Assign"
  op: "Assign"
  input: "conv11/dw/bn_1/beta"
  input: "conv11/dw/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn_1/beta/read"
  op: "Identity"
  input: "conv11/dw/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv11/dw/bn_1/moving_mean"
  input: "conv11/dw/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv11/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv11/dw/bn_1/moving_variance"
  input: "conv11/dw/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv11/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv11/dw_1/depthwise"
  input: "conv11/dw/bn_1/gamma/read"
  input: "conv11/dw/bn_1/beta/read"
  input: "conv11/dw/bn_1/Const_4"
  input: "conv11/dw/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn_1/Shape"
  op: "Shape"
  input: "conv11/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/dw/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv11/dw/bn_1/Shape"
  input: "conv11/dw/bn_1/strided_slice/stack"
  input: "conv11/dw/bn_1/strided_slice/stack_1"
  input: "conv11/dw/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv11/dw/bn_1/Shape_1"
  op: "Shape"
  input: "conv11/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/dw/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv11/dw/bn_1/Shape_1"
  input: "conv11/dw/bn_1/strided_slice_1/stack"
  input: "conv11/dw/bn_1/strided_slice_1/stack_1"
  input: "conv11/dw/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv11/dw/bn_1/Shape_2"
  op: "Shape"
  input: "conv11/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/dw/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv11/dw/bn_1/Shape_2"
  input: "conv11/dw/bn_1/strided_slice_2/stack"
  input: "conv11/dw/bn_1/strided_slice_2/stack_1"
  input: "conv11/dw/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv11/dw/bn_1/Rank/packed"
  op: "Pack"
  input: "conv11/dw/bn_1/strided_slice"
  input: "conv11/dw/bn_1/strided_slice_1"
  input: "conv11/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv11/dw/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/range"
  op: "Range"
  input: "conv11/dw/bn_1/range/start"
  input: "conv11/dw/bn_1/Rank"
  input: "conv11/dw/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/dw/bn_1/Prod/input"
  op: "Pack"
  input: "conv11/dw/bn_1/strided_slice"
  input: "conv11/dw/bn_1/strided_slice_1"
  input: "conv11/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv11/dw/bn_1/Prod"
  op: "Prod"
  input: "conv11/dw/bn_1/Prod/input"
  input: "conv11/dw/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/dw/bn_1/Cast"
  op: "Cast"
  input: "conv11/dw/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/dw/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/sub"
  op: "Sub"
  input: "conv11/dw/bn_1/Cast"
  input: "conv11/dw/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/dw/bn_1/truediv"
  op: "RealDiv"
  input: "conv11/dw/bn_1/Cast"
  input: "conv11/dw/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/dw/bn_1/mul"
  op: "Mul"
  input: "conv11/dw/bn_1/FusedBatchNorm:2"
  input: "conv11/dw/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv11/dw/bn_1/moving_mean/biased"
  input: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv11/dw/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv11/dw/bn_1/moving_mean/local_step"
  input: "conv11/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv11/dw/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv11/dw/bn_1/moving_mean/biased/read"
  input: "conv11/dw/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/sub"
  input: "conv11/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/conv11/dw/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv11/dw/bn_1/moving_mean/biased"
  input: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv11/dw/bn_1/moving_mean/local_step"
  input: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv11/dw/bn_1/moving_mean/biased"
  input: "^conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/conv11/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/conv11/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/sub_1/x"
  input: "conv11/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv11/dw/bn_1/moving_mean/local_step"
  input: "^conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/conv11/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/sub_1"
  input: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/conv11/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/sub_2/x"
  input: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/read"
  input: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv11/dw/bn_1/moving_mean/read"
  input: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv11/dw/bn_1/moving_mean"
  input: "conv11/dw/bn_1/AssignMovingAvg/conv11/dw/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv11/dw/bn_1/moving_variance/biased"
  input: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv11/dw/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv11/dw/bn_1/moving_variance/local_step"
  input: "conv11/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/dw/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv11/dw/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv11/dw/bn_1/moving_variance/biased/read"
  input: "conv11/dw/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/sub"
  input: "conv11/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/conv11/dw/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv11/dw/bn_1/moving_variance/biased"
  input: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv11/dw/bn_1/moving_variance/local_step"
  input: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv11/dw/bn_1/moving_variance/biased"
  input: "^conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/conv11/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/conv11/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/sub_1/x"
  input: "conv11/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv11/dw/bn_1/moving_variance/local_step"
  input: "^conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/conv11/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/sub_1"
  input: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/conv11/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/sub_2/x"
  input: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/read"
  input: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv11/dw/bn_1/moving_variance/read"
  input: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/dw/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv11/dw/bn_1/moving_variance"
  input: "conv11/dw/bn_1/AssignMovingAvg_1/conv11/dw/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/dw/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv11/dw_1/depthwise"
  input: "conv11/dw/bn_1/gamma/read"
  input: "conv11/dw/bn_1/beta/read"
  input: "conv11/dw/bn_1/moving_mean/read"
  input: "conv11/dw/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_49/Relu"
  op: "Relu"
  input: "conv11/dw/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv11_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "conv11_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "conv11_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv11_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3882962
    }
  }
}
node {
  name: "conv11_1/random_uniform/sub"
  op: "Sub"
  input: "conv11_1/random_uniform/max"
  input: "conv11_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_1/random_uniform/mul"
  op: "Mul"
  input: "conv11_1/random_uniform/RandomUniform"
  input: "conv11_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_1/random_uniform"
  op: "Add"
  input: "conv11_1/random_uniform/mul"
  input: "conv11_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11_1/kernel/Assign"
  op: "Assign"
  input: "conv11_1/kernel"
  input: "conv11_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11_1/kernel/read"
  op: "Identity"
  input: "conv11_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_1/kernel"
      }
    }
  }
}
node {
  name: "conv11_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv11_1/convolution"
  op: "Conv2D"
  input: "activation_49/Relu"
  input: "conv11_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv11/bn_1/gamma"
  input: "conv11/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn_1/gamma/read"
  op: "Identity"
  input: "conv11/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv11/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/bn_1/beta/Assign"
  op: "Assign"
  input: "conv11/bn_1/beta"
  input: "conv11/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn_1/beta/read"
  op: "Identity"
  input: "conv11/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv11/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv11/bn_1/moving_mean"
  input: "conv11/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv11/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv11/bn_1/moving_variance"
  input: "conv11/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv11/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv11/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv11/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv11_1/convolution"
  input: "conv11/bn_1/gamma/read"
  input: "conv11/bn_1/beta/read"
  input: "conv11/bn_1/Const_4"
  input: "conv11/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn_1/Shape"
  op: "Shape"
  input: "conv11_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv11/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv11/bn_1/Shape"
  input: "conv11/bn_1/strided_slice/stack"
  input: "conv11/bn_1/strided_slice/stack_1"
  input: "conv11/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv11/bn_1/Shape_1"
  op: "Shape"
  input: "conv11_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv11/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv11/bn_1/Shape_1"
  input: "conv11/bn_1/strided_slice_1/stack"
  input: "conv11/bn_1/strided_slice_1/stack_1"
  input: "conv11/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv11/bn_1/Shape_2"
  op: "Shape"
  input: "conv11_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv11/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv11/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv11/bn_1/Shape_2"
  input: "conv11/bn_1/strided_slice_2/stack"
  input: "conv11/bn_1/strided_slice_2/stack_1"
  input: "conv11/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv11/bn_1/Rank/packed"
  op: "Pack"
  input: "conv11/bn_1/strided_slice"
  input: "conv11/bn_1/strided_slice_1"
  input: "conv11/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv11/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv11/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv11/bn_1/range"
  op: "Range"
  input: "conv11/bn_1/range/start"
  input: "conv11/bn_1/Rank"
  input: "conv11/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/bn_1/Prod/input"
  op: "Pack"
  input: "conv11/bn_1/strided_slice"
  input: "conv11/bn_1/strided_slice_1"
  input: "conv11/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv11/bn_1/Prod"
  op: "Prod"
  input: "conv11/bn_1/Prod/input"
  input: "conv11/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/bn_1/Cast"
  op: "Cast"
  input: "conv11/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv11/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv11/bn_1/sub"
  op: "Sub"
  input: "conv11/bn_1/Cast"
  input: "conv11/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/bn_1/truediv"
  op: "RealDiv"
  input: "conv11/bn_1/Cast"
  input: "conv11/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/bn_1/mul"
  op: "Mul"
  input: "conv11/bn_1/FusedBatchNorm:2"
  input: "conv11/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv11/bn_1/moving_mean/biased"
  input: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv11/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv11/bn_1/moving_mean/local_step"
  input: "conv11/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv11/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv11/bn_1/moving_mean/biased/read"
  input: "conv11/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/sub"
  input: "conv11/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/conv11/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv11/bn_1/moving_mean/biased"
  input: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv11/bn_1/moving_mean/local_step"
  input: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv11/bn_1/moving_mean/biased"
  input: "^conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/AssignAdd"
  input: "^conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/conv11/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/AssignAdd"
  input: "^conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/conv11/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/sub_1/x"
  input: "conv11/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv11/bn_1/moving_mean/local_step"
  input: "^conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/AssignAdd"
  input: "^conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/conv11/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/sub_1"
  input: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/AssignAdd"
  input: "^conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/conv11/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/sub_2/x"
  input: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/read"
  input: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv11/bn_1/moving_mean/read"
  input: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv11/bn_1/moving_mean"
  input: "conv11/bn_1/AssignMovingAvg/conv11/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv11/bn_1/moving_variance/biased"
  input: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv11/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv11/bn_1/moving_variance/local_step"
  input: "conv11/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv11/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv11/bn_1/moving_variance/biased/read"
  input: "conv11/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/sub"
  input: "conv11/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/conv11/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv11/bn_1/moving_variance/biased"
  input: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv11/bn_1/moving_variance/local_step"
  input: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv11/bn_1/moving_variance/biased"
  input: "^conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/AssignAdd"
  input: "^conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/conv11/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/AssignAdd"
  input: "^conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/conv11/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/sub_1/x"
  input: "conv11/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv11/bn_1/moving_variance/local_step"
  input: "^conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/AssignAdd"
  input: "^conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/conv11/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/sub_1"
  input: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/AssignAdd"
  input: "^conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/conv11/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/sub_2/x"
  input: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/read"
  input: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv11/bn_1/moving_variance/read"
  input: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv11/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv11/bn_1/moving_variance"
  input: "conv11/bn_1/AssignMovingAvg_1/conv11/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv11/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv11_1/convolution"
  input: "conv11/bn_1/gamma/read"
  input: "conv11/bn_1/beta/read"
  input: "conv11/bn_1/moving_mean/read"
  input: "conv11/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_50/Relu"
  op: "Relu"
  input: "conv11/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv5_padding_1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv5_padding_1/Pad"
  op: "Pad"
  input: "activation_50/Relu"
  input: "conv5_padding_1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/dw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv12/dw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03604920580983162
      }
    }
  }
}
node {
  name: "conv12/dw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03604920580983162
      }
    }
  }
}
node {
  name: "conv12/dw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv12/dw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8551451
    }
  }
}
node {
  name: "conv12/dw_1/random_uniform/sub"
  op: "Sub"
  input: "conv12/dw_1/random_uniform/max"
  input: "conv12/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/dw_1/random_uniform/mul"
  op: "Mul"
  input: "conv12/dw_1/random_uniform/RandomUniform"
  input: "conv12/dw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/dw_1/random_uniform"
  op: "Add"
  input: "conv12/dw_1/random_uniform/mul"
  input: "conv12/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/dw_1/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw_1/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv12/dw_1/depthwise_kernel"
  input: "conv12/dw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw_1/depthwise_kernel/read"
  op: "Identity"
  input: "conv12/dw_1/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw_1/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv12/dw_1/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv12/dw_1/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv12/dw_1/depthwise"
  op: "DepthwiseConv2dNative"
  input: "conv5_padding_1/Pad"
  input: "conv12/dw_1/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv12/dw/bn_1/gamma"
  input: "conv12/dw/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn_1/gamma/read"
  op: "Identity"
  input: "conv12/dw/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/bn_1/beta/Assign"
  op: "Assign"
  input: "conv12/dw/bn_1/beta"
  input: "conv12/dw/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn_1/beta/read"
  op: "Identity"
  input: "conv12/dw/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv12/dw/bn_1/moving_mean"
  input: "conv12/dw/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv12/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv12/dw/bn_1/moving_variance"
  input: "conv12/dw/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv12/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv12/dw_1/depthwise"
  input: "conv12/dw/bn_1/gamma/read"
  input: "conv12/dw/bn_1/beta/read"
  input: "conv12/dw/bn_1/Const_4"
  input: "conv12/dw/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn_1/Shape"
  op: "Shape"
  input: "conv12/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/dw/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv12/dw/bn_1/Shape"
  input: "conv12/dw/bn_1/strided_slice/stack"
  input: "conv12/dw/bn_1/strided_slice/stack_1"
  input: "conv12/dw/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv12/dw/bn_1/Shape_1"
  op: "Shape"
  input: "conv12/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/dw/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv12/dw/bn_1/Shape_1"
  input: "conv12/dw/bn_1/strided_slice_1/stack"
  input: "conv12/dw/bn_1/strided_slice_1/stack_1"
  input: "conv12/dw/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv12/dw/bn_1/Shape_2"
  op: "Shape"
  input: "conv12/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/dw/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv12/dw/bn_1/Shape_2"
  input: "conv12/dw/bn_1/strided_slice_2/stack"
  input: "conv12/dw/bn_1/strided_slice_2/stack_1"
  input: "conv12/dw/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv12/dw/bn_1/Rank/packed"
  op: "Pack"
  input: "conv12/dw/bn_1/strided_slice"
  input: "conv12/dw/bn_1/strided_slice_1"
  input: "conv12/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv12/dw/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/range"
  op: "Range"
  input: "conv12/dw/bn_1/range/start"
  input: "conv12/dw/bn_1/Rank"
  input: "conv12/dw/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/dw/bn_1/Prod/input"
  op: "Pack"
  input: "conv12/dw/bn_1/strided_slice"
  input: "conv12/dw/bn_1/strided_slice_1"
  input: "conv12/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv12/dw/bn_1/Prod"
  op: "Prod"
  input: "conv12/dw/bn_1/Prod/input"
  input: "conv12/dw/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/dw/bn_1/Cast"
  op: "Cast"
  input: "conv12/dw/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/dw/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/sub"
  op: "Sub"
  input: "conv12/dw/bn_1/Cast"
  input: "conv12/dw/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/dw/bn_1/truediv"
  op: "RealDiv"
  input: "conv12/dw/bn_1/Cast"
  input: "conv12/dw/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/dw/bn_1/mul"
  op: "Mul"
  input: "conv12/dw/bn_1/FusedBatchNorm:2"
  input: "conv12/dw/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv12/dw/bn_1/moving_mean/biased"
  input: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv12/dw/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv12/dw/bn_1/moving_mean/local_step"
  input: "conv12/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv12/dw/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv12/dw/bn_1/moving_mean/biased/read"
  input: "conv12/dw/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/sub"
  input: "conv12/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/conv12/dw/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv12/dw/bn_1/moving_mean/biased"
  input: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv12/dw/bn_1/moving_mean/local_step"
  input: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv12/dw/bn_1/moving_mean/biased"
  input: "^conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/conv12/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/conv12/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/sub_1/x"
  input: "conv12/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv12/dw/bn_1/moving_mean/local_step"
  input: "^conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/conv12/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/sub_1"
  input: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/conv12/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/sub_2/x"
  input: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/read"
  input: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv12/dw/bn_1/moving_mean/read"
  input: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv12/dw/bn_1/moving_mean"
  input: "conv12/dw/bn_1/AssignMovingAvg/conv12/dw/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv12/dw/bn_1/moving_variance/biased"
  input: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv12/dw/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv12/dw/bn_1/moving_variance/local_step"
  input: "conv12/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/dw/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv12/dw/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv12/dw/bn_1/moving_variance/biased/read"
  input: "conv12/dw/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/sub"
  input: "conv12/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/conv12/dw/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv12/dw/bn_1/moving_variance/biased"
  input: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv12/dw/bn_1/moving_variance/local_step"
  input: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv12/dw/bn_1/moving_variance/biased"
  input: "^conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/conv12/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/conv12/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/sub_1/x"
  input: "conv12/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv12/dw/bn_1/moving_variance/local_step"
  input: "^conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/conv12/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/sub_1"
  input: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/conv12/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/sub_2/x"
  input: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/read"
  input: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv12/dw/bn_1/moving_variance/read"
  input: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/dw/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv12/dw/bn_1/moving_variance"
  input: "conv12/dw/bn_1/AssignMovingAvg_1/conv12/dw/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/dw/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv12/dw_1/depthwise"
  input: "conv12/dw/bn_1/gamma/read"
  input: "conv12/dw/bn_1/beta/read"
  input: "conv12/dw/bn_1/moving_mean/read"
  input: "conv12/dw/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_51/Relu"
  op: "Relu"
  input: "conv12/dw/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "conv12_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0625
      }
    }
  }
}
node {
  name: "conv12_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "conv12_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv12_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3545975
    }
  }
}
node {
  name: "conv12_1/random_uniform/sub"
  op: "Sub"
  input: "conv12_1/random_uniform/max"
  input: "conv12_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12_1/random_uniform/mul"
  op: "Mul"
  input: "conv12_1/random_uniform/RandomUniform"
  input: "conv12_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12_1/random_uniform"
  op: "Add"
  input: "conv12_1/random_uniform/mul"
  input: "conv12_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12_1/kernel/Assign"
  op: "Assign"
  input: "conv12_1/kernel"
  input: "conv12_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12_1/kernel/read"
  op: "Identity"
  input: "conv12_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12_1/kernel"
      }
    }
  }
}
node {
  name: "conv12_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv12_1/convolution"
  op: "Conv2D"
  input: "activation_51/Relu"
  input: "conv12_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv12/bn_1/gamma"
  input: "conv12/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn_1/gamma/read"
  op: "Identity"
  input: "conv12/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv12/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/bn_1/beta/Assign"
  op: "Assign"
  input: "conv12/bn_1/beta"
  input: "conv12/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn_1/beta/read"
  op: "Identity"
  input: "conv12/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv12/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv12/bn_1/moving_mean"
  input: "conv12/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv12/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv12/bn_1/moving_variance"
  input: "conv12/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv12/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv12/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv12/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv12_1/convolution"
  input: "conv12/bn_1/gamma/read"
  input: "conv12/bn_1/beta/read"
  input: "conv12/bn_1/Const_4"
  input: "conv12/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn_1/Shape"
  op: "Shape"
  input: "conv12_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv12/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv12/bn_1/Shape"
  input: "conv12/bn_1/strided_slice/stack"
  input: "conv12/bn_1/strided_slice/stack_1"
  input: "conv12/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv12/bn_1/Shape_1"
  op: "Shape"
  input: "conv12_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv12/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv12/bn_1/Shape_1"
  input: "conv12/bn_1/strided_slice_1/stack"
  input: "conv12/bn_1/strided_slice_1/stack_1"
  input: "conv12/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv12/bn_1/Shape_2"
  op: "Shape"
  input: "conv12_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv12/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv12/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv12/bn_1/Shape_2"
  input: "conv12/bn_1/strided_slice_2/stack"
  input: "conv12/bn_1/strided_slice_2/stack_1"
  input: "conv12/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv12/bn_1/Rank/packed"
  op: "Pack"
  input: "conv12/bn_1/strided_slice"
  input: "conv12/bn_1/strided_slice_1"
  input: "conv12/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv12/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv12/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv12/bn_1/range"
  op: "Range"
  input: "conv12/bn_1/range/start"
  input: "conv12/bn_1/Rank"
  input: "conv12/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/bn_1/Prod/input"
  op: "Pack"
  input: "conv12/bn_1/strided_slice"
  input: "conv12/bn_1/strided_slice_1"
  input: "conv12/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv12/bn_1/Prod"
  op: "Prod"
  input: "conv12/bn_1/Prod/input"
  input: "conv12/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/bn_1/Cast"
  op: "Cast"
  input: "conv12/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv12/bn_1/sub"
  op: "Sub"
  input: "conv12/bn_1/Cast"
  input: "conv12/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/bn_1/truediv"
  op: "RealDiv"
  input: "conv12/bn_1/Cast"
  input: "conv12/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/bn_1/mul"
  op: "Mul"
  input: "conv12/bn_1/FusedBatchNorm:2"
  input: "conv12/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/zeros"
  op: "Fill"
  input: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/zeros/shape_as_tensor"
  input: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv12/bn_1/moving_mean/biased"
  input: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv12/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv12/bn_1/moving_mean/local_step"
  input: "conv12/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv12/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv12/bn_1/moving_mean/biased/read"
  input: "conv12/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/sub"
  input: "conv12/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/conv12/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv12/bn_1/moving_mean/biased"
  input: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv12/bn_1/moving_mean/local_step"
  input: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv12/bn_1/moving_mean/biased"
  input: "^conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/AssignAdd"
  input: "^conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/conv12/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/AssignAdd"
  input: "^conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/conv12/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/sub_1/x"
  input: "conv12/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv12/bn_1/moving_mean/local_step"
  input: "^conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/AssignAdd"
  input: "^conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/conv12/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/sub_1"
  input: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/AssignAdd"
  input: "^conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/conv12/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/sub_2/x"
  input: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/read"
  input: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv12/bn_1/moving_mean/read"
  input: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv12/bn_1/moving_mean"
  input: "conv12/bn_1/AssignMovingAvg/conv12/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/zeros"
  op: "Fill"
  input: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/zeros/shape_as_tensor"
  input: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv12/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv12/bn_1/moving_variance/biased"
  input: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv12/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv12/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv12/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv12/bn_1/moving_variance/local_step"
  input: "conv12/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv12/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv12/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv12/bn_1/moving_variance/biased/read"
  input: "conv12/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/sub"
  input: "conv12/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/conv12/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv12/bn_1/moving_variance/biased"
  input: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv12/bn_1/moving_variance/local_step"
  input: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv12/bn_1/moving_variance/biased"
  input: "^conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/AssignAdd"
  input: "^conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/conv12/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/AssignAdd"
  input: "^conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/conv12/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/sub_1/x"
  input: "conv12/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv12/bn_1/moving_variance/local_step"
  input: "^conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/AssignAdd"
  input: "^conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/conv12/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/sub_1"
  input: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/AssignAdd"
  input: "^conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/conv12/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/sub_2/x"
  input: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/read"
  input: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv12/bn_1/moving_variance/read"
  input: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv12/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv12/bn_1/moving_variance"
  input: "conv12/bn_1/AssignMovingAvg_1/conv12/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv12/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv12_1/convolution"
  input: "conv12/bn_1/gamma/read"
  input: "conv12/bn_1/beta/read"
  input: "conv12/bn_1/moving_mean/read"
  input: "conv12/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_52/Relu"
  op: "Relu"
  input: "conv12/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/dw_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv13/dw_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.025503069162368774
      }
    }
  }
}
node {
  name: "conv13/dw_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.025503069162368774
      }
    }
  }
}
node {
  name: "conv13/dw_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv13/dw_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 443144
    }
  }
}
node {
  name: "conv13/dw_1/random_uniform/sub"
  op: "Sub"
  input: "conv13/dw_1/random_uniform/max"
  input: "conv13/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/dw_1/random_uniform/mul"
  op: "Mul"
  input: "conv13/dw_1/random_uniform/RandomUniform"
  input: "conv13/dw_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/dw_1/random_uniform"
  op: "Add"
  input: "conv13/dw_1/random_uniform/mul"
  input: "conv13/dw_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/dw_1/depthwise_kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw_1/depthwise_kernel/Assign"
  op: "Assign"
  input: "conv13/dw_1/depthwise_kernel"
  input: "conv13/dw_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw_1/depthwise_kernel/read"
  op: "Identity"
  input: "conv13/dw_1/depthwise_kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw_1/depthwise_kernel"
      }
    }
  }
}
node {
  name: "conv13/dw_1/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\004\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv13/dw_1/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv13/dw_1/depthwise"
  op: "DepthwiseConv2dNative"
  input: "activation_52/Relu"
  input: "conv13/dw_1/depthwise_kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv13/dw/bn_1/gamma"
  input: "conv13/dw/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn_1/gamma/read"
  op: "Identity"
  input: "conv13/dw/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/bn_1/beta/Assign"
  op: "Assign"
  input: "conv13/dw/bn_1/beta"
  input: "conv13/dw/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn_1/beta/read"
  op: "Identity"
  input: "conv13/dw/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv13/dw/bn_1/moving_mean"
  input: "conv13/dw/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv13/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv13/dw/bn_1/moving_variance"
  input: "conv13/dw/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv13/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv13/dw_1/depthwise"
  input: "conv13/dw/bn_1/gamma/read"
  input: "conv13/dw/bn_1/beta/read"
  input: "conv13/dw/bn_1/Const_4"
  input: "conv13/dw/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn_1/Shape"
  op: "Shape"
  input: "conv13/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/dw/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv13/dw/bn_1/Shape"
  input: "conv13/dw/bn_1/strided_slice/stack"
  input: "conv13/dw/bn_1/strided_slice/stack_1"
  input: "conv13/dw/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv13/dw/bn_1/Shape_1"
  op: "Shape"
  input: "conv13/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/dw/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv13/dw/bn_1/Shape_1"
  input: "conv13/dw/bn_1/strided_slice_1/stack"
  input: "conv13/dw/bn_1/strided_slice_1/stack_1"
  input: "conv13/dw/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv13/dw/bn_1/Shape_2"
  op: "Shape"
  input: "conv13/dw_1/depthwise"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/dw/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv13/dw/bn_1/Shape_2"
  input: "conv13/dw/bn_1/strided_slice_2/stack"
  input: "conv13/dw/bn_1/strided_slice_2/stack_1"
  input: "conv13/dw/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv13/dw/bn_1/Rank/packed"
  op: "Pack"
  input: "conv13/dw/bn_1/strided_slice"
  input: "conv13/dw/bn_1/strided_slice_1"
  input: "conv13/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv13/dw/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/range"
  op: "Range"
  input: "conv13/dw/bn_1/range/start"
  input: "conv13/dw/bn_1/Rank"
  input: "conv13/dw/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/dw/bn_1/Prod/input"
  op: "Pack"
  input: "conv13/dw/bn_1/strided_slice"
  input: "conv13/dw/bn_1/strided_slice_1"
  input: "conv13/dw/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv13/dw/bn_1/Prod"
  op: "Prod"
  input: "conv13/dw/bn_1/Prod/input"
  input: "conv13/dw/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/dw/bn_1/Cast"
  op: "Cast"
  input: "conv13/dw/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/dw/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/sub"
  op: "Sub"
  input: "conv13/dw/bn_1/Cast"
  input: "conv13/dw/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/dw/bn_1/truediv"
  op: "RealDiv"
  input: "conv13/dw/bn_1/Cast"
  input: "conv13/dw/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/dw/bn_1/mul"
  op: "Mul"
  input: "conv13/dw/bn_1/FusedBatchNorm:2"
  input: "conv13/dw/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/zeros"
  op: "Fill"
  input: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/zeros/shape_as_tensor"
  input: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv13/dw/bn_1/moving_mean/biased"
  input: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv13/dw/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv13/dw/bn_1/moving_mean/local_step"
  input: "conv13/dw/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv13/dw/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv13/dw/bn_1/moving_mean/biased/read"
  input: "conv13/dw/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/sub"
  input: "conv13/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/conv13/dw/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv13/dw/bn_1/moving_mean/biased"
  input: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv13/dw/bn_1/moving_mean/local_step"
  input: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv13/dw/bn_1/moving_mean/biased"
  input: "^conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/conv13/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/conv13/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/sub_1/x"
  input: "conv13/dw/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv13/dw/bn_1/moving_mean/local_step"
  input: "^conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/conv13/dw/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/sub_1"
  input: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/AssignAdd"
  input: "^conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/conv13/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/sub_2/x"
  input: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/read"
  input: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv13/dw/bn_1/moving_mean/read"
  input: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv13/dw/bn_1/moving_mean"
  input: "conv13/dw/bn_1/AssignMovingAvg/conv13/dw/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/zeros"
  op: "Fill"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/zeros/shape_as_tensor"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv13/dw/bn_1/moving_variance/biased"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv13/dw/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv13/dw/bn_1/moving_variance/local_step"
  input: "conv13/dw/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/dw/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv13/dw/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv13/dw/bn_1/moving_variance/biased/read"
  input: "conv13/dw/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/sub"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/conv13/dw/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv13/dw/bn_1/moving_variance/biased"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv13/dw/bn_1/moving_variance/local_step"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv13/dw/bn_1/moving_variance/biased"
  input: "^conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/conv13/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/conv13/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/sub_1/x"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv13/dw/bn_1/moving_variance/local_step"
  input: "^conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/conv13/dw/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/sub_1"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/AssignAdd"
  input: "^conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/conv13/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/sub_2/x"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/read"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv13/dw/bn_1/moving_variance/read"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/dw/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv13/dw/bn_1/moving_variance"
  input: "conv13/dw/bn_1/AssignMovingAvg_1/conv13/dw/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/dw/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv13/dw_1/depthwise"
  input: "conv13/dw/bn_1/gamma/read"
  input: "conv13/dw/bn_1/beta/read"
  input: "conv13/dw/bn_1/moving_mean/read"
  input: "conv13/dw/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_53/Relu"
  op: "Relu"
  input: "conv13/dw/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\004\000\000"
      }
    }
  }
}
node {
  name: "conv13_1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05412658676505089
      }
    }
  }
}
node {
  name: "conv13_1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05412658676505089
      }
    }
  }
}
node {
  name: "conv13_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "conv13_1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9661780
    }
  }
}
node {
  name: "conv13_1/random_uniform/sub"
  op: "Sub"
  input: "conv13_1/random_uniform/max"
  input: "conv13_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_1/random_uniform/mul"
  op: "Mul"
  input: "conv13_1/random_uniform/RandomUniform"
  input: "conv13_1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_1/random_uniform"
  op: "Add"
  input: "conv13_1/random_uniform/mul"
  input: "conv13_1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13_1/kernel/Assign"
  op: "Assign"
  input: "conv13_1/kernel"
  input: "conv13_1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13_1/kernel/read"
  op: "Identity"
  input: "conv13_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_1/kernel"
      }
    }
  }
}
node {
  name: "conv13_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv13_1/convolution"
  op: "Conv2D"
  input: "activation_53/Relu"
  input: "conv13_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv13/bn_1/gamma"
  input: "conv13/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn_1/gamma/read"
  op: "Identity"
  input: "conv13/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv13/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/bn_1/beta/Assign"
  op: "Assign"
  input: "conv13/bn_1/beta"
  input: "conv13/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn_1/beta/read"
  op: "Identity"
  input: "conv13/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv13/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv13/bn_1/moving_mean"
  input: "conv13/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv13/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv13/bn_1/moving_variance"
  input: "conv13/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv13/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv13/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv13/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv13_1/convolution"
  input: "conv13/bn_1/gamma/read"
  input: "conv13/bn_1/beta/read"
  input: "conv13/bn_1/Const_4"
  input: "conv13/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn_1/Shape"
  op: "Shape"
  input: "conv13_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv13/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv13/bn_1/Shape"
  input: "conv13/bn_1/strided_slice/stack"
  input: "conv13/bn_1/strided_slice/stack_1"
  input: "conv13/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv13/bn_1/Shape_1"
  op: "Shape"
  input: "conv13_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv13/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv13/bn_1/Shape_1"
  input: "conv13/bn_1/strided_slice_1/stack"
  input: "conv13/bn_1/strided_slice_1/stack_1"
  input: "conv13/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv13/bn_1/Shape_2"
  op: "Shape"
  input: "conv13_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv13/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv13/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv13/bn_1/Shape_2"
  input: "conv13/bn_1/strided_slice_2/stack"
  input: "conv13/bn_1/strided_slice_2/stack_1"
  input: "conv13/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv13/bn_1/Rank/packed"
  op: "Pack"
  input: "conv13/bn_1/strided_slice"
  input: "conv13/bn_1/strided_slice_1"
  input: "conv13/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv13/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv13/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv13/bn_1/range"
  op: "Range"
  input: "conv13/bn_1/range/start"
  input: "conv13/bn_1/Rank"
  input: "conv13/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/bn_1/Prod/input"
  op: "Pack"
  input: "conv13/bn_1/strided_slice"
  input: "conv13/bn_1/strided_slice_1"
  input: "conv13/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv13/bn_1/Prod"
  op: "Prod"
  input: "conv13/bn_1/Prod/input"
  input: "conv13/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/bn_1/Cast"
  op: "Cast"
  input: "conv13/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv13/bn_1/sub"
  op: "Sub"
  input: "conv13/bn_1/Cast"
  input: "conv13/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/bn_1/truediv"
  op: "RealDiv"
  input: "conv13/bn_1/Cast"
  input: "conv13/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/bn_1/mul"
  op: "Mul"
  input: "conv13/bn_1/FusedBatchNorm:2"
  input: "conv13/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/zeros"
  op: "Fill"
  input: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/zeros/shape_as_tensor"
  input: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv13/bn_1/moving_mean/biased"
  input: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv13/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv13/bn_1/moving_mean/local_step"
  input: "conv13/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv13/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv13/bn_1/moving_mean/biased/read"
  input: "conv13/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/sub"
  input: "conv13/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/conv13/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv13/bn_1/moving_mean/biased"
  input: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv13/bn_1/moving_mean/local_step"
  input: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv13/bn_1/moving_mean/biased"
  input: "^conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/AssignAdd"
  input: "^conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/conv13/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/AssignAdd"
  input: "^conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/conv13/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/sub_1/x"
  input: "conv13/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv13/bn_1/moving_mean/local_step"
  input: "^conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/AssignAdd"
  input: "^conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/conv13/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/sub_1"
  input: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/AssignAdd"
  input: "^conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/conv13/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/sub_2/x"
  input: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/read"
  input: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv13/bn_1/moving_mean/read"
  input: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv13/bn_1/moving_mean"
  input: "conv13/bn_1/AssignMovingAvg/conv13/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/zeros"
  op: "Fill"
  input: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/zeros/shape_as_tensor"
  input: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv13/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv13/bn_1/moving_variance/biased"
  input: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv13/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv13/bn_1/moving_variance/local_step"
  input: "conv13/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv13/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv13/bn_1/moving_variance/biased/read"
  input: "conv13/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/sub"
  input: "conv13/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/conv13/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv13/bn_1/moving_variance/biased"
  input: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv13/bn_1/moving_variance/local_step"
  input: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv13/bn_1/moving_variance/biased"
  input: "^conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/AssignAdd"
  input: "^conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/conv13/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/AssignAdd"
  input: "^conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/conv13/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/sub_1/x"
  input: "conv13/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv13/bn_1/moving_variance/local_step"
  input: "^conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/AssignAdd"
  input: "^conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/conv13/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/sub_1"
  input: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/AssignAdd"
  input: "^conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/conv13/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/sub_2/x"
  input: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/read"
  input: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv13/bn_1/moving_variance/read"
  input: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv13/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv13/bn_1/moving_variance"
  input: "conv13/bn_1/AssignMovingAvg_1/conv13/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv13/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv13_1/convolution"
  input: "conv13/bn_1/gamma/read"
  input: "conv13/bn_1/beta/read"
  input: "conv13/bn_1/moving_mean/read"
  input: "conv13/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "activation_54/Relu"
  op: "Relu"
  input: "conv13/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv14_1_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_1_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "conv14_1_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv14_1_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9533370
    }
  }
}
node {
  name: "conv14_1_1/truncated_normal/mul"
  op: "Mul"
  input: "conv14_1_1/truncated_normal/TruncatedNormal"
  input: "conv14_1_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1_1/truncated_normal"
  op: "Add"
  input: "conv14_1_1/truncated_normal/mul"
  input: "conv14_1_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1_1/kernel/Assign"
  op: "Assign"
  input: "conv14_1_1/kernel"
  input: "conv14_1_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1_1/kernel/read"
  op: "Identity"
  input: "conv14_1_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1_1/kernel"
      }
    }
  }
}
node {
  name: "conv14_1_1/weight_regularizer/Square"
  op: "Square"
  input: "conv14_1_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv14_1_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv14_1_1/weight_regularizer/mul/x"
  input: "conv14_1_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_1_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv14_1_1/weight_regularizer/mul"
  input: "conv14_1_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_1_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_1_1/weight_regularizer/add"
  op: "Add"
  input: "conv14_1_1/weight_regularizer/add/x"
  input: "conv14_1_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_1_1/convolution"
  op: "Conv2D"
  input: "activation_54/Relu"
  input: "conv14_1_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv14_1/bn_1/gamma"
  input: "conv14_1/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn_1/gamma/read"
  op: "Identity"
  input: "conv14_1/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/bn_1/beta/Assign"
  op: "Assign"
  input: "conv14_1/bn_1/beta"
  input: "conv14_1/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn_1/beta/read"
  op: "Identity"
  input: "conv14_1/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv14_1/bn_1/moving_mean"
  input: "conv14_1/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv14_1/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv14_1/bn_1/moving_variance"
  input: "conv14_1/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv14_1/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv14_1_1/convolution"
  input: "conv14_1/bn_1/gamma/read"
  input: "conv14_1/bn_1/beta/read"
  input: "conv14_1/bn_1/Const_4"
  input: "conv14_1/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn_1/Shape"
  op: "Shape"
  input: "conv14_1_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_1/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv14_1/bn_1/Shape"
  input: "conv14_1/bn_1/strided_slice/stack"
  input: "conv14_1/bn_1/strided_slice/stack_1"
  input: "conv14_1/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv14_1/bn_1/Shape_1"
  op: "Shape"
  input: "conv14_1_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_1/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv14_1/bn_1/Shape_1"
  input: "conv14_1/bn_1/strided_slice_1/stack"
  input: "conv14_1/bn_1/strided_slice_1/stack_1"
  input: "conv14_1/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv14_1/bn_1/Shape_2"
  op: "Shape"
  input: "conv14_1_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_1/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv14_1/bn_1/Shape_2"
  input: "conv14_1/bn_1/strided_slice_2/stack"
  input: "conv14_1/bn_1/strided_slice_2/stack_1"
  input: "conv14_1/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv14_1/bn_1/Rank/packed"
  op: "Pack"
  input: "conv14_1/bn_1/strided_slice"
  input: "conv14_1/bn_1/strided_slice_1"
  input: "conv14_1/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv14_1/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/range"
  op: "Range"
  input: "conv14_1/bn_1/range/start"
  input: "conv14_1/bn_1/Rank"
  input: "conv14_1/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_1/bn_1/Prod/input"
  op: "Pack"
  input: "conv14_1/bn_1/strided_slice"
  input: "conv14_1/bn_1/strided_slice_1"
  input: "conv14_1/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv14_1/bn_1/Prod"
  op: "Prod"
  input: "conv14_1/bn_1/Prod/input"
  input: "conv14_1/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_1/bn_1/Cast"
  op: "Cast"
  input: "conv14_1/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_1/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/sub"
  op: "Sub"
  input: "conv14_1/bn_1/Cast"
  input: "conv14_1/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1/bn_1/truediv"
  op: "RealDiv"
  input: "conv14_1/bn_1/Cast"
  input: "conv14_1/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1/bn_1/mul"
  op: "Mul"
  input: "conv14_1/bn_1/FusedBatchNorm:2"
  input: "conv14_1/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv14_1/bn_1/moving_mean/biased"
  input: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv14_1/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv14_1/bn_1/moving_mean/local_step"
  input: "conv14_1/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv14_1/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv14_1/bn_1/moving_mean/biased/read"
  input: "conv14_1/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/sub"
  input: "conv14_1/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/conv14_1/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv14_1/bn_1/moving_mean/biased"
  input: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv14_1/bn_1/moving_mean/local_step"
  input: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv14_1/bn_1/moving_mean/biased"
  input: "^conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/AssignAdd"
  input: "^conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/conv14_1/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/AssignAdd"
  input: "^conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/conv14_1/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/sub_1/x"
  input: "conv14_1/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv14_1/bn_1/moving_mean/local_step"
  input: "^conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/AssignAdd"
  input: "^conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/conv14_1/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/sub_1"
  input: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/AssignAdd"
  input: "^conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/conv14_1/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/sub_2/x"
  input: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/read"
  input: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv14_1/bn_1/moving_mean/read"
  input: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv14_1/bn_1/moving_mean"
  input: "conv14_1/bn_1/AssignMovingAvg/conv14_1/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv14_1/bn_1/moving_variance/biased"
  input: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv14_1/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv14_1/bn_1/moving_variance/local_step"
  input: "conv14_1/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_1/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv14_1/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv14_1/bn_1/moving_variance/biased/read"
  input: "conv14_1/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/sub"
  input: "conv14_1/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/conv14_1/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv14_1/bn_1/moving_variance/biased"
  input: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv14_1/bn_1/moving_variance/local_step"
  input: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv14_1/bn_1/moving_variance/biased"
  input: "^conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/AssignAdd"
  input: "^conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/conv14_1/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/AssignAdd"
  input: "^conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/conv14_1/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/sub_1/x"
  input: "conv14_1/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv14_1/bn_1/moving_variance/local_step"
  input: "^conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/AssignAdd"
  input: "^conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/conv14_1/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/sub_1"
  input: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/AssignAdd"
  input: "^conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/conv14_1/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/sub_2/x"
  input: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/read"
  input: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv14_1/bn_1/moving_variance/read"
  input: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_1/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv14_1/bn_1/moving_variance"
  input: "conv14_1/bn_1/AssignMovingAvg_1/conv14_1/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_1/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv14_1_1/convolution"
  input: "conv14_1/bn_1/gamma/read"
  input: "conv14_1/bn_1/beta/read"
  input: "conv14_1/bn_1/moving_mean/read"
  input: "conv14_1/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "relu_conv6_1_1/Relu"
  op: "Relu"
  input: "conv14_1/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv6_padding_1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv6_padding_1/Pad"
  op: "Pad"
  input: "relu_conv6_1_1/Relu"
  input: "conv6_padding_1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_2_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\000\001\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "conv14_2_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03349468111991882
      }
    }
  }
}
node {
  name: "conv14_2_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv14_2_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1842578
    }
  }
}
node {
  name: "conv14_2_1/truncated_normal/mul"
  op: "Mul"
  input: "conv14_2_1/truncated_normal/TruncatedNormal"
  input: "conv14_2_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_1/truncated_normal"
  op: "Add"
  input: "conv14_2_1/truncated_normal/mul"
  input: "conv14_2_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2_1/kernel/Assign"
  op: "Assign"
  input: "conv14_2_1/kernel"
  input: "conv14_2_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2_1/kernel/read"
  op: "Identity"
  input: "conv14_2_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_1/kernel"
      }
    }
  }
}
node {
  name: "conv14_2_1/weight_regularizer/Square"
  op: "Square"
  input: "conv14_2_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv14_2_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv14_2_1/weight_regularizer/mul/x"
  input: "conv14_2_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_2_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv14_2_1/weight_regularizer/mul"
  input: "conv14_2_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2_1/weight_regularizer/add"
  op: "Add"
  input: "conv14_2_1/weight_regularizer/add/x"
  input: "conv14_2_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_2_1/convolution"
  op: "Conv2D"
  input: "conv6_padding_1/Pad"
  input: "conv14_2_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv14_2/bn_1/gamma"
  input: "conv14_2/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn_1/gamma/read"
  op: "Identity"
  input: "conv14_2/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/bn_1/beta/Assign"
  op: "Assign"
  input: "conv14_2/bn_1/beta"
  input: "conv14_2/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn_1/beta/read"
  op: "Identity"
  input: "conv14_2/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv14_2/bn_1/moving_mean"
  input: "conv14_2/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv14_2/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv14_2/bn_1/moving_variance"
  input: "conv14_2/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv14_2/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv14_2_1/convolution"
  input: "conv14_2/bn_1/gamma/read"
  input: "conv14_2/bn_1/beta/read"
  input: "conv14_2/bn_1/Const_4"
  input: "conv14_2/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn_1/Shape"
  op: "Shape"
  input: "conv14_2_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_2/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv14_2/bn_1/Shape"
  input: "conv14_2/bn_1/strided_slice/stack"
  input: "conv14_2/bn_1/strided_slice/stack_1"
  input: "conv14_2/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv14_2/bn_1/Shape_1"
  op: "Shape"
  input: "conv14_2_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_2/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv14_2/bn_1/Shape_1"
  input: "conv14_2/bn_1/strided_slice_1/stack"
  input: "conv14_2/bn_1/strided_slice_1/stack_1"
  input: "conv14_2/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv14_2/bn_1/Shape_2"
  op: "Shape"
  input: "conv14_2_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_2/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv14_2/bn_1/Shape_2"
  input: "conv14_2/bn_1/strided_slice_2/stack"
  input: "conv14_2/bn_1/strided_slice_2/stack_1"
  input: "conv14_2/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv14_2/bn_1/Rank/packed"
  op: "Pack"
  input: "conv14_2/bn_1/strided_slice"
  input: "conv14_2/bn_1/strided_slice_1"
  input: "conv14_2/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv14_2/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/range"
  op: "Range"
  input: "conv14_2/bn_1/range/start"
  input: "conv14_2/bn_1/Rank"
  input: "conv14_2/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_2/bn_1/Prod/input"
  op: "Pack"
  input: "conv14_2/bn_1/strided_slice"
  input: "conv14_2/bn_1/strided_slice_1"
  input: "conv14_2/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv14_2/bn_1/Prod"
  op: "Prod"
  input: "conv14_2/bn_1/Prod/input"
  input: "conv14_2/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2/bn_1/Cast"
  op: "Cast"
  input: "conv14_2/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv14_2/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/sub"
  op: "Sub"
  input: "conv14_2/bn_1/Cast"
  input: "conv14_2/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2/bn_1/truediv"
  op: "RealDiv"
  input: "conv14_2/bn_1/Cast"
  input: "conv14_2/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2/bn_1/mul"
  op: "Mul"
  input: "conv14_2/bn_1/FusedBatchNorm:2"
  input: "conv14_2/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv14_2/bn_1/moving_mean/biased"
  input: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv14_2/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv14_2/bn_1/moving_mean/local_step"
  input: "conv14_2/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv14_2/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv14_2/bn_1/moving_mean/biased/read"
  input: "conv14_2/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/sub"
  input: "conv14_2/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/conv14_2/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv14_2/bn_1/moving_mean/biased"
  input: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv14_2/bn_1/moving_mean/local_step"
  input: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv14_2/bn_1/moving_mean/biased"
  input: "^conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/AssignAdd"
  input: "^conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/conv14_2/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/AssignAdd"
  input: "^conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/conv14_2/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/sub_1/x"
  input: "conv14_2/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv14_2/bn_1/moving_mean/local_step"
  input: "^conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/AssignAdd"
  input: "^conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/conv14_2/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/sub_1"
  input: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/AssignAdd"
  input: "^conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/conv14_2/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/sub_2/x"
  input: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/read"
  input: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv14_2/bn_1/moving_mean/read"
  input: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv14_2/bn_1/moving_mean"
  input: "conv14_2/bn_1/AssignMovingAvg/conv14_2/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv14_2/bn_1/moving_variance/biased"
  input: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv14_2/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv14_2/bn_1/moving_variance/local_step"
  input: "conv14_2/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv14_2/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv14_2/bn_1/moving_variance/biased/read"
  input: "conv14_2/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/sub"
  input: "conv14_2/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/conv14_2/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv14_2/bn_1/moving_variance/biased"
  input: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv14_2/bn_1/moving_variance/local_step"
  input: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv14_2/bn_1/moving_variance/biased"
  input: "^conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/AssignAdd"
  input: "^conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/conv14_2/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/AssignAdd"
  input: "^conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/conv14_2/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/sub_1/x"
  input: "conv14_2/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv14_2/bn_1/moving_variance/local_step"
  input: "^conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/AssignAdd"
  input: "^conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/conv14_2/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/sub_1"
  input: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/AssignAdd"
  input: "^conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/conv14_2/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/sub_2/x"
  input: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/read"
  input: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv14_2/bn_1/moving_variance/read"
  input: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv14_2/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv14_2/bn_1/moving_variance"
  input: "conv14_2/bn_1/AssignMovingAvg_1/conv14_2/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv14_2_1/convolution"
  input: "conv14_2/bn_1/gamma/read"
  input: "conv14_2/bn_1/beta/read"
  input: "conv14_2/bn_1/moving_mean/read"
  input: "conv14_2/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "relu_conv6_2_1/Relu"
  op: "Relu"
  input: "conv14_2/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_1_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_1_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07105295360088348
      }
    }
  }
}
node {
  name: "conv15_1_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv15_1_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6639775
    }
  }
}
node {
  name: "conv15_1_1/truncated_normal/mul"
  op: "Mul"
  input: "conv15_1_1/truncated_normal/TruncatedNormal"
  input: "conv15_1_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1_1/truncated_normal"
  op: "Add"
  input: "conv15_1_1/truncated_normal/mul"
  input: "conv15_1_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1_1/kernel/Assign"
  op: "Assign"
  input: "conv15_1_1/kernel"
  input: "conv15_1_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1_1/kernel/read"
  op: "Identity"
  input: "conv15_1_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1_1/kernel"
      }
    }
  }
}
node {
  name: "conv15_1_1/weight_regularizer/Square"
  op: "Square"
  input: "conv15_1_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv15_1_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv15_1_1/weight_regularizer/mul/x"
  input: "conv15_1_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_1_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv15_1_1/weight_regularizer/mul"
  input: "conv15_1_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_1_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_1_1/weight_regularizer/add"
  op: "Add"
  input: "conv15_1_1/weight_regularizer/add/x"
  input: "conv15_1_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_1_1/convolution"
  op: "Conv2D"
  input: "relu_conv6_2_1/Relu"
  input: "conv15_1_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv15_1/bn_1/gamma"
  input: "conv15_1/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn_1/gamma/read"
  op: "Identity"
  input: "conv15_1/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/bn_1/beta/Assign"
  op: "Assign"
  input: "conv15_1/bn_1/beta"
  input: "conv15_1/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn_1/beta/read"
  op: "Identity"
  input: "conv15_1/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv15_1/bn_1/moving_mean"
  input: "conv15_1/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv15_1/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv15_1/bn_1/moving_variance"
  input: "conv15_1/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv15_1/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv15_1_1/convolution"
  input: "conv15_1/bn_1/gamma/read"
  input: "conv15_1/bn_1/beta/read"
  input: "conv15_1/bn_1/Const_4"
  input: "conv15_1/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn_1/Shape"
  op: "Shape"
  input: "conv15_1_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_1/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv15_1/bn_1/Shape"
  input: "conv15_1/bn_1/strided_slice/stack"
  input: "conv15_1/bn_1/strided_slice/stack_1"
  input: "conv15_1/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv15_1/bn_1/Shape_1"
  op: "Shape"
  input: "conv15_1_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_1/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv15_1/bn_1/Shape_1"
  input: "conv15_1/bn_1/strided_slice_1/stack"
  input: "conv15_1/bn_1/strided_slice_1/stack_1"
  input: "conv15_1/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv15_1/bn_1/Shape_2"
  op: "Shape"
  input: "conv15_1_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_1/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv15_1/bn_1/Shape_2"
  input: "conv15_1/bn_1/strided_slice_2/stack"
  input: "conv15_1/bn_1/strided_slice_2/stack_1"
  input: "conv15_1/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv15_1/bn_1/Rank/packed"
  op: "Pack"
  input: "conv15_1/bn_1/strided_slice"
  input: "conv15_1/bn_1/strided_slice_1"
  input: "conv15_1/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv15_1/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/range"
  op: "Range"
  input: "conv15_1/bn_1/range/start"
  input: "conv15_1/bn_1/Rank"
  input: "conv15_1/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_1/bn_1/Prod/input"
  op: "Pack"
  input: "conv15_1/bn_1/strided_slice"
  input: "conv15_1/bn_1/strided_slice_1"
  input: "conv15_1/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv15_1/bn_1/Prod"
  op: "Prod"
  input: "conv15_1/bn_1/Prod/input"
  input: "conv15_1/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_1/bn_1/Cast"
  op: "Cast"
  input: "conv15_1/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_1/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/sub"
  op: "Sub"
  input: "conv15_1/bn_1/Cast"
  input: "conv15_1/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1/bn_1/truediv"
  op: "RealDiv"
  input: "conv15_1/bn_1/Cast"
  input: "conv15_1/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1/bn_1/mul"
  op: "Mul"
  input: "conv15_1/bn_1/FusedBatchNorm:2"
  input: "conv15_1/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv15_1/bn_1/moving_mean/biased"
  input: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv15_1/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv15_1/bn_1/moving_mean/local_step"
  input: "conv15_1/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv15_1/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv15_1/bn_1/moving_mean/biased/read"
  input: "conv15_1/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/sub"
  input: "conv15_1/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/conv15_1/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv15_1/bn_1/moving_mean/biased"
  input: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv15_1/bn_1/moving_mean/local_step"
  input: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv15_1/bn_1/moving_mean/biased"
  input: "^conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/AssignAdd"
  input: "^conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/conv15_1/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/AssignAdd"
  input: "^conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/conv15_1/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/sub_1/x"
  input: "conv15_1/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv15_1/bn_1/moving_mean/local_step"
  input: "^conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/AssignAdd"
  input: "^conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/conv15_1/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/sub_1"
  input: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/AssignAdd"
  input: "^conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/conv15_1/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/sub_2/x"
  input: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/read"
  input: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv15_1/bn_1/moving_mean/read"
  input: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv15_1/bn_1/moving_mean"
  input: "conv15_1/bn_1/AssignMovingAvg/conv15_1/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv15_1/bn_1/moving_variance/biased"
  input: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv15_1/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv15_1/bn_1/moving_variance/local_step"
  input: "conv15_1/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_1/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv15_1/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv15_1/bn_1/moving_variance/biased/read"
  input: "conv15_1/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/sub"
  input: "conv15_1/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/conv15_1/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv15_1/bn_1/moving_variance/biased"
  input: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv15_1/bn_1/moving_variance/local_step"
  input: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv15_1/bn_1/moving_variance/biased"
  input: "^conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/AssignAdd"
  input: "^conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/conv15_1/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/AssignAdd"
  input: "^conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/conv15_1/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/sub_1/x"
  input: "conv15_1/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv15_1/bn_1/moving_variance/local_step"
  input: "^conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/AssignAdd"
  input: "^conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/conv15_1/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/sub_1"
  input: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/AssignAdd"
  input: "^conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/conv15_1/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/sub_2/x"
  input: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/read"
  input: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv15_1/bn_1/moving_variance/read"
  input: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_1/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv15_1/bn_1/moving_variance"
  input: "conv15_1/bn_1/AssignMovingAvg_1/conv15_1/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_1/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv15_1_1/convolution"
  input: "conv15_1/bn_1/gamma/read"
  input: "conv15_1/bn_1/beta/read"
  input: "conv15_1/bn_1/moving_mean/read"
  input: "conv15_1/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "relu_conv7_1_1/Relu"
  op: "Relu"
  input: "conv15_1/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv7_padding_1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv7_padding_1/Pad"
  op: "Pad"
  input: "relu_conv7_1_1/Relu"
  input: "conv7_padding_1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_2_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv15_2_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04736863449215889
      }
    }
  }
}
node {
  name: "conv15_2_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv15_2_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6805182
    }
  }
}
node {
  name: "conv15_2_1/truncated_normal/mul"
  op: "Mul"
  input: "conv15_2_1/truncated_normal/TruncatedNormal"
  input: "conv15_2_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_1/truncated_normal"
  op: "Add"
  input: "conv15_2_1/truncated_normal/mul"
  input: "conv15_2_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2_1/kernel/Assign"
  op: "Assign"
  input: "conv15_2_1/kernel"
  input: "conv15_2_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2_1/kernel/read"
  op: "Identity"
  input: "conv15_2_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_1/kernel"
      }
    }
  }
}
node {
  name: "conv15_2_1/weight_regularizer/Square"
  op: "Square"
  input: "conv15_2_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv15_2_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv15_2_1/weight_regularizer/mul/x"
  input: "conv15_2_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_2_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv15_2_1/weight_regularizer/mul"
  input: "conv15_2_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2_1/weight_regularizer/add"
  op: "Add"
  input: "conv15_2_1/weight_regularizer/add/x"
  input: "conv15_2_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_2_1/convolution"
  op: "Conv2D"
  input: "conv7_padding_1/Pad"
  input: "conv15_2_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv15_2/bn_1/gamma"
  input: "conv15_2/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn_1/gamma/read"
  op: "Identity"
  input: "conv15_2/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/bn_1/beta/Assign"
  op: "Assign"
  input: "conv15_2/bn_1/beta"
  input: "conv15_2/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn_1/beta/read"
  op: "Identity"
  input: "conv15_2/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv15_2/bn_1/moving_mean"
  input: "conv15_2/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv15_2/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv15_2/bn_1/moving_variance"
  input: "conv15_2/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv15_2/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv15_2_1/convolution"
  input: "conv15_2/bn_1/gamma/read"
  input: "conv15_2/bn_1/beta/read"
  input: "conv15_2/bn_1/Const_4"
  input: "conv15_2/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn_1/Shape"
  op: "Shape"
  input: "conv15_2_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_2/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv15_2/bn_1/Shape"
  input: "conv15_2/bn_1/strided_slice/stack"
  input: "conv15_2/bn_1/strided_slice/stack_1"
  input: "conv15_2/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv15_2/bn_1/Shape_1"
  op: "Shape"
  input: "conv15_2_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_2/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv15_2/bn_1/Shape_1"
  input: "conv15_2/bn_1/strided_slice_1/stack"
  input: "conv15_2/bn_1/strided_slice_1/stack_1"
  input: "conv15_2/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv15_2/bn_1/Shape_2"
  op: "Shape"
  input: "conv15_2_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_2/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv15_2/bn_1/Shape_2"
  input: "conv15_2/bn_1/strided_slice_2/stack"
  input: "conv15_2/bn_1/strided_slice_2/stack_1"
  input: "conv15_2/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv15_2/bn_1/Rank/packed"
  op: "Pack"
  input: "conv15_2/bn_1/strided_slice"
  input: "conv15_2/bn_1/strided_slice_1"
  input: "conv15_2/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv15_2/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/range"
  op: "Range"
  input: "conv15_2/bn_1/range/start"
  input: "conv15_2/bn_1/Rank"
  input: "conv15_2/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_2/bn_1/Prod/input"
  op: "Pack"
  input: "conv15_2/bn_1/strided_slice"
  input: "conv15_2/bn_1/strided_slice_1"
  input: "conv15_2/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv15_2/bn_1/Prod"
  op: "Prod"
  input: "conv15_2/bn_1/Prod/input"
  input: "conv15_2/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2/bn_1/Cast"
  op: "Cast"
  input: "conv15_2/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv15_2/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/sub"
  op: "Sub"
  input: "conv15_2/bn_1/Cast"
  input: "conv15_2/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2/bn_1/truediv"
  op: "RealDiv"
  input: "conv15_2/bn_1/Cast"
  input: "conv15_2/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2/bn_1/mul"
  op: "Mul"
  input: "conv15_2/bn_1/FusedBatchNorm:2"
  input: "conv15_2/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv15_2/bn_1/moving_mean/biased"
  input: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv15_2/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv15_2/bn_1/moving_mean/local_step"
  input: "conv15_2/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv15_2/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv15_2/bn_1/moving_mean/biased/read"
  input: "conv15_2/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/sub"
  input: "conv15_2/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/conv15_2/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv15_2/bn_1/moving_mean/biased"
  input: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv15_2/bn_1/moving_mean/local_step"
  input: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv15_2/bn_1/moving_mean/biased"
  input: "^conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/AssignAdd"
  input: "^conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/conv15_2/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/AssignAdd"
  input: "^conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/conv15_2/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/sub_1/x"
  input: "conv15_2/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv15_2/bn_1/moving_mean/local_step"
  input: "^conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/AssignAdd"
  input: "^conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/conv15_2/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/sub_1"
  input: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/AssignAdd"
  input: "^conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/conv15_2/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/sub_2/x"
  input: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/read"
  input: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv15_2/bn_1/moving_mean/read"
  input: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv15_2/bn_1/moving_mean"
  input: "conv15_2/bn_1/AssignMovingAvg/conv15_2/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv15_2/bn_1/moving_variance/biased"
  input: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv15_2/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv15_2/bn_1/moving_variance/local_step"
  input: "conv15_2/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv15_2/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv15_2/bn_1/moving_variance/biased/read"
  input: "conv15_2/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/sub"
  input: "conv15_2/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/conv15_2/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv15_2/bn_1/moving_variance/biased"
  input: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv15_2/bn_1/moving_variance/local_step"
  input: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv15_2/bn_1/moving_variance/biased"
  input: "^conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/AssignAdd"
  input: "^conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/conv15_2/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/AssignAdd"
  input: "^conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/conv15_2/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/sub_1/x"
  input: "conv15_2/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv15_2/bn_1/moving_variance/local_step"
  input: "^conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/AssignAdd"
  input: "^conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/conv15_2/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/sub_1"
  input: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/AssignAdd"
  input: "^conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/conv15_2/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/sub_2/x"
  input: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/read"
  input: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv15_2/bn_1/moving_variance/read"
  input: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv15_2/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv15_2/bn_1/moving_variance"
  input: "conv15_2/bn_1/AssignMovingAvg_1/conv15_2/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv15_2_1/convolution"
  input: "conv15_2/bn_1/gamma/read"
  input: "conv15_2/bn_1/beta/read"
  input: "conv15_2/bn_1/moving_mean/read"
  input: "conv15_2/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "relu_conv7_2_1/Relu"
  op: "Relu"
  input: "conv15_2/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_1_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_1_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10048405081033707
      }
    }
  }
}
node {
  name: "conv16_1_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv16_1_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7864071
    }
  }
}
node {
  name: "conv16_1_1/truncated_normal/mul"
  op: "Mul"
  input: "conv16_1_1/truncated_normal/TruncatedNormal"
  input: "conv16_1_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1_1/truncated_normal"
  op: "Add"
  input: "conv16_1_1/truncated_normal/mul"
  input: "conv16_1_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1_1/kernel/Assign"
  op: "Assign"
  input: "conv16_1_1/kernel"
  input: "conv16_1_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1_1/kernel/read"
  op: "Identity"
  input: "conv16_1_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1_1/kernel"
      }
    }
  }
}
node {
  name: "conv16_1_1/weight_regularizer/Square"
  op: "Square"
  input: "conv16_1_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv16_1_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv16_1_1/weight_regularizer/mul/x"
  input: "conv16_1_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_1_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv16_1_1/weight_regularizer/mul"
  input: "conv16_1_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_1_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_1_1/weight_regularizer/add"
  op: "Add"
  input: "conv16_1_1/weight_regularizer/add/x"
  input: "conv16_1_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_1_1/convolution"
  op: "Conv2D"
  input: "relu_conv7_2_1/Relu"
  input: "conv16_1_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv16_1/bn_1/gamma"
  input: "conv16_1/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn_1/gamma/read"
  op: "Identity"
  input: "conv16_1/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/bn_1/beta/Assign"
  op: "Assign"
  input: "conv16_1/bn_1/beta"
  input: "conv16_1/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn_1/beta/read"
  op: "Identity"
  input: "conv16_1/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv16_1/bn_1/moving_mean"
  input: "conv16_1/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv16_1/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv16_1/bn_1/moving_variance"
  input: "conv16_1/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv16_1/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv16_1_1/convolution"
  input: "conv16_1/bn_1/gamma/read"
  input: "conv16_1/bn_1/beta/read"
  input: "conv16_1/bn_1/Const_4"
  input: "conv16_1/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn_1/Shape"
  op: "Shape"
  input: "conv16_1_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_1/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv16_1/bn_1/Shape"
  input: "conv16_1/bn_1/strided_slice/stack"
  input: "conv16_1/bn_1/strided_slice/stack_1"
  input: "conv16_1/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv16_1/bn_1/Shape_1"
  op: "Shape"
  input: "conv16_1_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_1/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv16_1/bn_1/Shape_1"
  input: "conv16_1/bn_1/strided_slice_1/stack"
  input: "conv16_1/bn_1/strided_slice_1/stack_1"
  input: "conv16_1/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv16_1/bn_1/Shape_2"
  op: "Shape"
  input: "conv16_1_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_1/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv16_1/bn_1/Shape_2"
  input: "conv16_1/bn_1/strided_slice_2/stack"
  input: "conv16_1/bn_1/strided_slice_2/stack_1"
  input: "conv16_1/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv16_1/bn_1/Rank/packed"
  op: "Pack"
  input: "conv16_1/bn_1/strided_slice"
  input: "conv16_1/bn_1/strided_slice_1"
  input: "conv16_1/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv16_1/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/range"
  op: "Range"
  input: "conv16_1/bn_1/range/start"
  input: "conv16_1/bn_1/Rank"
  input: "conv16_1/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_1/bn_1/Prod/input"
  op: "Pack"
  input: "conv16_1/bn_1/strided_slice"
  input: "conv16_1/bn_1/strided_slice_1"
  input: "conv16_1/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv16_1/bn_1/Prod"
  op: "Prod"
  input: "conv16_1/bn_1/Prod/input"
  input: "conv16_1/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_1/bn_1/Cast"
  op: "Cast"
  input: "conv16_1/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_1/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/sub"
  op: "Sub"
  input: "conv16_1/bn_1/Cast"
  input: "conv16_1/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1/bn_1/truediv"
  op: "RealDiv"
  input: "conv16_1/bn_1/Cast"
  input: "conv16_1/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1/bn_1/mul"
  op: "Mul"
  input: "conv16_1/bn_1/FusedBatchNorm:2"
  input: "conv16_1/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv16_1/bn_1/moving_mean/biased"
  input: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv16_1/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv16_1/bn_1/moving_mean/local_step"
  input: "conv16_1/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv16_1/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv16_1/bn_1/moving_mean/biased/read"
  input: "conv16_1/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/sub"
  input: "conv16_1/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/conv16_1/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv16_1/bn_1/moving_mean/biased"
  input: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv16_1/bn_1/moving_mean/local_step"
  input: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv16_1/bn_1/moving_mean/biased"
  input: "^conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/AssignAdd"
  input: "^conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/conv16_1/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/AssignAdd"
  input: "^conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/conv16_1/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/sub_1/x"
  input: "conv16_1/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv16_1/bn_1/moving_mean/local_step"
  input: "^conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/AssignAdd"
  input: "^conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/conv16_1/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/sub_1"
  input: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/AssignAdd"
  input: "^conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/conv16_1/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/sub_2/x"
  input: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/read"
  input: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv16_1/bn_1/moving_mean/read"
  input: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv16_1/bn_1/moving_mean"
  input: "conv16_1/bn_1/AssignMovingAvg/conv16_1/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv16_1/bn_1/moving_variance/biased"
  input: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv16_1/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv16_1/bn_1/moving_variance/local_step"
  input: "conv16_1/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_1/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv16_1/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv16_1/bn_1/moving_variance/biased/read"
  input: "conv16_1/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/sub"
  input: "conv16_1/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/conv16_1/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv16_1/bn_1/moving_variance/biased"
  input: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv16_1/bn_1/moving_variance/local_step"
  input: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv16_1/bn_1/moving_variance/biased"
  input: "^conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/AssignAdd"
  input: "^conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/conv16_1/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/AssignAdd"
  input: "^conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/conv16_1/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/sub_1/x"
  input: "conv16_1/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv16_1/bn_1/moving_variance/local_step"
  input: "^conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/AssignAdd"
  input: "^conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/conv16_1/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/sub_1"
  input: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/AssignAdd"
  input: "^conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/conv16_1/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/sub_2/x"
  input: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/read"
  input: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv16_1/bn_1/moving_variance/read"
  input: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_1/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv16_1/bn_1/moving_variance"
  input: "conv16_1/bn_1/AssignMovingAvg_1/conv16_1/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_1/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv16_1_1/convolution"
  input: "conv16_1/bn_1/gamma/read"
  input: "conv16_1/bn_1/beta/read"
  input: "conv16_1/bn_1/moving_mean/read"
  input: "conv16_1/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "relu_conv8_1_1/Relu"
  op: "Relu"
  input: "conv16_1/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv8_padding_1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv8_padding_1/Pad"
  op: "Pad"
  input: "relu_conv8_1_1/Relu"
  input: "conv8_padding_1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_2_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "conv16_2_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04736863449215889
      }
    }
  }
}
node {
  name: "conv16_2_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv16_2_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7937159
    }
  }
}
node {
  name: "conv16_2_1/truncated_normal/mul"
  op: "Mul"
  input: "conv16_2_1/truncated_normal/TruncatedNormal"
  input: "conv16_2_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_1/truncated_normal"
  op: "Add"
  input: "conv16_2_1/truncated_normal/mul"
  input: "conv16_2_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2_1/kernel/Assign"
  op: "Assign"
  input: "conv16_2_1/kernel"
  input: "conv16_2_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2_1/kernel/read"
  op: "Identity"
  input: "conv16_2_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_1/kernel"
      }
    }
  }
}
node {
  name: "conv16_2_1/weight_regularizer/Square"
  op: "Square"
  input: "conv16_2_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv16_2_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv16_2_1/weight_regularizer/mul/x"
  input: "conv16_2_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_2_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv16_2_1/weight_regularizer/mul"
  input: "conv16_2_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2_1/weight_regularizer/add"
  op: "Add"
  input: "conv16_2_1/weight_regularizer/add/x"
  input: "conv16_2_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_2_1/convolution"
  op: "Conv2D"
  input: "conv8_padding_1/Pad"
  input: "conv16_2_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv16_2/bn_1/gamma"
  input: "conv16_2/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn_1/gamma/read"
  op: "Identity"
  input: "conv16_2/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/bn_1/beta/Assign"
  op: "Assign"
  input: "conv16_2/bn_1/beta"
  input: "conv16_2/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn_1/beta/read"
  op: "Identity"
  input: "conv16_2/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv16_2/bn_1/moving_mean"
  input: "conv16_2/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv16_2/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv16_2/bn_1/moving_variance"
  input: "conv16_2/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv16_2/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv16_2_1/convolution"
  input: "conv16_2/bn_1/gamma/read"
  input: "conv16_2/bn_1/beta/read"
  input: "conv16_2/bn_1/Const_4"
  input: "conv16_2/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn_1/Shape"
  op: "Shape"
  input: "conv16_2_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_2/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv16_2/bn_1/Shape"
  input: "conv16_2/bn_1/strided_slice/stack"
  input: "conv16_2/bn_1/strided_slice/stack_1"
  input: "conv16_2/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv16_2/bn_1/Shape_1"
  op: "Shape"
  input: "conv16_2_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_2/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv16_2/bn_1/Shape_1"
  input: "conv16_2/bn_1/strided_slice_1/stack"
  input: "conv16_2/bn_1/strided_slice_1/stack_1"
  input: "conv16_2/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv16_2/bn_1/Shape_2"
  op: "Shape"
  input: "conv16_2_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_2/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv16_2/bn_1/Shape_2"
  input: "conv16_2/bn_1/strided_slice_2/stack"
  input: "conv16_2/bn_1/strided_slice_2/stack_1"
  input: "conv16_2/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv16_2/bn_1/Rank/packed"
  op: "Pack"
  input: "conv16_2/bn_1/strided_slice"
  input: "conv16_2/bn_1/strided_slice_1"
  input: "conv16_2/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv16_2/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/range"
  op: "Range"
  input: "conv16_2/bn_1/range/start"
  input: "conv16_2/bn_1/Rank"
  input: "conv16_2/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_2/bn_1/Prod/input"
  op: "Pack"
  input: "conv16_2/bn_1/strided_slice"
  input: "conv16_2/bn_1/strided_slice_1"
  input: "conv16_2/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv16_2/bn_1/Prod"
  op: "Prod"
  input: "conv16_2/bn_1/Prod/input"
  input: "conv16_2/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2/bn_1/Cast"
  op: "Cast"
  input: "conv16_2/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv16_2/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/sub"
  op: "Sub"
  input: "conv16_2/bn_1/Cast"
  input: "conv16_2/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2/bn_1/truediv"
  op: "RealDiv"
  input: "conv16_2/bn_1/Cast"
  input: "conv16_2/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2/bn_1/mul"
  op: "Mul"
  input: "conv16_2/bn_1/FusedBatchNorm:2"
  input: "conv16_2/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv16_2/bn_1/moving_mean/biased"
  input: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv16_2/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv16_2/bn_1/moving_mean/local_step"
  input: "conv16_2/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv16_2/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv16_2/bn_1/moving_mean/biased/read"
  input: "conv16_2/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/sub"
  input: "conv16_2/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/conv16_2/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv16_2/bn_1/moving_mean/biased"
  input: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv16_2/bn_1/moving_mean/local_step"
  input: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv16_2/bn_1/moving_mean/biased"
  input: "^conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/AssignAdd"
  input: "^conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/conv16_2/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/AssignAdd"
  input: "^conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/conv16_2/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/sub_1/x"
  input: "conv16_2/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv16_2/bn_1/moving_mean/local_step"
  input: "^conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/AssignAdd"
  input: "^conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/conv16_2/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/sub_1"
  input: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/AssignAdd"
  input: "^conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/conv16_2/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/sub_2/x"
  input: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/read"
  input: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv16_2/bn_1/moving_mean/read"
  input: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv16_2/bn_1/moving_mean"
  input: "conv16_2/bn_1/AssignMovingAvg/conv16_2/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv16_2/bn_1/moving_variance/biased"
  input: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv16_2/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv16_2/bn_1/moving_variance/local_step"
  input: "conv16_2/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv16_2/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv16_2/bn_1/moving_variance/biased/read"
  input: "conv16_2/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/sub"
  input: "conv16_2/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/conv16_2/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv16_2/bn_1/moving_variance/biased"
  input: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv16_2/bn_1/moving_variance/local_step"
  input: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv16_2/bn_1/moving_variance/biased"
  input: "^conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/AssignAdd"
  input: "^conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/conv16_2/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/AssignAdd"
  input: "^conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/conv16_2/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/sub_1/x"
  input: "conv16_2/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv16_2/bn_1/moving_variance/local_step"
  input: "^conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/AssignAdd"
  input: "^conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/conv16_2/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/sub_1"
  input: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/AssignAdd"
  input: "^conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/conv16_2/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/sub_2/x"
  input: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/read"
  input: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv16_2/bn_1/moving_variance/read"
  input: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv16_2/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv16_2/bn_1/moving_variance"
  input: "conv16_2/bn_1/AssignMovingAvg_1/conv16_2/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv16_2_1/convolution"
  input: "conv16_2/bn_1/gamma/read"
  input: "conv16_2/bn_1/beta/read"
  input: "conv16_2/bn_1/moving_mean/read"
  input: "conv16_2/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "relu_conv8_2_1/Relu"
  op: "Relu"
  input: "conv16_2/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_1_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_1_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10048405081033707
      }
    }
  }
}
node {
  name: "conv17_1_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv17_1_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7423737
    }
  }
}
node {
  name: "conv17_1_1/truncated_normal/mul"
  op: "Mul"
  input: "conv17_1_1/truncated_normal/TruncatedNormal"
  input: "conv17_1_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1_1/truncated_normal"
  op: "Add"
  input: "conv17_1_1/truncated_normal/mul"
  input: "conv17_1_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1_1/kernel/Assign"
  op: "Assign"
  input: "conv17_1_1/kernel"
  input: "conv17_1_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1_1/kernel/read"
  op: "Identity"
  input: "conv17_1_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1_1/kernel"
      }
    }
  }
}
node {
  name: "conv17_1_1/weight_regularizer/Square"
  op: "Square"
  input: "conv17_1_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv17_1_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv17_1_1/weight_regularizer/mul/x"
  input: "conv17_1_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_1_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv17_1_1/weight_regularizer/mul"
  input: "conv17_1_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_1_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_1_1/weight_regularizer/add"
  op: "Add"
  input: "conv17_1_1/weight_regularizer/add/x"
  input: "conv17_1_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_1_1/convolution"
  op: "Conv2D"
  input: "relu_conv8_2_1/Relu"
  input: "conv17_1_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv17_1/bn_1/gamma"
  input: "conv17_1/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn_1/gamma/read"
  op: "Identity"
  input: "conv17_1/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/bn_1/beta/Assign"
  op: "Assign"
  input: "conv17_1/bn_1/beta"
  input: "conv17_1/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn_1/beta/read"
  op: "Identity"
  input: "conv17_1/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv17_1/bn_1/moving_mean"
  input: "conv17_1/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv17_1/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv17_1/bn_1/moving_variance"
  input: "conv17_1/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv17_1/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv17_1_1/convolution"
  input: "conv17_1/bn_1/gamma/read"
  input: "conv17_1/bn_1/beta/read"
  input: "conv17_1/bn_1/Const_4"
  input: "conv17_1/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn_1/Shape"
  op: "Shape"
  input: "conv17_1_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_1/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv17_1/bn_1/Shape"
  input: "conv17_1/bn_1/strided_slice/stack"
  input: "conv17_1/bn_1/strided_slice/stack_1"
  input: "conv17_1/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv17_1/bn_1/Shape_1"
  op: "Shape"
  input: "conv17_1_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_1/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv17_1/bn_1/Shape_1"
  input: "conv17_1/bn_1/strided_slice_1/stack"
  input: "conv17_1/bn_1/strided_slice_1/stack_1"
  input: "conv17_1/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv17_1/bn_1/Shape_2"
  op: "Shape"
  input: "conv17_1_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_1/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv17_1/bn_1/Shape_2"
  input: "conv17_1/bn_1/strided_slice_2/stack"
  input: "conv17_1/bn_1/strided_slice_2/stack_1"
  input: "conv17_1/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv17_1/bn_1/Rank/packed"
  op: "Pack"
  input: "conv17_1/bn_1/strided_slice"
  input: "conv17_1/bn_1/strided_slice_1"
  input: "conv17_1/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv17_1/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/range"
  op: "Range"
  input: "conv17_1/bn_1/range/start"
  input: "conv17_1/bn_1/Rank"
  input: "conv17_1/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_1/bn_1/Prod/input"
  op: "Pack"
  input: "conv17_1/bn_1/strided_slice"
  input: "conv17_1/bn_1/strided_slice_1"
  input: "conv17_1/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv17_1/bn_1/Prod"
  op: "Prod"
  input: "conv17_1/bn_1/Prod/input"
  input: "conv17_1/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_1/bn_1/Cast"
  op: "Cast"
  input: "conv17_1/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_1/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/sub"
  op: "Sub"
  input: "conv17_1/bn_1/Cast"
  input: "conv17_1/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1/bn_1/truediv"
  op: "RealDiv"
  input: "conv17_1/bn_1/Cast"
  input: "conv17_1/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1/bn_1/mul"
  op: "Mul"
  input: "conv17_1/bn_1/FusedBatchNorm:2"
  input: "conv17_1/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv17_1/bn_1/moving_mean/biased"
  input: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv17_1/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv17_1/bn_1/moving_mean/local_step"
  input: "conv17_1/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv17_1/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv17_1/bn_1/moving_mean/biased/read"
  input: "conv17_1/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/sub"
  input: "conv17_1/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/conv17_1/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv17_1/bn_1/moving_mean/biased"
  input: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv17_1/bn_1/moving_mean/local_step"
  input: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv17_1/bn_1/moving_mean/biased"
  input: "^conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/AssignAdd"
  input: "^conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/conv17_1/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/AssignAdd"
  input: "^conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/conv17_1/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/sub_1/x"
  input: "conv17_1/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv17_1/bn_1/moving_mean/local_step"
  input: "^conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/AssignAdd"
  input: "^conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/conv17_1/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/sub_1"
  input: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/AssignAdd"
  input: "^conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/conv17_1/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/sub_2/x"
  input: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/read"
  input: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv17_1/bn_1/moving_mean/read"
  input: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv17_1/bn_1/moving_mean"
  input: "conv17_1/bn_1/AssignMovingAvg/conv17_1/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv17_1/bn_1/moving_variance/biased"
  input: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv17_1/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv17_1/bn_1/moving_variance/local_step"
  input: "conv17_1/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_1/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv17_1/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv17_1/bn_1/moving_variance/biased/read"
  input: "conv17_1/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/sub"
  input: "conv17_1/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/conv17_1/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv17_1/bn_1/moving_variance/biased"
  input: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv17_1/bn_1/moving_variance/local_step"
  input: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv17_1/bn_1/moving_variance/biased"
  input: "^conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/AssignAdd"
  input: "^conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/conv17_1/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/AssignAdd"
  input: "^conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/conv17_1/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/sub_1/x"
  input: "conv17_1/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv17_1/bn_1/moving_variance/local_step"
  input: "^conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/AssignAdd"
  input: "^conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/conv17_1/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/sub_1"
  input: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/AssignAdd"
  input: "^conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/conv17_1/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/sub_2/x"
  input: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/read"
  input: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv17_1/bn_1/moving_variance/read"
  input: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_1/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv17_1/bn_1/moving_variance"
  input: "conv17_1/bn_1/AssignMovingAvg_1/conv17_1/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_1/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv17_1_1/convolution"
  input: "conv17_1/bn_1/gamma/read"
  input: "conv17_1/bn_1/beta/read"
  input: "conv17_1/bn_1/moving_mean/read"
  input: "conv17_1/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "relu_conv9_1_1/Relu"
  op: "Relu"
  input: "conv17_1/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv9_padding_1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "conv9_padding_1/Pad"
  op: "Pad"
  input: "relu_conv9_1_1/Relu"
  input: "conv9_padding_1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_2_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06698936223983765
      }
    }
  }
}
node {
  name: "conv17_2_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv17_2_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9323232
    }
  }
}
node {
  name: "conv17_2_1/truncated_normal/mul"
  op: "Mul"
  input: "conv17_2_1/truncated_normal/TruncatedNormal"
  input: "conv17_2_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_1/truncated_normal"
  op: "Add"
  input: "conv17_2_1/truncated_normal/mul"
  input: "conv17_2_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2_1/kernel/Assign"
  op: "Assign"
  input: "conv17_2_1/kernel"
  input: "conv17_2_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2_1/kernel/read"
  op: "Identity"
  input: "conv17_2_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_1/kernel"
      }
    }
  }
}
node {
  name: "conv17_2_1/weight_regularizer/Square"
  op: "Square"
  input: "conv17_2_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv17_2_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv17_2_1/weight_regularizer/mul/x"
  input: "conv17_2_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv17_2_1/weight_regularizer/mul"
  input: "conv17_2_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2_1/weight_regularizer/add"
  op: "Add"
  input: "conv17_2_1/weight_regularizer/add/x"
  input: "conv17_2_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2_1/convolution"
  op: "Conv2D"
  input: "conv9_padding_1/Pad"
  input: "conv17_2_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/gamma"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/bn_1/gamma/Assign"
  op: "Assign"
  input: "conv17_2/bn_1/gamma"
  input: "conv17_2/bn_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn_1/gamma/read"
  op: "Identity"
  input: "conv17_2/bn_1/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/gamma"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/beta"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/bn_1/beta/Assign"
  op: "Assign"
  input: "conv17_2/bn_1/beta"
  input: "conv17_2/bn_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn_1/beta/read"
  op: "Identity"
  input: "conv17_2/bn_1/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/beta"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_mean"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_mean/Assign"
  op: "Assign"
  input: "conv17_2/bn_1/moving_mean"
  input: "conv17_2/bn_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv17_2/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_variance"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_variance/Assign"
  op: "Assign"
  input: "conv17_2/bn_1/moving_variance"
  input: "conv17_2/bn_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv17_2/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "conv17_2_1/convolution"
  input: "conv17_2/bn_1/gamma/read"
  input: "conv17_2/bn_1/beta/read"
  input: "conv17_2/bn_1/Const_4"
  input: "conv17_2/bn_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn_1/Shape"
  op: "Shape"
  input: "conv17_2_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_2/bn_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/strided_slice"
  op: "StridedSlice"
  input: "conv17_2/bn_1/Shape"
  input: "conv17_2/bn_1/strided_slice/stack"
  input: "conv17_2/bn_1/strided_slice/stack_1"
  input: "conv17_2/bn_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv17_2/bn_1/Shape_1"
  op: "Shape"
  input: "conv17_2_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_2/bn_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/strided_slice_1"
  op: "StridedSlice"
  input: "conv17_2/bn_1/Shape_1"
  input: "conv17_2/bn_1/strided_slice_1/stack"
  input: "conv17_2/bn_1/strided_slice_1/stack_1"
  input: "conv17_2/bn_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv17_2/bn_1/Shape_2"
  op: "Shape"
  input: "conv17_2_1/convolution"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_2/bn_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/strided_slice_2"
  op: "StridedSlice"
  input: "conv17_2/bn_1/Shape_2"
  input: "conv17_2/bn_1/strided_slice_2/stack"
  input: "conv17_2/bn_1/strided_slice_2/stack_1"
  input: "conv17_2/bn_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv17_2/bn_1/Rank/packed"
  op: "Pack"
  input: "conv17_2/bn_1/strided_slice"
  input: "conv17_2/bn_1/strided_slice_1"
  input: "conv17_2/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv17_2/bn_1/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/range"
  op: "Range"
  input: "conv17_2/bn_1/range/start"
  input: "conv17_2/bn_1/Rank"
  input: "conv17_2/bn_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_2/bn_1/Prod/input"
  op: "Pack"
  input: "conv17_2/bn_1/strided_slice"
  input: "conv17_2/bn_1/strided_slice_1"
  input: "conv17_2/bn_1/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv17_2/bn_1/Prod"
  op: "Prod"
  input: "conv17_2/bn_1/Prod/input"
  input: "conv17_2/bn_1/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2/bn_1/Cast"
  op: "Cast"
  input: "conv17_2/bn_1/Prod"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv17_2/bn_1/sub/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000100135803223
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/sub"
  op: "Sub"
  input: "conv17_2/bn_1/Cast"
  input: "conv17_2/bn_1/sub/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2/bn_1/truediv"
  op: "RealDiv"
  input: "conv17_2/bn_1/Cast"
  input: "conv17_2/bn_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2/bn_1/mul"
  op: "Mul"
  input: "conv17_2/bn_1/FusedBatchNorm:2"
  input: "conv17_2/bn_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_mean/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_mean/biased/Assign"
  op: "Assign"
  input: "conv17_2/bn_1/moving_mean/biased"
  input: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_mean/biased/read"
  op: "Identity"
  input: "conv17_2/bn_1/moving_mean/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_mean/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_mean/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_mean/local_step/Assign"
  op: "Assign"
  input: "conv17_2/bn_1/moving_mean/local_step"
  input: "conv17_2/bn_1/moving_mean/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_mean/local_step/read"
  op: "Identity"
  input: "conv17_2/bn_1/moving_mean/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/sub"
  op: "Sub"
  input: "conv17_2/bn_1/moving_mean/biased/read"
  input: "conv17_2/bn_1/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/mul"
  op: "Mul"
  input: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/sub"
  input: "conv17_2/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/conv17_2/bn_1/moving_mean"
  op: "AssignSub"
  input: "conv17_2/bn_1/moving_mean/biased"
  input: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/AssignAdd"
  op: "AssignAdd"
  input: "conv17_2/bn_1/moving_mean/local_step"
  input: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/read"
  op: "Identity"
  input: "conv17_2/bn_1/moving_mean/biased"
  input: "^conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/AssignAdd"
  input: "^conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/conv17_2/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/sub_1/x"
  op: "Const"
  input: "^conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/AssignAdd"
  input: "^conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/conv17_2/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/sub_1"
  op: "Sub"
  input: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/sub_1/x"
  input: "conv17_2/bn_1/AssignMovingAvg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/read_1"
  op: "Identity"
  input: "conv17_2/bn_1/moving_mean/local_step"
  input: "^conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/AssignAdd"
  input: "^conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/conv17_2/bn_1/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/Pow"
  op: "Pow"
  input: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/sub_1"
  input: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/sub_2/x"
  op: "Const"
  input: "^conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/AssignAdd"
  input: "^conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/conv17_2/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/sub_2"
  op: "Sub"
  input: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/sub_2/x"
  input: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/truediv"
  op: "RealDiv"
  input: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/read"
  input: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/sub_3"
  op: "Sub"
  input: "conv17_2/bn_1/moving_mean/read"
  input: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg"
  op: "AssignSub"
  input: "conv17_2/bn_1/moving_mean"
  input: "conv17_2/bn_1/AssignMovingAvg/conv17_2/bn_1/moving_mean/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1/decay"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_variance/biased"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_variance/biased/Assign"
  op: "Assign"
  input: "conv17_2/bn_1/moving_variance/biased"
  input: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_variance/biased/read"
  op: "Identity"
  input: "conv17_2/bn_1/moving_variance/biased"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_variance/local_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_variance/local_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_variance/local_step/Assign"
  op: "Assign"
  input: "conv17_2/bn_1/moving_variance/local_step"
  input: "conv17_2/bn_1/moving_variance/local_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2/bn_1/moving_variance/local_step/read"
  op: "Identity"
  input: "conv17_2/bn_1/moving_variance/local_step"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/sub"
  op: "Sub"
  input: "conv17_2/bn_1/moving_variance/biased/read"
  input: "conv17_2/bn_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/mul"
  op: "Mul"
  input: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/sub"
  input: "conv17_2/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/conv17_2/bn_1/moving_variance"
  op: "AssignSub"
  input: "conv17_2/bn_1/moving_variance/biased"
  input: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/AssignAdd/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/AssignAdd"
  op: "AssignAdd"
  input: "conv17_2/bn_1/moving_variance/local_step"
  input: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/read"
  op: "Identity"
  input: "conv17_2/bn_1/moving_variance/biased"
  input: "^conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/AssignAdd"
  input: "^conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/conv17_2/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/sub_1/x"
  op: "Const"
  input: "^conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/AssignAdd"
  input: "^conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/conv17_2/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/sub_1"
  op: "Sub"
  input: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/sub_1/x"
  input: "conv17_2/bn_1/AssignMovingAvg_1/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/read_1"
  op: "Identity"
  input: "conv17_2/bn_1/moving_variance/local_step"
  input: "^conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/AssignAdd"
  input: "^conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/conv17_2/bn_1/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/Pow"
  op: "Pow"
  input: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/sub_1"
  input: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/read_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/sub_2/x"
  op: "Const"
  input: "^conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/AssignAdd"
  input: "^conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/conv17_2/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/sub_2"
  op: "Sub"
  input: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/sub_2/x"
  input: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/truediv"
  op: "RealDiv"
  input: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/read"
  input: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/sub_3"
  op: "Sub"
  input: "conv17_2/bn_1/moving_variance/read"
  input: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
}
node {
  name: "conv17_2/bn_1/AssignMovingAvg_1"
  op: "AssignSub"
  input: "conv17_2/bn_1/moving_variance"
  input: "conv17_2/bn_1/AssignMovingAvg_1/conv17_2/bn_1/moving_variance/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2/bn_1/FusedBatchNorm_1"
  op: "FusedBatchNorm"
  input: "conv17_2_1/convolution"
  input: "conv17_2/bn_1/gamma/read"
  input: "conv17_2/bn_1/beta/read"
  input: "conv17_2/bn_1/moving_mean/read"
  input: "conv17_2/bn_1/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 1.0009999641624745e-05
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "relu_conv9_2_1/Relu"
  op: "Relu"
  input: "conv17_2/bn_1/FusedBatchNorm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_conf_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\034\000\000\000"
      }
    }
  }
}
node {
  name: "conv11_mbox_conf_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11_mbox_conf_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07105295360088348
      }
    }
  }
}
node {
  name: "conv11_mbox_conf_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv11_mbox_conf_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5979114
    }
  }
}
node {
  name: "conv11_mbox_conf_1/truncated_normal/mul"
  op: "Mul"
  input: "conv11_mbox_conf_1/truncated_normal/TruncatedNormal"
  input: "conv11_mbox_conf_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_conf_1/truncated_normal"
  op: "Add"
  input: "conv11_mbox_conf_1/truncated_normal/mul"
  input: "conv11_mbox_conf_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_conf_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 28
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11_mbox_conf_1/kernel/Assign"
  op: "Assign"
  input: "conv11_mbox_conf_1/kernel"
  input: "conv11_mbox_conf_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11_mbox_conf_1/kernel/read"
  op: "Identity"
  input: "conv11_mbox_conf_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_conf_1/kernel"
      }
    }
  }
}
node {
  name: "conv11_mbox_conf_1/weight_regularizer/Square"
  op: "Square"
  input: "conv11_mbox_conf_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_conf_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv11_mbox_conf_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv11_mbox_conf_1/weight_regularizer/mul/x"
  input: "conv11_mbox_conf_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_conf_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv11_mbox_conf_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv11_mbox_conf_1/weight_regularizer/mul"
  input: "conv11_mbox_conf_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv11_mbox_conf_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11_mbox_conf_1/weight_regularizer/add"
  op: "Add"
  input: "conv11_mbox_conf_1/weight_regularizer/add/x"
  input: "conv11_mbox_conf_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_conf_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 28
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11_mbox_conf_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 28
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11_mbox_conf_1/bias/Assign"
  op: "Assign"
  input: "conv11_mbox_conf_1/bias"
  input: "conv11_mbox_conf_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11_mbox_conf_1/bias/read"
  op: "Identity"
  input: "conv11_mbox_conf_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_conf_1/bias"
      }
    }
  }
}
node {
  name: "conv11_mbox_conf_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv11_mbox_conf_1/convolution"
  op: "Conv2D"
  input: "activation_50/Relu"
  input: "conv11_mbox_conf_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv11_mbox_conf_1/BiasAdd"
  op: "BiasAdd"
  input: "conv11_mbox_conf_1/convolution"
  input: "conv11_mbox_conf_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv13_mbox_conf_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "conv13_mbox_conf_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13_mbox_conf_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "conv13_mbox_conf_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv13_mbox_conf_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1112158
    }
  }
}
node {
  name: "conv13_mbox_conf_1/truncated_normal/mul"
  op: "Mul"
  input: "conv13_mbox_conf_1/truncated_normal/TruncatedNormal"
  input: "conv13_mbox_conf_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_conf_1/truncated_normal"
  op: "Add"
  input: "conv13_mbox_conf_1/truncated_normal/mul"
  input: "conv13_mbox_conf_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_conf_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13_mbox_conf_1/kernel/Assign"
  op: "Assign"
  input: "conv13_mbox_conf_1/kernel"
  input: "conv13_mbox_conf_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13_mbox_conf_1/kernel/read"
  op: "Identity"
  input: "conv13_mbox_conf_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_conf_1/kernel"
      }
    }
  }
}
node {
  name: "conv13_mbox_conf_1/weight_regularizer/Square"
  op: "Square"
  input: "conv13_mbox_conf_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_conf_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv13_mbox_conf_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv13_mbox_conf_1/weight_regularizer/mul/x"
  input: "conv13_mbox_conf_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_conf_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv13_mbox_conf_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv13_mbox_conf_1/weight_regularizer/mul"
  input: "conv13_mbox_conf_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv13_mbox_conf_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13_mbox_conf_1/weight_regularizer/add"
  op: "Add"
  input: "conv13_mbox_conf_1/weight_regularizer/add/x"
  input: "conv13_mbox_conf_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_conf_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 42
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13_mbox_conf_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13_mbox_conf_1/bias/Assign"
  op: "Assign"
  input: "conv13_mbox_conf_1/bias"
  input: "conv13_mbox_conf_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13_mbox_conf_1/bias/read"
  op: "Identity"
  input: "conv13_mbox_conf_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_conf_1/bias"
      }
    }
  }
}
node {
  name: "conv13_mbox_conf_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv13_mbox_conf_1/convolution"
  op: "Conv2D"
  input: "activation_54/Relu"
  input: "conv13_mbox_conf_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv13_mbox_conf_1/BiasAdd"
  op: "BiasAdd"
  input: "conv13_mbox_conf_1/convolution"
  input: "conv13_mbox_conf_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07105295360088348
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv14_2_mbox_conf_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9794833
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/truncated_normal/mul"
  op: "Mul"
  input: "conv14_2_mbox_conf_1/truncated_normal/TruncatedNormal"
  input: "conv14_2_mbox_conf_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/truncated_normal"
  op: "Add"
  input: "conv14_2_mbox_conf_1/truncated_normal/mul"
  input: "conv14_2_mbox_conf_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/kernel/Assign"
  op: "Assign"
  input: "conv14_2_mbox_conf_1/kernel"
  input: "conv14_2_mbox_conf_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/kernel/read"
  op: "Identity"
  input: "conv14_2_mbox_conf_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_conf_1/kernel"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/weight_regularizer/Square"
  op: "Square"
  input: "conv14_2_mbox_conf_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv14_2_mbox_conf_1/weight_regularizer/mul/x"
  input: "conv14_2_mbox_conf_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv14_2_mbox_conf_1/weight_regularizer/mul"
  input: "conv14_2_mbox_conf_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/weight_regularizer/add"
  op: "Add"
  input: "conv14_2_mbox_conf_1/weight_regularizer/add/x"
  input: "conv14_2_mbox_conf_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 42
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/bias/Assign"
  op: "Assign"
  input: "conv14_2_mbox_conf_1/bias"
  input: "conv14_2_mbox_conf_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/bias/read"
  op: "Identity"
  input: "conv14_2_mbox_conf_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_conf_1/bias"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/convolution"
  op: "Conv2D"
  input: "relu_conv6_2_1/Relu"
  input: "conv14_2_mbox_conf_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2_mbox_conf_1/BiasAdd"
  op: "BiasAdd"
  input: "conv14_2_mbox_conf_1/convolution"
  input: "conv14_2_mbox_conf_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000*\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10048405081033707
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv15_2_mbox_conf_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 234901
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/truncated_normal/mul"
  op: "Mul"
  input: "conv15_2_mbox_conf_1/truncated_normal/TruncatedNormal"
  input: "conv15_2_mbox_conf_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/truncated_normal"
  op: "Add"
  input: "conv15_2_mbox_conf_1/truncated_normal/mul"
  input: "conv15_2_mbox_conf_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/kernel/Assign"
  op: "Assign"
  input: "conv15_2_mbox_conf_1/kernel"
  input: "conv15_2_mbox_conf_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/kernel/read"
  op: "Identity"
  input: "conv15_2_mbox_conf_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_conf_1/kernel"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/weight_regularizer/Square"
  op: "Square"
  input: "conv15_2_mbox_conf_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv15_2_mbox_conf_1/weight_regularizer/mul/x"
  input: "conv15_2_mbox_conf_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv15_2_mbox_conf_1/weight_regularizer/mul"
  input: "conv15_2_mbox_conf_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/weight_regularizer/add"
  op: "Add"
  input: "conv15_2_mbox_conf_1/weight_regularizer/add/x"
  input: "conv15_2_mbox_conf_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 42
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 42
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/bias/Assign"
  op: "Assign"
  input: "conv15_2_mbox_conf_1/bias"
  input: "conv15_2_mbox_conf_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/bias/read"
  op: "Identity"
  input: "conv15_2_mbox_conf_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_conf_1/bias"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/convolution"
  op: "Conv2D"
  input: "relu_conv7_2_1/Relu"
  input: "conv15_2_mbox_conf_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2_mbox_conf_1/BiasAdd"
  op: "BiasAdd"
  input: "conv15_2_mbox_conf_1/convolution"
  input: "conv15_2_mbox_conf_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\034\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10048405081033707
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv16_2_mbox_conf_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 8736948
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/truncated_normal/mul"
  op: "Mul"
  input: "conv16_2_mbox_conf_1/truncated_normal/TruncatedNormal"
  input: "conv16_2_mbox_conf_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/truncated_normal"
  op: "Add"
  input: "conv16_2_mbox_conf_1/truncated_normal/mul"
  input: "conv16_2_mbox_conf_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 28
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/kernel/Assign"
  op: "Assign"
  input: "conv16_2_mbox_conf_1/kernel"
  input: "conv16_2_mbox_conf_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/kernel/read"
  op: "Identity"
  input: "conv16_2_mbox_conf_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_conf_1/kernel"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/weight_regularizer/Square"
  op: "Square"
  input: "conv16_2_mbox_conf_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv16_2_mbox_conf_1/weight_regularizer/mul/x"
  input: "conv16_2_mbox_conf_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv16_2_mbox_conf_1/weight_regularizer/mul"
  input: "conv16_2_mbox_conf_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/weight_regularizer/add"
  op: "Add"
  input: "conv16_2_mbox_conf_1/weight_regularizer/add/x"
  input: "conv16_2_mbox_conf_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 28
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 28
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/bias/Assign"
  op: "Assign"
  input: "conv16_2_mbox_conf_1/bias"
  input: "conv16_2_mbox_conf_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/bias/read"
  op: "Identity"
  input: "conv16_2_mbox_conf_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_conf_1/bias"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/convolution"
  op: "Conv2D"
  input: "relu_conv8_2_1/Relu"
  input: "conv16_2_mbox_conf_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2_mbox_conf_1/BiasAdd"
  op: "BiasAdd"
  input: "conv16_2_mbox_conf_1/convolution"
  input: "conv16_2_mbox_conf_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\034\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14210590720176697
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv17_2_mbox_conf_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9734836
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/truncated_normal/mul"
  op: "Mul"
  input: "conv17_2_mbox_conf_1/truncated_normal/TruncatedNormal"
  input: "conv17_2_mbox_conf_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/truncated_normal"
  op: "Add"
  input: "conv17_2_mbox_conf_1/truncated_normal/mul"
  input: "conv17_2_mbox_conf_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 28
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/kernel/Assign"
  op: "Assign"
  input: "conv17_2_mbox_conf_1/kernel"
  input: "conv17_2_mbox_conf_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/kernel/read"
  op: "Identity"
  input: "conv17_2_mbox_conf_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_conf_1/kernel"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/weight_regularizer/Square"
  op: "Square"
  input: "conv17_2_mbox_conf_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv17_2_mbox_conf_1/weight_regularizer/mul/x"
  input: "conv17_2_mbox_conf_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv17_2_mbox_conf_1/weight_regularizer/mul"
  input: "conv17_2_mbox_conf_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/weight_regularizer/add"
  op: "Add"
  input: "conv17_2_mbox_conf_1/weight_regularizer/add/x"
  input: "conv17_2_mbox_conf_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 28
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 28
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/bias/Assign"
  op: "Assign"
  input: "conv17_2_mbox_conf_1/bias"
  input: "conv17_2_mbox_conf_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/bias/read"
  op: "Identity"
  input: "conv17_2_mbox_conf_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_conf_1/bias"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/convolution"
  op: "Conv2D"
  input: "relu_conv9_2_1/Relu"
  input: "conv17_2_mbox_conf_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2_mbox_conf_1/BiasAdd"
  op: "BiasAdd"
  input: "conv17_2_mbox_conf_1/convolution"
  input: "conv17_2_mbox_conf_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv11_mbox_loc_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv11_mbox_loc_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11_mbox_loc_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07105295360088348
      }
    }
  }
}
node {
  name: "conv11_mbox_loc_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv11_mbox_loc_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3752170
    }
  }
}
node {
  name: "conv11_mbox_loc_1/truncated_normal/mul"
  op: "Mul"
  input: "conv11_mbox_loc_1/truncated_normal/TruncatedNormal"
  input: "conv11_mbox_loc_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_loc_1/truncated_normal"
  op: "Add"
  input: "conv11_mbox_loc_1/truncated_normal/mul"
  input: "conv11_mbox_loc_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_loc_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11_mbox_loc_1/kernel/Assign"
  op: "Assign"
  input: "conv11_mbox_loc_1/kernel"
  input: "conv11_mbox_loc_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11_mbox_loc_1/kernel/read"
  op: "Identity"
  input: "conv11_mbox_loc_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_loc_1/kernel"
      }
    }
  }
}
node {
  name: "conv11_mbox_loc_1/weight_regularizer/Square"
  op: "Square"
  input: "conv11_mbox_loc_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_loc_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv11_mbox_loc_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv11_mbox_loc_1/weight_regularizer/mul/x"
  input: "conv11_mbox_loc_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_loc_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv11_mbox_loc_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv11_mbox_loc_1/weight_regularizer/mul"
  input: "conv11_mbox_loc_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv11_mbox_loc_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11_mbox_loc_1/weight_regularizer/add"
  op: "Add"
  input: "conv11_mbox_loc_1/weight_regularizer/add/x"
  input: "conv11_mbox_loc_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv11_mbox_loc_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv11_mbox_loc_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv11_mbox_loc_1/bias/Assign"
  op: "Assign"
  input: "conv11_mbox_loc_1/bias"
  input: "conv11_mbox_loc_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv11_mbox_loc_1/bias/read"
  op: "Identity"
  input: "conv11_mbox_loc_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_loc_1/bias"
      }
    }
  }
}
node {
  name: "conv11_mbox_loc_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv11_mbox_loc_1/convolution"
  op: "Conv2D"
  input: "activation_50/Relu"
  input: "conv11_mbox_loc_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv11_mbox_loc_1/BiasAdd"
  op: "BiasAdd"
  input: "conv11_mbox_loc_1/convolution"
  input: "conv11_mbox_loc_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv13_mbox_loc_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\004\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "conv13_mbox_loc_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13_mbox_loc_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05024202540516853
      }
    }
  }
}
node {
  name: "conv13_mbox_loc_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv13_mbox_loc_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5599251
    }
  }
}
node {
  name: "conv13_mbox_loc_1/truncated_normal/mul"
  op: "Mul"
  input: "conv13_mbox_loc_1/truncated_normal/TruncatedNormal"
  input: "conv13_mbox_loc_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_loc_1/truncated_normal"
  op: "Add"
  input: "conv13_mbox_loc_1/truncated_normal/mul"
  input: "conv13_mbox_loc_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_loc_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13_mbox_loc_1/kernel/Assign"
  op: "Assign"
  input: "conv13_mbox_loc_1/kernel"
  input: "conv13_mbox_loc_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13_mbox_loc_1/kernel/read"
  op: "Identity"
  input: "conv13_mbox_loc_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_loc_1/kernel"
      }
    }
  }
}
node {
  name: "conv13_mbox_loc_1/weight_regularizer/Square"
  op: "Square"
  input: "conv13_mbox_loc_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_loc_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv13_mbox_loc_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv13_mbox_loc_1/weight_regularizer/mul/x"
  input: "conv13_mbox_loc_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_loc_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv13_mbox_loc_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv13_mbox_loc_1/weight_regularizer/mul"
  input: "conv13_mbox_loc_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv13_mbox_loc_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13_mbox_loc_1/weight_regularizer/add"
  op: "Add"
  input: "conv13_mbox_loc_1/weight_regularizer/add/x"
  input: "conv13_mbox_loc_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv13_mbox_loc_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv13_mbox_loc_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv13_mbox_loc_1/bias/Assign"
  op: "Assign"
  input: "conv13_mbox_loc_1/bias"
  input: "conv13_mbox_loc_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv13_mbox_loc_1/bias/read"
  op: "Identity"
  input: "conv13_mbox_loc_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_loc_1/bias"
      }
    }
  }
}
node {
  name: "conv13_mbox_loc_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv13_mbox_loc_1/convolution"
  op: "Conv2D"
  input: "activation_54/Relu"
  input: "conv13_mbox_loc_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv13_mbox_loc_1/BiasAdd"
  op: "BiasAdd"
  input: "conv13_mbox_loc_1/convolution"
  input: "conv13_mbox_loc_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\002\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07105295360088348
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv14_2_mbox_loc_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1703909
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/truncated_normal/mul"
  op: "Mul"
  input: "conv14_2_mbox_loc_1/truncated_normal/TruncatedNormal"
  input: "conv14_2_mbox_loc_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/truncated_normal"
  op: "Add"
  input: "conv14_2_mbox_loc_1/truncated_normal/mul"
  input: "conv14_2_mbox_loc_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/kernel/Assign"
  op: "Assign"
  input: "conv14_2_mbox_loc_1/kernel"
  input: "conv14_2_mbox_loc_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/kernel/read"
  op: "Identity"
  input: "conv14_2_mbox_loc_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_loc_1/kernel"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/weight_regularizer/Square"
  op: "Square"
  input: "conv14_2_mbox_loc_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv14_2_mbox_loc_1/weight_regularizer/mul/x"
  input: "conv14_2_mbox_loc_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv14_2_mbox_loc_1/weight_regularizer/mul"
  input: "conv14_2_mbox_loc_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/weight_regularizer/add"
  op: "Add"
  input: "conv14_2_mbox_loc_1/weight_regularizer/add/x"
  input: "conv14_2_mbox_loc_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/bias/Assign"
  op: "Assign"
  input: "conv14_2_mbox_loc_1/bias"
  input: "conv14_2_mbox_loc_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/bias/read"
  op: "Identity"
  input: "conv14_2_mbox_loc_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_loc_1/bias"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/convolution"
  op: "Conv2D"
  input: "relu_conv6_2_1/Relu"
  input: "conv14_2_mbox_loc_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv14_2_mbox_loc_1/BiasAdd"
  op: "BiasAdd"
  input: "conv14_2_mbox_loc_1/convolution"
  input: "conv14_2_mbox_loc_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10048405081033707
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv15_2_mbox_loc_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5601432
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/truncated_normal/mul"
  op: "Mul"
  input: "conv15_2_mbox_loc_1/truncated_normal/TruncatedNormal"
  input: "conv15_2_mbox_loc_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/truncated_normal"
  op: "Add"
  input: "conv15_2_mbox_loc_1/truncated_normal/mul"
  input: "conv15_2_mbox_loc_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/kernel/Assign"
  op: "Assign"
  input: "conv15_2_mbox_loc_1/kernel"
  input: "conv15_2_mbox_loc_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/kernel/read"
  op: "Identity"
  input: "conv15_2_mbox_loc_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_loc_1/kernel"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/weight_regularizer/Square"
  op: "Square"
  input: "conv15_2_mbox_loc_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv15_2_mbox_loc_1/weight_regularizer/mul/x"
  input: "conv15_2_mbox_loc_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv15_2_mbox_loc_1/weight_regularizer/mul"
  input: "conv15_2_mbox_loc_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/weight_regularizer/add"
  op: "Add"
  input: "conv15_2_mbox_loc_1/weight_regularizer/add/x"
  input: "conv15_2_mbox_loc_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/bias/Assign"
  op: "Assign"
  input: "conv15_2_mbox_loc_1/bias"
  input: "conv15_2_mbox_loc_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/bias/read"
  op: "Identity"
  input: "conv15_2_mbox_loc_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_loc_1/bias"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/convolution"
  op: "Conv2D"
  input: "relu_conv7_2_1/Relu"
  input: "conv15_2_mbox_loc_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv15_2_mbox_loc_1/BiasAdd"
  op: "BiasAdd"
  input: "conv15_2_mbox_loc_1/convolution"
  input: "conv15_2_mbox_loc_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\001\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10048405081033707
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv16_2_mbox_loc_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9953129
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/truncated_normal/mul"
  op: "Mul"
  input: "conv16_2_mbox_loc_1/truncated_normal/TruncatedNormal"
  input: "conv16_2_mbox_loc_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/truncated_normal"
  op: "Add"
  input: "conv16_2_mbox_loc_1/truncated_normal/mul"
  input: "conv16_2_mbox_loc_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/kernel/Assign"
  op: "Assign"
  input: "conv16_2_mbox_loc_1/kernel"
  input: "conv16_2_mbox_loc_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/kernel/read"
  op: "Identity"
  input: "conv16_2_mbox_loc_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_loc_1/kernel"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/weight_regularizer/Square"
  op: "Square"
  input: "conv16_2_mbox_loc_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv16_2_mbox_loc_1/weight_regularizer/mul/x"
  input: "conv16_2_mbox_loc_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv16_2_mbox_loc_1/weight_regularizer/mul"
  input: "conv16_2_mbox_loc_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/weight_regularizer/add"
  op: "Add"
  input: "conv16_2_mbox_loc_1/weight_regularizer/add/x"
  input: "conv16_2_mbox_loc_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/bias/Assign"
  op: "Assign"
  input: "conv16_2_mbox_loc_1/bias"
  input: "conv16_2_mbox_loc_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/bias/read"
  op: "Identity"
  input: "conv16_2_mbox_loc_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_loc_1/bias"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/convolution"
  op: "Conv2D"
  input: "relu_conv8_2_1/Relu"
  input: "conv16_2_mbox_loc_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv16_2_mbox_loc_1/BiasAdd"
  op: "BiasAdd"
  input: "conv16_2_mbox_loc_1/convolution"
  input: "conv16_2_mbox_loc_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.14210590720176697
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "conv17_2_mbox_loc_1/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3544844
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/truncated_normal/mul"
  op: "Mul"
  input: "conv17_2_mbox_loc_1/truncated_normal/TruncatedNormal"
  input: "conv17_2_mbox_loc_1/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/truncated_normal"
  op: "Add"
  input: "conv17_2_mbox_loc_1/truncated_normal/mul"
  input: "conv17_2_mbox_loc_1/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/kernel/Assign"
  op: "Assign"
  input: "conv17_2_mbox_loc_1/kernel"
  input: "conv17_2_mbox_loc_1/truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/kernel/read"
  op: "Identity"
  input: "conv17_2_mbox_loc_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_loc_1/kernel"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/weight_regularizer/Square"
  op: "Square"
  input: "conv17_2_mbox_loc_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/weight_regularizer/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0005000000237487257
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/weight_regularizer/mul"
  op: "Mul"
  input: "conv17_2_mbox_loc_1/weight_regularizer/mul/x"
  input: "conv17_2_mbox_loc_1/weight_regularizer/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/weight_regularizer/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/weight_regularizer/Sum"
  op: "Sum"
  input: "conv17_2_mbox_loc_1/weight_regularizer/mul"
  input: "conv17_2_mbox_loc_1/weight_regularizer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/weight_regularizer/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/weight_regularizer/add"
  op: "Add"
  input: "conv17_2_mbox_loc_1/weight_regularizer/add/x"
  input: "conv17_2_mbox_loc_1/weight_regularizer/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/bias/Assign"
  op: "Assign"
  input: "conv17_2_mbox_loc_1/bias"
  input: "conv17_2_mbox_loc_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/bias/read"
  op: "Identity"
  input: "conv17_2_mbox_loc_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_loc_1/bias"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/convolution"
  op: "Conv2D"
  input: "relu_conv9_2_1/Relu"
  input: "conv17_2_mbox_loc_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "conv17_2_mbox_loc_1/BiasAdd"
  op: "BiasAdd"
  input: "conv17_2_mbox_loc_1/convolution"
  input: "conv17_2_mbox_loc_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 19
          }
          dim {
            size: 19
          }
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\016tZ<\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>\016tZ<\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>\016tZ<\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>\016tZ<\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>\016tZ<\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>\n\327#=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>\n\327#=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>\n\327#=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>\n\327#=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\211\210\210=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\211\210\210=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\211\210\210=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\211\210\210=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\211\210\210=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\211\210\210=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\211\210\210=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\211\210\210=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\211\210\210=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\211\210\210=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\211\210\210=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\211\210\210=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\211\210\210=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\211\210\210=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\211\210\210=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\211\210\210=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\211\210\210=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\211\210\210=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\211\210\210=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\211\210\210=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\211\210\210=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\211\210\210=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\211\210\210=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\211\210\210=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\214%\277=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\214%\277=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=\214%\277=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=\214%\277=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=\214%\277=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>\214%\277=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\214%\277=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\214%\277=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\214%\277=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\214%\277=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\214%\277=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<\217\302\365=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\217\302\365=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\217\302\365=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\217\302\365=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\217\302\365=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\217\302\365=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\217\302\365=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\217\302\365=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\217\302\365=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\217\302\365=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\217\302\365=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\217\302\365=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\217\302\365=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\217\302\365=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\217\302\365=\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\217\302\365=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\217\302\365=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\217\302\365=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\217\302\365=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\217\302\365=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\217\302\365=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\217\302\365=\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\217\302\365=\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\217\302\365=\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\311/\026>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\311/\026>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\311/\026>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\311/\026>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\311/\026>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\311/\026>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>K~1>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>K~1>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>K~1>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>K~1>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\315\314L>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\315\314L>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\315\314L>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\315\314L>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\315\314L>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\315\314L>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\315\314L>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\315\314L>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\315\314L>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\315\314L>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>O\033h>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>O\033h>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>O\033h>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>O\033h>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\350\264\201>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\350\264\201>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\350\264\201>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\350\264\201>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\350\264\201>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\350\264\201>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>)\\\217>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>)\\\217>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>)\\\217>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>)\\\217>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>j\003\235>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>j\003\235>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>j\003\235>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>j\003\235>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\253\252\252>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\253\252\252>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\253\252\252>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\253\252\252>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>\253\252\252>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>\253\252\252>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>\253\252\252>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\253\252\252>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\253\252\252>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\253\252\252>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<\354Q\270>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\354Q\270>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\354Q\270>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\354Q\270>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\354Q\270>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\354Q\270>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\354Q\270>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\354Q\270>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\354Q\270>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\354Q\270>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\354Q\270>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\354Q\270>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\354Q\270>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\354Q\270>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\354Q\270>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\354Q\270>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\354Q\270>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\354Q\270>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\354Q\270>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\354Q\270>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\354Q\270>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\354Q\270>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\354Q\270>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\354Q\270>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<,\371\305>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>,\371\305>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>,\371\305>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>,\371\305>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>,\371\305>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>,\371\305>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>,\371\305>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>,\371\305>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>,\371\305>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>,\371\305>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252\252>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\354Q\270>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>,\371\305>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\256G\341>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\357\356\356>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>m\240\323>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>m\240\323>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>m\240\323>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>0\226\374>m\240\323>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\256G\341>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\256G\341>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\256G\341>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\256G\341>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\256G\341>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\256G\341>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\256G\341>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\256G\341>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\256G\341>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\256G\341>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\256G\341>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\256G\341>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\256G\341>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\256G\341>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\256G\341>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\256G\341>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\256G\341>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\256G\341>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\256G\341>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\256G\341>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\256G\341>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\256G\341>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\256G\341>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\256G\341>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<\357\356\356>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\357\356\356>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\357\356\356>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<\357\356\356>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\357\356\356>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\357\356\356>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=\357\356\356>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n~1>\357\356\356>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\357\356\356>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\357\356\356>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>\357\356\356>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\357\356\356>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\357\356\356>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\357\356\356>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>\357\356\356>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\357\356\356>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\357\356\356>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>\357\356\356>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033hj\003\235>\357\356\356>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\357\356\356>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>\357\356\356>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>\357\356\356>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\357\356\356>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>\357\356\356>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>mtZ<0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ<0\226\374>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#=0\226\374>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210=0\226\374>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277=0\226\374>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365=0\226\374>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\026>0\226\374>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>K~1>0\226\374>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314L>0\226\374>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033h>0\226\374>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\201>0\226\374>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>)\\\217>0\226\374>\303\320\220=\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>j\003\235>0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>jm\240\323>0\226\374>\315\314\314=\315\314\314=\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>0\226\374>\303\320\020>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>m\240\323>0\226\374>\303\320\020>\303\320\220=\315\314\314=\315\314\314=\315\314L>\315\314L>m
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_1/Shape"
  op: "Shape"
  input: "conv11_mbox_loc_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_1/strided_slice"
  op: "StridedSlice"
  input: "conv4_3_norm_mbox_priorbox_1/Shape"
  input: "conv4_3_norm_mbox_priorbox_1/strided_slice/stack"
  input: "conv4_3_norm_mbox_priorbox_1/strided_slice/stack_1"
  input: "conv4_3_norm_mbox_priorbox_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_1/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_1/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_1/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_1/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_1/Tile/multiples"
  op: "Pack"
  input: "conv4_3_norm_mbox_priorbox_1/strided_slice"
  input: "conv4_3_norm_mbox_priorbox_1/Tile/multiples/1"
  input: "conv4_3_norm_mbox_priorbox_1/Tile/multiples/2"
  input: "conv4_3_norm_mbox_priorbox_1/Tile/multiples/3"
  input: "conv4_3_norm_mbox_priorbox_1/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_1/Tile"
  op: "Tile"
  input: "conv4_3_norm_mbox_priorbox_1/Const"
  input: "conv4_3_norm_mbox_priorbox_1/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7_mbox_priorbox_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 10
          }
          dim {
            size: 10
          }
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\016t\332<\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\016t\332<\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\016t\332<pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\016t\332<\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\016t\332<\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\016t\332<\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\016t\332<\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\n\327\243=\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\n\327\243=pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\n\327\243=\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\n\327\243=\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\n\327\243=\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\n\327\243=\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\211\210\010>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\211\210\010>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\211\210\010>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\211\210\010>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\211\210\010>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\211\210\010>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\214%?>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\214%?>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\214%?>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\214%?>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\214%?>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\214%?>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\217\302u>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\217\302u>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\217\302u>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\217\302u>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\217\302u>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\217\302u>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\311/\226>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\311/\226>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\311/\226>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\311/\226>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\311/\226>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\311/\226>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?K~\261>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?K~\261>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?K~\261>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?K~\261>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?K~\261>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?K~\261>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\315\314\314>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\315\314\314>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\315\314\314>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\315\314\314>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\315\314\314>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\315\314\314>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?O\033\350>\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?O\033\350>pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?O\033\350>\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?O\033\350>\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?O\033\350>\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?O\033\350>\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332<\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243=\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010>\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\214%?>\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302u>\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\311/\226>\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>K~\261>\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\315\314\314>\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>O\033\350>\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\350\264\001?\315\314L>\315\314L>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\350\264\001?pG\213>pG\213>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\350\264\001?\303\320\220>\303\320\020>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\350\264\001?\303\320\020>\303\320\220>\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\350\264\001?\254\\\261>\220{\354=\315\314\314=\315\314\314=\315\314L>\315\314L>\350\264\001?\350\264\001?\220{\354=\254\\\261>\315\314\314=\315\314\314=\315\314L>\315\314L>"
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_1/Shape"
  op: "Shape"
  input: "conv13_mbox_loc_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7_mbox_priorbox_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_1/strided_slice"
  op: "StridedSlice"
  input: "fc7_mbox_priorbox_1/Shape"
  input: "fc7_mbox_priorbox_1/strided_slice/stack"
  input: "fc7_mbox_priorbox_1/strided_slice/stack_1"
  input: "fc7_mbox_priorbox_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "fc7_mbox_priorbox_1/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_1/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_1/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_1/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_1/Tile/multiples"
  op: "Pack"
  input: "fc7_mbox_priorbox_1/strided_slice"
  input: "fc7_mbox_priorbox_1/Tile/multiples/1"
  input: "fc7_mbox_priorbox_1/Tile/multiples/2"
  input: "fc7_mbox_priorbox_1/Tile/multiples/3"
  input: "fc7_mbox_priorbox_1/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "fc7_mbox_priorbox_1/Tile"
  op: "Tile"
  input: "fc7_mbox_priorbox_1/Const"
  input: "fc7_mbox_priorbox_1/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\016tZ=\016tZ=\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\016tZ=\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\016tZ=N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\016tZ=N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\016tZ=R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\016tZ=\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\016tZ=\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\016tZ=\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\016tZ=N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\016tZ=N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\016tZ=R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\016tZ=\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\016tZ=\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\016tZ=\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\016tZ=N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\016tZ=N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\016tZ=R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\016tZ=\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\016tZ=\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\016tZ=\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\016tZ=N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\016tZ=N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\016tZ=R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\016tZ=\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\016tZ=\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\016tZ=\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\016tZ=N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\016tZ=N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\016tZ=R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\016tZ=\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\n\327#>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\n\327#>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\n\327#>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\n\327#>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\n\327#>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\n\327#>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\n\327#>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\n\327#>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\n\327#>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\n\327#>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\n\327#>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\n\327#>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\n\327#>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\n\327#>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\n\327#>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\n\327#>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\n\327#>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\n\327#>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\n\327#>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\n\327#>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\n\327#>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\n\327#>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\n\327#>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\n\327#>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\n\327#>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\n\327#>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\n\327#>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\n\327#>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\n\327#>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\n\327#>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\211\210\210>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\211\210\210>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\211\210\210>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\211\210\210>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\211\210\210>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\211\210\210>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\211\210\210>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\211\210\210>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\211\210\210>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\211\210\210>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\211\210\210>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\211\210\210>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\211\210\210>\244p\275>\244pp\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\211\210\210>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\211\210\210>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\211\210\210>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\211\210\210>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\211\210\210>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\211\210\210>\244p\275>\244ptZ=\214%\277>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\214%\277>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\214%\277>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\214%\277>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\214%\277>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\214%\277>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\214%\277>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\214%\277>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\214%\277>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\214%\277>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\214%\277>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\214%\277>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\214%\277>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\214%\277>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\214%\277>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\214%\277>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\214%\277>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\214%\277>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\214%\277>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\214%\277>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\214%\277>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\214%\277>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\214%\277>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\214%\277>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\214%\277>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\214%\277>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\214%\277>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\214%\277>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\214%\277>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\214%\277>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\217\302\365>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\217\302\365>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\217\302\365>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\217\302\365>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\217\302\365>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\016tZ=\217\302\365>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\217\302\365>\244p\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\217\302\365>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\217\302\365>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\217\302\365>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\217\302\365>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327#>\217\302\365>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\210>\217\302\365>\244p\275>\244pp\275>\244p\275>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\217\302\365>\335\333\344>\335\333\344>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\217\302\365>N\364\005?N\364\205>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\217\302\365>N\364\205>N\364\005?\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\217\302\365>R\017$?\031\277Z>\315\314\314=\315\314\314=\315\314L>\315\314L>\214%\277>\217\302\365>\031\277Z>R\017$?\315\314\314=\315\314\314=\315\314L>\315\314L>\217\302\365>\217\302\365>\244p\275>\244p
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_1/Shape"
  op: "Shape"
  input: "conv14_2_mbox_loc_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_1/strided_slice"
  op: "StridedSlice"
  input: "conv6_2_mbox_priorbox_1/Shape"
  input: "conv6_2_mbox_priorbox_1/strided_slice/stack"
  input: "conv6_2_mbox_priorbox_1/strided_slice/stack_1"
  input: "conv6_2_mbox_priorbox_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_1/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_1/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_1/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_1/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_1/Tile/multiples"
  op: "Pack"
  input: "conv6_2_mbox_priorbox_1/strided_slice"
  input: "conv6_2_mbox_priorbox_1/Tile/multiples/1"
  input: "conv6_2_mbox_priorbox_1/Tile/multiples/2"
  input: "conv6_2_mbox_priorbox_1/Tile/multiples/3"
  input: "conv6_2_mbox_priorbox_1/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_1/Tile"
  op: "Tile"
  input: "conv6_2_mbox_priorbox_1/Const"
  input: "conv6_2_mbox_priorbox_1/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 6
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\016t\332=\016t\332=q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\016t\332=o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\016t\332=:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\016t\332=:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\016t\332=Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\016t\332=5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\016t\332=q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\016t\332=o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\016t\332=:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\016t\332=:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\016t\332=Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\016t\332=5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\016t\332=q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\016t\332=o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\016t\332=:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\016t\332=:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\016t\332=Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\016t\332=5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\n\327\243>q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\n\327\243>o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\n\327\243>:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\n\327\243>:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\n\327\243>Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\n\327\243>5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\n\327\243>q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\n\327\243>o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\n\327\243>:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\n\327\243>:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\n\327\243>Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\n\327\243>5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\n\327\243>q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\n\327\243>o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\n\327\243>:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\n\327\243>:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\n\327\243>Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\n\327\243>5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\211\210\010?q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\211\210\010?o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\211\210\010?:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\211\210\010?:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\211\210\010?Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\016t\332=\211\210\010?5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\211\210\010?q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\211\210\010?o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\211\210\010?:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\211\210\010?:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\211\210\010?Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\n\327\243>\211\210\010?5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\211\210\010?q=\n?q=\n?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\211\210\010?o\203\036?o\203\036?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\211\210\010?:\200C?:\200\303>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\211\210\010?:\200\303>:\200C?\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\211\210\010?Opo?5\240\237>\315\314\314=\315\314\314=\315\314L>\315\314L>\211\210\010?\211\210\010?5\240\237>Opo?\315\314\314=\315\314\314=\315\314L>\315\314L>"
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_1/Shape"
  op: "Shape"
  input: "conv15_2_mbox_loc_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_1/strided_slice"
  op: "StridedSlice"
  input: "conv7_2_mbox_priorbox_1/Shape"
  input: "conv7_2_mbox_priorbox_1/strided_slice/stack"
  input: "conv7_2_mbox_priorbox_1/strided_slice/stack_1"
  input: "conv7_2_mbox_priorbox_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_1/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_1/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_1/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_1/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_1/Tile/multiples"
  op: "Pack"
  input: "conv7_2_mbox_priorbox_1/strided_slice"
  input: "conv7_2_mbox_priorbox_1/Tile/multiples/1"
  input: "conv7_2_mbox_priorbox_1/Tile/multiples/2"
  input: "conv7_2_mbox_priorbox_1/Tile/multiples/3"
  input: "conv7_2_mbox_priorbox_1/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_1/Tile"
  op: "Tile"
  input: "conv7_2_mbox_priorbox_1/Const"
  input: "conv7_2_mbox_priorbox_1/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 2
          }
          dim {
            size: 2
          }
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\253\252*>\253\252*>\217\3025?\217\3025?\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252*>\253\252*>xZJ?xZJ?\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252*>\253\252*>\023\206\200?\023\206\000?\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252*>\253\252*>\023\206\000?\023\206\200?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\253\252*>\217\3025?\217\3025?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\253\252*>xZJ?xZJ?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\253\252*>\023\206\200?\023\206\000?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\253\252*>\023\206\000?\023\206\200?\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252*>\000\000\000?\217\3025?\217\3025?\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252*>\000\000\000?xZJ?xZJ?\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252*>\000\000\000?\023\206\200?\023\206\000?\315\314\314=\315\314\314=\315\314L>\315\314L>\253\252*>\000\000\000?\023\206\000?\023\206\200?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\000\000\000?\217\3025?\217\3025?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\000\000\000?xZJ?xZJ?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\000\000\000?\023\206\200?\023\206\000?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\000\000\000?\023\206\000?\023\206\200?\315\314\314=\315\314\314=\315\314L>\315\314L>"
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_1/Shape"
  op: "Shape"
  input: "conv16_2_mbox_loc_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_1/strided_slice"
  op: "StridedSlice"
  input: "conv8_2_mbox_priorbox_1/Shape"
  input: "conv8_2_mbox_priorbox_1/strided_slice/stack"
  input: "conv8_2_mbox_priorbox_1/strided_slice/stack_1"
  input: "conv8_2_mbox_priorbox_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_1/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_1/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_1/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_1/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_1/Tile/multiples"
  op: "Pack"
  input: "conv8_2_mbox_priorbox_1/strided_slice"
  input: "conv8_2_mbox_priorbox_1/Tile/multiples/1"
  input: "conv8_2_mbox_priorbox_1/Tile/multiples/2"
  input: "conv8_2_mbox_priorbox_1/Tile/multiples/3"
  input: "conv8_2_mbox_priorbox_1/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_1/Tile"
  op: "Tile"
  input: "conv8_2_mbox_priorbox_1/Const"
  input: "conv8_2_mbox_priorbox_1/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 4
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000?\000\000\000?\256Ga?\256Ga?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\000\000\000?m\024v?m\024v?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\000\000\000?\tL\237?\tL\037?\315\314\314=\315\314\314=\315\314L>\315\314L>\000\000\000?\000\000\000?\tL\037?\tL\237?\315\314\314=\315\314\314=\315\314L>\315\314L>"
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_1/Shape"
  op: "Shape"
  input: "conv17_2_mbox_loc_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_1/strided_slice"
  op: "StridedSlice"
  input: "conv9_2_mbox_priorbox_1/Shape"
  input: "conv9_2_mbox_priorbox_1/strided_slice/stack"
  input: "conv9_2_mbox_priorbox_1/strided_slice/stack_1"
  input: "conv9_2_mbox_priorbox_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_1/Tile/multiples/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_1/Tile/multiples/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_1/Tile/multiples/3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_1/Tile/multiples/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_1/Tile/multiples"
  op: "Pack"
  input: "conv9_2_mbox_priorbox_1/strided_slice"
  input: "conv9_2_mbox_priorbox_1/Tile/multiples/1"
  input: "conv9_2_mbox_priorbox_1/Tile/multiples/2"
  input: "conv9_2_mbox_priorbox_1/Tile/multiples/3"
  input: "conv9_2_mbox_priorbox_1/Tile/multiples/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_1/Tile"
  op: "Tile"
  input: "conv9_2_mbox_priorbox_1/Const"
  input: "conv9_2_mbox_priorbox_1/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape_1/Shape"
  op: "Shape"
  input: "conv11_mbox_conf_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "conv4_3_norm_mbox_conf_reshape_1/Shape"
  input: "conv4_3_norm_mbox_conf_reshape_1/strided_slice/stack"
  input: "conv4_3_norm_mbox_conf_reshape_1/strided_slice/stack_1"
  input: "conv4_3_norm_mbox_conf_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape_1/Reshape/shape"
  op: "Pack"
  input: "conv4_3_norm_mbox_conf_reshape_1/strided_slice"
  input: "conv4_3_norm_mbox_conf_reshape_1/Reshape/shape/1"
  input: "conv4_3_norm_mbox_conf_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_3_norm_mbox_conf_reshape_1/Reshape"
  op: "Reshape"
  input: "conv11_mbox_conf_1/BiasAdd"
  input: "conv4_3_norm_mbox_conf_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape_1/Shape"
  op: "Shape"
  input: "conv13_mbox_conf_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "fc7_mbox_conf_reshape_1/Shape"
  input: "fc7_mbox_conf_reshape_1/strided_slice/stack"
  input: "fc7_mbox_conf_reshape_1/strided_slice/stack_1"
  input: "fc7_mbox_conf_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape_1/Reshape/shape"
  op: "Pack"
  input: "fc7_mbox_conf_reshape_1/strided_slice"
  input: "fc7_mbox_conf_reshape_1/Reshape/shape/1"
  input: "fc7_mbox_conf_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "fc7_mbox_conf_reshape_1/Reshape"
  op: "Reshape"
  input: "conv13_mbox_conf_1/BiasAdd"
  input: "fc7_mbox_conf_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape_1/Shape"
  op: "Shape"
  input: "conv14_2_mbox_conf_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "conv6_2_mbox_conf_reshape_1/Shape"
  input: "conv6_2_mbox_conf_reshape_1/strided_slice/stack"
  input: "conv6_2_mbox_conf_reshape_1/strided_slice/stack_1"
  input: "conv6_2_mbox_conf_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape_1/Reshape/shape"
  op: "Pack"
  input: "conv6_2_mbox_conf_reshape_1/strided_slice"
  input: "conv6_2_mbox_conf_reshape_1/Reshape/shape/1"
  input: "conv6_2_mbox_conf_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv6_2_mbox_conf_reshape_1/Reshape"
  op: "Reshape"
  input: "conv14_2_mbox_conf_1/BiasAdd"
  input: "conv6_2_mbox_conf_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape_1/Shape"
  op: "Shape"
  input: "conv15_2_mbox_conf_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "conv7_2_mbox_conf_reshape_1/Shape"
  input: "conv7_2_mbox_conf_reshape_1/strided_slice/stack"
  input: "conv7_2_mbox_conf_reshape_1/strided_slice/stack_1"
  input: "conv7_2_mbox_conf_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape_1/Reshape/shape"
  op: "Pack"
  input: "conv7_2_mbox_conf_reshape_1/strided_slice"
  input: "conv7_2_mbox_conf_reshape_1/Reshape/shape/1"
  input: "conv7_2_mbox_conf_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv7_2_mbox_conf_reshape_1/Reshape"
  op: "Reshape"
  input: "conv15_2_mbox_conf_1/BiasAdd"
  input: "conv7_2_mbox_conf_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape_1/Shape"
  op: "Shape"
  input: "conv16_2_mbox_conf_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "conv8_2_mbox_conf_reshape_1/Shape"
  input: "conv8_2_mbox_conf_reshape_1/strided_slice/stack"
  input: "conv8_2_mbox_conf_reshape_1/strided_slice/stack_1"
  input: "conv8_2_mbox_conf_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape_1/Reshape/shape"
  op: "Pack"
  input: "conv8_2_mbox_conf_reshape_1/strided_slice"
  input: "conv8_2_mbox_conf_reshape_1/Reshape/shape/1"
  input: "conv8_2_mbox_conf_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8_2_mbox_conf_reshape_1/Reshape"
  op: "Reshape"
  input: "conv16_2_mbox_conf_1/BiasAdd"
  input: "conv8_2_mbox_conf_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape_1/Shape"
  op: "Shape"
  input: "conv17_2_mbox_conf_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "conv9_2_mbox_conf_reshape_1/Shape"
  input: "conv9_2_mbox_conf_reshape_1/strided_slice/stack"
  input: "conv9_2_mbox_conf_reshape_1/strided_slice/stack_1"
  input: "conv9_2_mbox_conf_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 7
      }
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape_1/Reshape/shape"
  op: "Pack"
  input: "conv9_2_mbox_conf_reshape_1/strided_slice"
  input: "conv9_2_mbox_conf_reshape_1/Reshape/shape/1"
  input: "conv9_2_mbox_conf_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9_2_mbox_conf_reshape_1/Reshape"
  op: "Reshape"
  input: "conv17_2_mbox_conf_1/BiasAdd"
  input: "conv9_2_mbox_conf_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape_1/Shape"
  op: "Shape"
  input: "conv11_mbox_loc_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "conv4_3_norm_mbox_loc_reshape_1/Shape"
  input: "conv4_3_norm_mbox_loc_reshape_1/strided_slice/stack"
  input: "conv4_3_norm_mbox_loc_reshape_1/strided_slice/stack_1"
  input: "conv4_3_norm_mbox_loc_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape_1/Reshape/shape"
  op: "Pack"
  input: "conv4_3_norm_mbox_loc_reshape_1/strided_slice"
  input: "conv4_3_norm_mbox_loc_reshape_1/Reshape/shape/1"
  input: "conv4_3_norm_mbox_loc_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_3_norm_mbox_loc_reshape_1/Reshape"
  op: "Reshape"
  input: "conv11_mbox_loc_1/BiasAdd"
  input: "conv4_3_norm_mbox_loc_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape_1/Shape"
  op: "Shape"
  input: "conv13_mbox_loc_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "fc7_mbox_loc_reshape_1/Shape"
  input: "fc7_mbox_loc_reshape_1/strided_slice/stack"
  input: "fc7_mbox_loc_reshape_1/strided_slice/stack_1"
  input: "fc7_mbox_loc_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape_1/Reshape/shape"
  op: "Pack"
  input: "fc7_mbox_loc_reshape_1/strided_slice"
  input: "fc7_mbox_loc_reshape_1/Reshape/shape/1"
  input: "fc7_mbox_loc_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "fc7_mbox_loc_reshape_1/Reshape"
  op: "Reshape"
  input: "conv13_mbox_loc_1/BiasAdd"
  input: "fc7_mbox_loc_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape_1/Shape"
  op: "Shape"
  input: "conv14_2_mbox_loc_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "conv6_2_mbox_loc_reshape_1/Shape"
  input: "conv6_2_mbox_loc_reshape_1/strided_slice/stack"
  input: "conv6_2_mbox_loc_reshape_1/strided_slice/stack_1"
  input: "conv6_2_mbox_loc_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape_1/Reshape/shape"
  op: "Pack"
  input: "conv6_2_mbox_loc_reshape_1/strided_slice"
  input: "conv6_2_mbox_loc_reshape_1/Reshape/shape/1"
  input: "conv6_2_mbox_loc_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv6_2_mbox_loc_reshape_1/Reshape"
  op: "Reshape"
  input: "conv14_2_mbox_loc_1/BiasAdd"
  input: "conv6_2_mbox_loc_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape_1/Shape"
  op: "Shape"
  input: "conv15_2_mbox_loc_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "conv7_2_mbox_loc_reshape_1/Shape"
  input: "conv7_2_mbox_loc_reshape_1/strided_slice/stack"
  input: "conv7_2_mbox_loc_reshape_1/strided_slice/stack_1"
  input: "conv7_2_mbox_loc_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape_1/Reshape/shape"
  op: "Pack"
  input: "conv7_2_mbox_loc_reshape_1/strided_slice"
  input: "conv7_2_mbox_loc_reshape_1/Reshape/shape/1"
  input: "conv7_2_mbox_loc_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv7_2_mbox_loc_reshape_1/Reshape"
  op: "Reshape"
  input: "conv15_2_mbox_loc_1/BiasAdd"
  input: "conv7_2_mbox_loc_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape_1/Shape"
  op: "Shape"
  input: "conv16_2_mbox_loc_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "conv8_2_mbox_loc_reshape_1/Shape"
  input: "conv8_2_mbox_loc_reshape_1/strided_slice/stack"
  input: "conv8_2_mbox_loc_reshape_1/strided_slice/stack_1"
  input: "conv8_2_mbox_loc_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape_1/Reshape/shape"
  op: "Pack"
  input: "conv8_2_mbox_loc_reshape_1/strided_slice"
  input: "conv8_2_mbox_loc_reshape_1/Reshape/shape/1"
  input: "conv8_2_mbox_loc_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8_2_mbox_loc_reshape_1/Reshape"
  op: "Reshape"
  input: "conv16_2_mbox_loc_1/BiasAdd"
  input: "conv8_2_mbox_loc_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape_1/Shape"
  op: "Shape"
  input: "conv17_2_mbox_loc_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "conv9_2_mbox_loc_reshape_1/Shape"
  input: "conv9_2_mbox_loc_reshape_1/strided_slice/stack"
  input: "conv9_2_mbox_loc_reshape_1/strided_slice/stack_1"
  input: "conv9_2_mbox_loc_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape_1/Reshape/shape"
  op: "Pack"
  input: "conv9_2_mbox_loc_reshape_1/strided_slice"
  input: "conv9_2_mbox_loc_reshape_1/Reshape/shape/1"
  input: "conv9_2_mbox_loc_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9_2_mbox_loc_reshape_1/Reshape"
  op: "Reshape"
  input: "conv17_2_mbox_loc_1/BiasAdd"
  input: "conv9_2_mbox_loc_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape_1/Shape"
  op: "Shape"
  input: "conv4_3_norm_mbox_priorbox_1/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "conv4_3_norm_mbox_priorbox_reshape_1/Shape"
  input: "conv4_3_norm_mbox_priorbox_reshape_1/strided_slice/stack"
  input: "conv4_3_norm_mbox_priorbox_reshape_1/strided_slice/stack_1"
  input: "conv4_3_norm_mbox_priorbox_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape_1/Reshape/shape"
  op: "Pack"
  input: "conv4_3_norm_mbox_priorbox_reshape_1/strided_slice"
  input: "conv4_3_norm_mbox_priorbox_reshape_1/Reshape/shape/1"
  input: "conv4_3_norm_mbox_priorbox_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv4_3_norm_mbox_priorbox_reshape_1/Reshape"
  op: "Reshape"
  input: "conv4_3_norm_mbox_priorbox_1/Tile"
  input: "conv4_3_norm_mbox_priorbox_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape_1/Shape"
  op: "Shape"
  input: "fc7_mbox_priorbox_1/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "fc7_mbox_priorbox_reshape_1/Shape"
  input: "fc7_mbox_priorbox_reshape_1/strided_slice/stack"
  input: "fc7_mbox_priorbox_reshape_1/strided_slice/stack_1"
  input: "fc7_mbox_priorbox_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape_1/Reshape/shape"
  op: "Pack"
  input: "fc7_mbox_priorbox_reshape_1/strided_slice"
  input: "fc7_mbox_priorbox_reshape_1/Reshape/shape/1"
  input: "fc7_mbox_priorbox_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "fc7_mbox_priorbox_reshape_1/Reshape"
  op: "Reshape"
  input: "fc7_mbox_priorbox_1/Tile"
  input: "fc7_mbox_priorbox_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape_1/Shape"
  op: "Shape"
  input: "conv6_2_mbox_priorbox_1/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "conv6_2_mbox_priorbox_reshape_1/Shape"
  input: "conv6_2_mbox_priorbox_reshape_1/strided_slice/stack"
  input: "conv6_2_mbox_priorbox_reshape_1/strided_slice/stack_1"
  input: "conv6_2_mbox_priorbox_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape_1/Reshape/shape"
  op: "Pack"
  input: "conv6_2_mbox_priorbox_reshape_1/strided_slice"
  input: "conv6_2_mbox_priorbox_reshape_1/Reshape/shape/1"
  input: "conv6_2_mbox_priorbox_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv6_2_mbox_priorbox_reshape_1/Reshape"
  op: "Reshape"
  input: "conv6_2_mbox_priorbox_1/Tile"
  input: "conv6_2_mbox_priorbox_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape_1/Shape"
  op: "Shape"
  input: "conv7_2_mbox_priorbox_1/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "conv7_2_mbox_priorbox_reshape_1/Shape"
  input: "conv7_2_mbox_priorbox_reshape_1/strided_slice/stack"
  input: "conv7_2_mbox_priorbox_reshape_1/strided_slice/stack_1"
  input: "conv7_2_mbox_priorbox_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape_1/Reshape/shape"
  op: "Pack"
  input: "conv7_2_mbox_priorbox_reshape_1/strided_slice"
  input: "conv7_2_mbox_priorbox_reshape_1/Reshape/shape/1"
  input: "conv7_2_mbox_priorbox_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv7_2_mbox_priorbox_reshape_1/Reshape"
  op: "Reshape"
  input: "conv7_2_mbox_priorbox_1/Tile"
  input: "conv7_2_mbox_priorbox_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape_1/Shape"
  op: "Shape"
  input: "conv8_2_mbox_priorbox_1/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "conv8_2_mbox_priorbox_reshape_1/Shape"
  input: "conv8_2_mbox_priorbox_reshape_1/strided_slice/stack"
  input: "conv8_2_mbox_priorbox_reshape_1/strided_slice/stack_1"
  input: "conv8_2_mbox_priorbox_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape_1/Reshape/shape"
  op: "Pack"
  input: "conv8_2_mbox_priorbox_reshape_1/strided_slice"
  input: "conv8_2_mbox_priorbox_reshape_1/Reshape/shape/1"
  input: "conv8_2_mbox_priorbox_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv8_2_mbox_priorbox_reshape_1/Reshape"
  op: "Reshape"
  input: "conv8_2_mbox_priorbox_1/Tile"
  input: "conv8_2_mbox_priorbox_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape_1/Shape"
  op: "Shape"
  input: "conv9_2_mbox_priorbox_1/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape_1/strided_slice"
  op: "StridedSlice"
  input: "conv9_2_mbox_priorbox_reshape_1/Shape"
  input: "conv9_2_mbox_priorbox_reshape_1/strided_slice/stack"
  input: "conv9_2_mbox_priorbox_reshape_1/strided_slice/stack_1"
  input: "conv9_2_mbox_priorbox_reshape_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape_1/Reshape/shape/2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape_1/Reshape/shape"
  op: "Pack"
  input: "conv9_2_mbox_priorbox_reshape_1/strided_slice"
  input: "conv9_2_mbox_priorbox_reshape_1/Reshape/shape/1"
  input: "conv9_2_mbox_priorbox_reshape_1/Reshape/shape/2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "conv9_2_mbox_priorbox_reshape_1/Reshape"
  op: "Reshape"
  input: "conv9_2_mbox_priorbox_1/Tile"
  input: "conv9_2_mbox_priorbox_reshape_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mbox_conf_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mbox_conf_1/concat"
  op: "ConcatV2"
  input: "conv4_3_norm_mbox_conf_reshape_1/Reshape"
  input: "fc7_mbox_conf_reshape_1/Reshape"
  input: "conv6_2_mbox_conf_reshape_1/Reshape"
  input: "conv7_2_mbox_conf_reshape_1/Reshape"
  input: "conv8_2_mbox_conf_reshape_1/Reshape"
  input: "conv9_2_mbox_conf_reshape_1/Reshape"
  input: "mbox_conf_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mbox_loc_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mbox_loc_1/concat"
  op: "ConcatV2"
  input: "conv4_3_norm_mbox_loc_reshape_1/Reshape"
  input: "fc7_mbox_loc_reshape_1/Reshape"
  input: "conv6_2_mbox_loc_reshape_1/Reshape"
  input: "conv7_2_mbox_loc_reshape_1/Reshape"
  input: "conv8_2_mbox_loc_reshape_1/Reshape"
  input: "conv9_2_mbox_loc_reshape_1/Reshape"
  input: "mbox_loc_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mbox_priorbox_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mbox_priorbox_1/concat"
  op: "ConcatV2"
  input: "conv4_3_norm_mbox_priorbox_reshape_1/Reshape"
  input: "fc7_mbox_priorbox_reshape_1/Reshape"
  input: "conv6_2_mbox_priorbox_reshape_1/Reshape"
  input: "conv7_2_mbox_priorbox_reshape_1/Reshape"
  input: "conv8_2_mbox_priorbox_reshape_1/Reshape"
  input: "conv9_2_mbox_priorbox_reshape_1/Reshape"
  input: "mbox_priorbox_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mbox_conf_softmax_1/Max/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mbox_conf_softmax_1/Max"
  op: "Max"
  input: "mbox_conf_1/concat"
  input: "mbox_conf_softmax_1/Max/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "mbox_conf_softmax_1/sub"
  op: "Sub"
  input: "mbox_conf_1/concat"
  input: "mbox_conf_softmax_1/Max"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mbox_conf_softmax_1/Exp"
  op: "Exp"
  input: "mbox_conf_softmax_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mbox_conf_softmax_1/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mbox_conf_softmax_1/Sum"
  op: "Sum"
  input: "mbox_conf_softmax_1/Exp"
  input: "mbox_conf_softmax_1/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "mbox_conf_softmax_1/truediv"
  op: "RealDiv"
  input: "mbox_conf_softmax_1/Exp"
  input: "mbox_conf_softmax_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "predictions_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "predictions_1/concat"
  op: "ConcatV2"
  input: "mbox_conf_softmax_1/truediv"
  input: "mbox_loc_1/concat"
  input: "mbox_priorbox_1/concat"
  input: "predictions_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "conv0_1/kernel"
  input: "Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_1"
  op: "Assign"
  input: "conv0/bn_1/gamma"
  input: "Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_2"
  op: "Assign"
  input: "conv0/bn_1/beta"
  input: "Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_3"
  op: "Assign"
  input: "conv0/bn_1/moving_mean"
  input: "Placeholder_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_4"
  op: "Assign"
  input: "conv0/bn_1/moving_variance"
  input: "Placeholder_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 32
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_5"
  op: "Assign"
  input: "conv1/dw_1/depthwise_kernel"
  input: "Placeholder_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_6"
  op: "Assign"
  input: "conv1/dw/bn_1/gamma"
  input: "Placeholder_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_7"
  op: "Assign"
  input: "conv1/dw/bn_1/beta"
  input: "Placeholder_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_8"
  op: "Assign"
  input: "conv1/dw/bn_1/moving_mean"
  input: "Placeholder_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "Assign_9"
  op: "Assign"
  input: "conv1/dw/bn_1/moving_variance"
  input: "Placeholder_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_10"
  op: "Assign"
  input: "conv1_1/kernel"
  input: "Placeholder_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_11"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_11"
  op: "Assign"
  input: "conv1/bn_1/gamma"
  input: "Placeholder_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_12"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_12"
  op: "Assign"
  input: "conv1/bn_1/beta"
  input: "Placeholder_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_13"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_13"
  op: "Assign"
  input: "conv1/bn_1/moving_mean"
  input: "Placeholder_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_14"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_14"
  op: "Assign"
  input: "conv1/bn_1/moving_variance"
  input: "Placeholder_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_15"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_15"
  op: "Assign"
  input: "conv2/dw_1/depthwise_kernel"
  input: "Placeholder_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_16"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_16"
  op: "Assign"
  input: "conv2/dw/bn_1/gamma"
  input: "Placeholder_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_17"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_17"
  op: "Assign"
  input: "conv2/dw/bn_1/beta"
  input: "Placeholder_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_18"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_18"
  op: "Assign"
  input: "conv2/dw/bn_1/moving_mean"
  input: "Placeholder_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_19"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_19"
  op: "Assign"
  input: "conv2/dw/bn_1/moving_variance"
  input: "Placeholder_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_20"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_20"
  op: "Assign"
  input: "conv2_1/kernel"
  input: "Placeholder_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_21"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_21"
  op: "Assign"
  input: "conv2/bn_1/gamma"
  input: "Placeholder_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_22"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_22"
  op: "Assign"
  input: "conv2/bn_1/beta"
  input: "Placeholder_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_23"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_23"
  op: "Assign"
  input: "conv2/bn_1/moving_mean"
  input: "Placeholder_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_24"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_24"
  op: "Assign"
  input: "conv2/bn_1/moving_variance"
  input: "Placeholder_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_25"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_25"
  op: "Assign"
  input: "conv3/dw_1/depthwise_kernel"
  input: "Placeholder_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_26"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_26"
  op: "Assign"
  input: "conv3/dw/bn_1/gamma"
  input: "Placeholder_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_27"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_27"
  op: "Assign"
  input: "conv3/dw/bn_1/beta"
  input: "Placeholder_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_28"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_28"
  op: "Assign"
  input: "conv3/dw/bn_1/moving_mean"
  input: "Placeholder_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_29"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_29"
  op: "Assign"
  input: "conv3/dw/bn_1/moving_variance"
  input: "Placeholder_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_30"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_30"
  op: "Assign"
  input: "conv3_1/kernel"
  input: "Placeholder_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_31"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_31"
  op: "Assign"
  input: "conv3/bn_1/gamma"
  input: "Placeholder_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_32"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_32"
  op: "Assign"
  input: "conv3/bn_1/beta"
  input: "Placeholder_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_33"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_33"
  op: "Assign"
  input: "conv3/bn_1/moving_mean"
  input: "Placeholder_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_34"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_34"
  op: "Assign"
  input: "conv3/bn_1/moving_variance"
  input: "Placeholder_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_35"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_35"
  op: "Assign"
  input: "conv4/dw_1/depthwise_kernel"
  input: "Placeholder_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_36"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_36"
  op: "Assign"
  input: "conv4/dw/bn_1/gamma"
  input: "Placeholder_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_37"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_37"
  op: "Assign"
  input: "conv4/dw/bn_1/beta"
  input: "Placeholder_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_38"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_38"
  op: "Assign"
  input: "conv4/dw/bn_1/moving_mean"
  input: "Placeholder_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_39"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_39"
  op: "Assign"
  input: "conv4/dw/bn_1/moving_variance"
  input: "Placeholder_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_40"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_40"
  op: "Assign"
  input: "conv4_1/kernel"
  input: "Placeholder_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_41"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_41"
  op: "Assign"
  input: "conv4/bn_1/gamma"
  input: "Placeholder_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_42"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_42"
  op: "Assign"
  input: "conv4/bn_1/beta"
  input: "Placeholder_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_43"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_43"
  op: "Assign"
  input: "conv4/bn_1/moving_mean"
  input: "Placeholder_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_44"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_44"
  op: "Assign"
  input: "conv4/bn_1/moving_variance"
  input: "Placeholder_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_45"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_45"
  op: "Assign"
  input: "conv5/dw_1/depthwise_kernel"
  input: "Placeholder_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_46"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_46"
  op: "Assign"
  input: "conv5/dw/bn_1/gamma"
  input: "Placeholder_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_47"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_47"
  op: "Assign"
  input: "conv5/dw/bn_1/beta"
  input: "Placeholder_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_48"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_48"
  op: "Assign"
  input: "conv5/dw/bn_1/moving_mean"
  input: "Placeholder_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_49"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_49"
  op: "Assign"
  input: "conv5/dw/bn_1/moving_variance"
  input: "Placeholder_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_50"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_50"
  op: "Assign"
  input: "conv5_1/kernel"
  input: "Placeholder_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_51"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_51"
  op: "Assign"
  input: "conv5/bn_1/gamma"
  input: "Placeholder_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_52"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_52"
  op: "Assign"
  input: "conv5/bn_1/beta"
  input: "Placeholder_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_53"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_53"
  op: "Assign"
  input: "conv5/bn_1/moving_mean"
  input: "Placeholder_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_54"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_54"
  op: "Assign"
  input: "conv5/bn_1/moving_variance"
  input: "Placeholder_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_55"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_55"
  op: "Assign"
  input: "conv6/dw_1/depthwise_kernel"
  input: "Placeholder_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_56"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_56"
  op: "Assign"
  input: "conv6/dw/bn_1/gamma"
  input: "Placeholder_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_57"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_57"
  op: "Assign"
  input: "conv6/dw/bn_1/beta"
  input: "Placeholder_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_58"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_58"
  op: "Assign"
  input: "conv6/dw/bn_1/moving_mean"
  input: "Placeholder_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_59"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_59"
  op: "Assign"
  input: "conv6/dw/bn_1/moving_variance"
  input: "Placeholder_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_60"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_60"
  op: "Assign"
  input: "conv6_1/kernel"
  input: "Placeholder_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_61"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_61"
  op: "Assign"
  input: "conv6/bn_1/gamma"
  input: "Placeholder_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_62"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_62"
  op: "Assign"
  input: "conv6/bn_1/beta"
  input: "Placeholder_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_63"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_63"
  op: "Assign"
  input: "conv6/bn_1/moving_mean"
  input: "Placeholder_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_64"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_64"
  op: "Assign"
  input: "conv6/bn_1/moving_variance"
  input: "Placeholder_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_65"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_65"
  op: "Assign"
  input: "conv7/dw_1/depthwise_kernel"
  input: "Placeholder_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_66"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_66"
  op: "Assign"
  input: "conv7/dw/bn_1/gamma"
  input: "Placeholder_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_67"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_67"
  op: "Assign"
  input: "conv7/dw/bn_1/beta"
  input: "Placeholder_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_68"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_68"
  op: "Assign"
  input: "conv7/dw/bn_1/moving_mean"
  input: "Placeholder_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_69"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_69"
  op: "Assign"
  input: "conv7/dw/bn_1/moving_variance"
  input: "Placeholder_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_70"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_70"
  op: "Assign"
  input: "conv7_1/kernel"
  input: "Placeholder_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_71"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_71"
  op: "Assign"
  input: "conv7/bn_1/gamma"
  input: "Placeholder_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_72"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_72"
  op: "Assign"
  input: "conv7/bn_1/beta"
  input: "Placeholder_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_73"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_73"
  op: "Assign"
  input: "conv7/bn_1/moving_mean"
  input: "Placeholder_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_74"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_74"
  op: "Assign"
  input: "conv7/bn_1/moving_variance"
  input: "Placeholder_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_75"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_75"
  op: "Assign"
  input: "conv8/dw_1/depthwise_kernel"
  input: "Placeholder_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_76"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_76"
  op: "Assign"
  input: "conv8/dw/bn_1/gamma"
  input: "Placeholder_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_77"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_77"
  op: "Assign"
  input: "conv8/dw/bn_1/beta"
  input: "Placeholder_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_78"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_78"
  op: "Assign"
  input: "conv8/dw/bn_1/moving_mean"
  input: "Placeholder_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_79"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_79"
  op: "Assign"
  input: "conv8/dw/bn_1/moving_variance"
  input: "Placeholder_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_80"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_80"
  op: "Assign"
  input: "conv8_1/kernel"
  input: "Placeholder_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_81"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_81"
  op: "Assign"
  input: "conv8/bn_1/gamma"
  input: "Placeholder_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_82"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_82"
  op: "Assign"
  input: "conv8/bn_1/beta"
  input: "Placeholder_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_83"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_83"
  op: "Assign"
  input: "conv8/bn_1/moving_mean"
  input: "Placeholder_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_84"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_84"
  op: "Assign"
  input: "conv8/bn_1/moving_variance"
  input: "Placeholder_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_85"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_85"
  op: "Assign"
  input: "conv9/dw_1/depthwise_kernel"
  input: "Placeholder_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_86"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_86"
  op: "Assign"
  input: "conv9/dw/bn_1/gamma"
  input: "Placeholder_86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_87"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_87"
  op: "Assign"
  input: "conv9/dw/bn_1/beta"
  input: "Placeholder_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_88"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_88"
  op: "Assign"
  input: "conv9/dw/bn_1/moving_mean"
  input: "Placeholder_88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_89"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_89"
  op: "Assign"
  input: "conv9/dw/bn_1/moving_variance"
  input: "Placeholder_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_90"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_90"
  op: "Assign"
  input: "conv9_1/kernel"
  input: "Placeholder_90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_91"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_91"
  op: "Assign"
  input: "conv9/bn_1/gamma"
  input: "Placeholder_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_92"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_92"
  op: "Assign"
  input: "conv9/bn_1/beta"
  input: "Placeholder_92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_93"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_93"
  op: "Assign"
  input: "conv9/bn_1/moving_mean"
  input: "Placeholder_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_94"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_94"
  op: "Assign"
  input: "conv9/bn_1/moving_variance"
  input: "Placeholder_94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_95"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_95"
  op: "Assign"
  input: "conv10/dw_1/depthwise_kernel"
  input: "Placeholder_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_96"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_96"
  op: "Assign"
  input: "conv10/dw/bn_1/gamma"
  input: "Placeholder_96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_97"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_97"
  op: "Assign"
  input: "conv10/dw/bn_1/beta"
  input: "Placeholder_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_98"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_98"
  op: "Assign"
  input: "conv10/dw/bn_1/moving_mean"
  input: "Placeholder_98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_99"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_99"
  op: "Assign"
  input: "conv10/dw/bn_1/moving_variance"
  input: "Placeholder_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_100"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_100"
  op: "Assign"
  input: "conv10_1/kernel"
  input: "Placeholder_100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_101"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_101"
  op: "Assign"
  input: "conv10/bn_1/gamma"
  input: "Placeholder_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_102"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_102"
  op: "Assign"
  input: "conv10/bn_1/beta"
  input: "Placeholder_102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_103"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_103"
  op: "Assign"
  input: "conv10/bn_1/moving_mean"
  input: "Placeholder_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_104"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_104"
  op: "Assign"
  input: "conv10/bn_1/moving_variance"
  input: "Placeholder_104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_105"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_105"
  op: "Assign"
  input: "conv11/dw_1/depthwise_kernel"
  input: "Placeholder_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_106"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_106"
  op: "Assign"
  input: "conv11/dw/bn_1/gamma"
  input: "Placeholder_106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_107"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_107"
  op: "Assign"
  input: "conv11/dw/bn_1/beta"
  input: "Placeholder_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_108"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_108"
  op: "Assign"
  input: "conv11/dw/bn_1/moving_mean"
  input: "Placeholder_108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_109"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_109"
  op: "Assign"
  input: "conv11/dw/bn_1/moving_variance"
  input: "Placeholder_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_110"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_110"
  op: "Assign"
  input: "conv11_1/kernel"
  input: "Placeholder_110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_111"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_111"
  op: "Assign"
  input: "conv11/bn_1/gamma"
  input: "Placeholder_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_112"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_112"
  op: "Assign"
  input: "conv11/bn_1/beta"
  input: "Placeholder_112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_113"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_113"
  op: "Assign"
  input: "conv11/bn_1/moving_mean"
  input: "Placeholder_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_114"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_114"
  op: "Assign"
  input: "conv11/bn_1/moving_variance"
  input: "Placeholder_114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_115"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 512
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_115"
  op: "Assign"
  input: "conv12/dw_1/depthwise_kernel"
  input: "Placeholder_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_116"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_116"
  op: "Assign"
  input: "conv12/dw/bn_1/gamma"
  input: "Placeholder_116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_117"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_117"
  op: "Assign"
  input: "conv12/dw/bn_1/beta"
  input: "Placeholder_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_118"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_118"
  op: "Assign"
  input: "conv12/dw/bn_1/moving_mean"
  input: "Placeholder_118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_119"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_119"
  op: "Assign"
  input: "conv12/dw/bn_1/moving_variance"
  input: "Placeholder_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_120"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_120"
  op: "Assign"
  input: "conv12_1/kernel"
  input: "Placeholder_120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_121"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_121"
  op: "Assign"
  input: "conv12/bn_1/gamma"
  input: "Placeholder_121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_122"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_122"
  op: "Assign"
  input: "conv12/bn_1/beta"
  input: "Placeholder_122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_123"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_123"
  op: "Assign"
  input: "conv12/bn_1/moving_mean"
  input: "Placeholder_123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_124"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_124"
  op: "Assign"
  input: "conv12/bn_1/moving_variance"
  input: "Placeholder_124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_125"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1024
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Assign_125"
  op: "Assign"
  input: "conv13/dw_1/depthwise_kernel"
  input: "Placeholder_125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_126"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_126"
  op: "Assign"
  input: "conv13/dw/bn_1/gamma"
  input: "Placeholder_126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_127"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_127"
  op: "Assign"
  input: "conv13/dw/bn_1/beta"
  input: "Placeholder_127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_128"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_128"
  op: "Assign"
  input: "conv13/dw/bn_1/moving_mean"
  input: "Placeholder_128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_129"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_129"
  op: "Assign"
  input: "conv13/dw/bn_1/moving_variance"
  input: "Placeholder_129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_130"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_130"
  op: "Assign"
  input: "conv13_1/kernel"
  input: "Placeholder_130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_131"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_131"
  op: "Assign"
  input: "conv13/bn_1/gamma"
  input: "Placeholder_131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_132"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_132"
  op: "Assign"
  input: "conv13/bn_1/beta"
  input: "Placeholder_132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_133"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_133"
  op: "Assign"
  input: "conv13/bn_1/moving_mean"
  input: "Placeholder_133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_134"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
      }
    }
  }
}
node {
  name: "Assign_134"
  op: "Assign"
  input: "conv13/bn_1/moving_variance"
  input: "Placeholder_134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_135"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_135"
  op: "Assign"
  input: "conv14_1_1/kernel"
  input: "Placeholder_135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_136"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_136"
  op: "Assign"
  input: "conv14_1/bn_1/gamma"
  input: "Placeholder_136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_137"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_137"
  op: "Assign"
  input: "conv14_1/bn_1/beta"
  input: "Placeholder_137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_138"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_138"
  op: "Assign"
  input: "conv14_1/bn_1/moving_mean"
  input: "Placeholder_138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_139"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_139"
  op: "Assign"
  input: "conv14_1/bn_1/moving_variance"
  input: "Placeholder_139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_140"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 256
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_140"
  op: "Assign"
  input: "conv14_2_1/kernel"
  input: "Placeholder_140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_141"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_141"
  op: "Assign"
  input: "conv14_2/bn_1/gamma"
  input: "Placeholder_141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_142"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_142"
  op: "Assign"
  input: "conv14_2/bn_1/beta"
  input: "Placeholder_142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_143"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_143"
  op: "Assign"
  input: "conv14_2/bn_1/moving_mean"
  input: "Placeholder_143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_144"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "Assign_144"
  op: "Assign"
  input: "conv14_2/bn_1/moving_variance"
  input: "Placeholder_144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_145"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_145"
  op: "Assign"
  input: "conv15_1_1/kernel"
  input: "Placeholder_145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_146"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_146"
  op: "Assign"
  input: "conv15_1/bn_1/gamma"
  input: "Placeholder_146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_147"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_147"
  op: "Assign"
  input: "conv15_1/bn_1/beta"
  input: "Placeholder_147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_148"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_148"
  op: "Assign"
  input: "conv15_1/bn_1/moving_mean"
  input: "Placeholder_148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_149"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_149"
  op: "Assign"
  input: "conv15_1/bn_1/moving_variance"
  input: "Placeholder_149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_150"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_150"
  op: "Assign"
  input: "conv15_2_1/kernel"
  input: "Placeholder_150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_151"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_151"
  op: "Assign"
  input: "conv15_2/bn_1/gamma"
  input: "Placeholder_151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_152"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_152"
  op: "Assign"
  input: "conv15_2/bn_1/beta"
  input: "Placeholder_152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_153"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_153"
  op: "Assign"
  input: "conv15_2/bn_1/moving_mean"
  input: "Placeholder_153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_154"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_154"
  op: "Assign"
  input: "conv15_2/bn_1/moving_variance"
  input: "Placeholder_154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_155"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_155"
  op: "Assign"
  input: "conv16_1_1/kernel"
  input: "Placeholder_155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_156"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_156"
  op: "Assign"
  input: "conv16_1/bn_1/gamma"
  input: "Placeholder_156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_157"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_157"
  op: "Assign"
  input: "conv16_1/bn_1/beta"
  input: "Placeholder_157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_158"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_158"
  op: "Assign"
  input: "conv16_1/bn_1/moving_mean"
  input: "Placeholder_158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_159"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_159"
  op: "Assign"
  input: "conv16_1/bn_1/moving_variance"
  input: "Placeholder_159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_160"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_160"
  op: "Assign"
  input: "conv16_2_1/kernel"
  input: "Placeholder_160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_161"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_161"
  op: "Assign"
  input: "conv16_2/bn_1/gamma"
  input: "Placeholder_161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_162"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_162"
  op: "Assign"
  input: "conv16_2/bn_1/beta"
  input: "Placeholder_162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_163"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_163"
  op: "Assign"
  input: "conv16_2/bn_1/moving_mean"
  input: "Placeholder_163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_164"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_164"
  op: "Assign"
  input: "conv16_2/bn_1/moving_variance"
  input: "Placeholder_164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_165"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_165"
  op: "Assign"
  input: "conv17_1_1/kernel"
  input: "Placeholder_165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_166"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_166"
  op: "Assign"
  input: "conv17_1/bn_1/gamma"
  input: "Placeholder_166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_167"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_167"
  op: "Assign"
  input: "conv17_1/bn_1/beta"
  input: "Placeholder_167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_168"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_168"
  op: "Assign"
  input: "conv17_1/bn_1/moving_mean"
  input: "Placeholder_168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_169"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_169"
  op: "Assign"
  input: "conv17_1/bn_1/moving_variance"
  input: "Placeholder_169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_170"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_170"
  op: "Assign"
  input: "conv17_2_1/kernel"
  input: "Placeholder_170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_171"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_171"
  op: "Assign"
  input: "conv17_2/bn_1/gamma"
  input: "Placeholder_171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/gamma"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_172"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_172"
  op: "Assign"
  input: "conv17_2/bn_1/beta"
  input: "Placeholder_172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_173"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_173"
  op: "Assign"
  input: "conv17_2/bn_1/moving_mean"
  input: "Placeholder_173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_174"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_174"
  op: "Assign"
  input: "conv17_2/bn_1/moving_variance"
  input: "Placeholder_174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_175"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 28
        }
      }
    }
  }
}
node {
  name: "Assign_175"
  op: "Assign"
  input: "conv11_mbox_conf_1/kernel"
  input: "Placeholder_175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_176"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 28
        }
      }
    }
  }
}
node {
  name: "Assign_176"
  op: "Assign"
  input: "conv11_mbox_conf_1/bias"
  input: "Placeholder_176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_177"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 42
        }
      }
    }
  }
}
node {
  name: "Assign_177"
  op: "Assign"
  input: "conv13_mbox_conf_1/kernel"
  input: "Placeholder_177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_178"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 42
        }
      }
    }
  }
}
node {
  name: "Assign_178"
  op: "Assign"
  input: "conv13_mbox_conf_1/bias"
  input: "Placeholder_178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_179"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 42
        }
      }
    }
  }
}
node {
  name: "Assign_179"
  op: "Assign"
  input: "conv14_2_mbox_conf_1/kernel"
  input: "Placeholder_179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_180"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 42
        }
      }
    }
  }
}
node {
  name: "Assign_180"
  op: "Assign"
  input: "conv14_2_mbox_conf_1/bias"
  input: "Placeholder_180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_181"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 42
        }
      }
    }
  }
}
node {
  name: "Assign_181"
  op: "Assign"
  input: "conv15_2_mbox_conf_1/kernel"
  input: "Placeholder_181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_182"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 42
        }
      }
    }
  }
}
node {
  name: "Assign_182"
  op: "Assign"
  input: "conv15_2_mbox_conf_1/bias"
  input: "Placeholder_182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_183"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 28
        }
      }
    }
  }
}
node {
  name: "Assign_183"
  op: "Assign"
  input: "conv16_2_mbox_conf_1/kernel"
  input: "Placeholder_183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_184"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 28
        }
      }
    }
  }
}
node {
  name: "Assign_184"
  op: "Assign"
  input: "conv16_2_mbox_conf_1/bias"
  input: "Placeholder_184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_185"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 28
        }
      }
    }
  }
}
node {
  name: "Assign_185"
  op: "Assign"
  input: "conv17_2_mbox_conf_1/kernel"
  input: "Placeholder_185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_186"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 28
        }
      }
    }
  }
}
node {
  name: "Assign_186"
  op: "Assign"
  input: "conv17_2_mbox_conf_1/bias"
  input: "Placeholder_186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_187"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_187"
  op: "Assign"
  input: "conv11_mbox_loc_1/kernel"
  input: "Placeholder_187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_188"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_188"
  op: "Assign"
  input: "conv11_mbox_loc_1/bias"
  input: "Placeholder_188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_189"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1024
        }
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "Assign_189"
  op: "Assign"
  input: "conv13_mbox_loc_1/kernel"
  input: "Placeholder_189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_190"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "Assign_190"
  op: "Assign"
  input: "conv13_mbox_loc_1/bias"
  input: "Placeholder_190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_191"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 512
        }
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "Assign_191"
  op: "Assign"
  input: "conv14_2_mbox_loc_1/kernel"
  input: "Placeholder_191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_192"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "Assign_192"
  op: "Assign"
  input: "conv14_2_mbox_loc_1/bias"
  input: "Placeholder_192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_193"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "Assign_193"
  op: "Assign"
  input: "conv15_2_mbox_loc_1/kernel"
  input: "Placeholder_193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_194"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
}
node {
  name: "Assign_194"
  op: "Assign"
  input: "conv15_2_mbox_loc_1/bias"
  input: "Placeholder_194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_195"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 256
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_195"
  op: "Assign"
  input: "conv16_2_mbox_loc_1/kernel"
  input: "Placeholder_195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_196"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_196"
  op: "Assign"
  input: "conv16_2_mbox_loc_1/bias"
  input: "Placeholder_196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_197"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 128
        }
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_197"
  op: "Assign"
  input: "conv17_2_mbox_loc_1/kernel"
  input: "Placeholder_197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_198"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
}
node {
  name: "Assign_198"
  op: "Assign"
  input: "conv17_2_mbox_loc_1/bias"
  input: "Placeholder_198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "conv0/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "conv0/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "conv0/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "conv0/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "conv1/dw/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "conv1/dw/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "conv1/dw/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "conv1/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "conv1/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "conv1/dw/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "conv1/dw/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "conv1/dw/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "conv1/dw/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "conv1/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "conv1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "conv1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "conv1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "conv1/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "conv1/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "conv1/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "conv1/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "conv2/dw/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "conv2/dw/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "conv2/dw/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "conv2/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "conv2/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "conv2/dw/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "conv2/dw/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "conv2/dw/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "conv2/dw/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "conv2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "conv2/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "conv2/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "conv2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "conv2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "conv2/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "conv2/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "conv2/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "conv2/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "conv3/dw/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "conv3/dw/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "conv3/dw/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "conv3/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "conv3/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "conv3/dw/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "conv3/dw/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "conv3/dw/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "conv3/dw/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "conv3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "conv3/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "conv3/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "conv3/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "conv3/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "conv3/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "conv3/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "conv3/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "conv3/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "conv4/dw/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "conv4/dw/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "conv4/dw/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "conv4/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "conv4/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "conv4/dw/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "conv4/dw/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "conv4/dw/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "conv4/dw/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "conv4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "conv4/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "conv4/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "conv4/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "conv4/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "conv4/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "conv4/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "conv4/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "conv4/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "conv5/dw/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "conv5/dw/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "conv5/dw/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "conv5/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "conv5/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "conv5/dw/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "conv5/dw/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "conv5/dw/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "conv5/dw/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "conv5/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_86"
  op: "IsVariableInitialized"
  input: "conv5/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_87"
  op: "IsVariableInitialized"
  input: "conv5/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_88"
  op: "IsVariableInitialized"
  input: "conv5/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_89"
  op: "IsVariableInitialized"
  input: "conv5/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_90"
  op: "IsVariableInitialized"
  input: "conv5/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_91"
  op: "IsVariableInitialized"
  input: "conv5/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_92"
  op: "IsVariableInitialized"
  input: "conv5/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_93"
  op: "IsVariableInitialized"
  input: "conv5/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_94"
  op: "IsVariableInitialized"
  input: "conv6/dw/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_95"
  op: "IsVariableInitialized"
  input: "conv6/dw/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_96"
  op: "IsVariableInitialized"
  input: "conv6/dw/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_97"
  op: "IsVariableInitialized"
  input: "conv6/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_98"
  op: "IsVariableInitialized"
  input: "conv6/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_99"
  op: "IsVariableInitialized"
  input: "conv6/dw/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_100"
  op: "IsVariableInitialized"
  input: "conv6/dw/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_101"
  op: "IsVariableInitialized"
  input: "conv6/dw/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_102"
  op: "IsVariableInitialized"
  input: "conv6/dw/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_103"
  op: "IsVariableInitialized"
  input: "conv6/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_104"
  op: "IsVariableInitialized"
  input: "conv6/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_105"
  op: "IsVariableInitialized"
  input: "conv6/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_106"
  op: "IsVariableInitialized"
  input: "conv6/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_107"
  op: "IsVariableInitialized"
  input: "conv6/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_108"
  op: "IsVariableInitialized"
  input: "conv6/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_109"
  op: "IsVariableInitialized"
  input: "conv6/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_110"
  op: "IsVariableInitialized"
  input: "conv6/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_111"
  op: "IsVariableInitialized"
  input: "conv6/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_112"
  op: "IsVariableInitialized"
  input: "conv7/dw/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_113"
  op: "IsVariableInitialized"
  input: "conv7/dw/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_114"
  op: "IsVariableInitialized"
  input: "conv7/dw/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_115"
  op: "IsVariableInitialized"
  input: "conv7/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_116"
  op: "IsVariableInitialized"
  input: "conv7/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_117"
  op: "IsVariableInitialized"
  input: "conv7/dw/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_118"
  op: "IsVariableInitialized"
  input: "conv7/dw/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_119"
  op: "IsVariableInitialized"
  input: "conv7/dw/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_120"
  op: "IsVariableInitialized"
  input: "conv7/dw/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_121"
  op: "IsVariableInitialized"
  input: "conv7/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_122"
  op: "IsVariableInitialized"
  input: "conv7/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_123"
  op: "IsVariableInitialized"
  input: "conv7/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_124"
  op: "IsVariableInitialized"
  input: "conv7/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_125"
  op: "IsVariableInitialized"
  input: "conv7/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_126"
  op: "IsVariableInitialized"
  input: "conv7/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_127"
  op: "IsVariableInitialized"
  input: "conv7/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_128"
  op: "IsVariableInitialized"
  input: "conv7/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_129"
  op: "IsVariableInitialized"
  input: "conv7/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_130"
  op: "IsVariableInitialized"
  input: "conv8/dw/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_131"
  op: "IsVariableInitialized"
  input: "conv8/dw/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_132"
  op: "IsVariableInitialized"
  input: "conv8/dw/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_133"
  op: "IsVariableInitialized"
  input: "conv8/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_134"
  op: "IsVariableInitialized"
  input: "conv8/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_135"
  op: "IsVariableInitialized"
  input: "conv8/dw/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_136"
  op: "IsVariableInitialized"
  input: "conv8/dw/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_137"
  op: "IsVariableInitialized"
  input: "conv8/dw/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_138"
  op: "IsVariableInitialized"
  input: "conv8/dw/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_139"
  op: "IsVariableInitialized"
  input: "conv8/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_140"
  op: "IsVariableInitialized"
  input: "conv8/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_141"
  op: "IsVariableInitialized"
  input: "conv8/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_142"
  op: "IsVariableInitialized"
  input: "conv8/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_143"
  op: "IsVariableInitialized"
  input: "conv8/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_144"
  op: "IsVariableInitialized"
  input: "conv8/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_145"
  op: "IsVariableInitialized"
  input: "conv8/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_146"
  op: "IsVariableInitialized"
  input: "conv8/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_147"
  op: "IsVariableInitialized"
  input: "conv8/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_148"
  op: "IsVariableInitialized"
  input: "conv9/dw/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_149"
  op: "IsVariableInitialized"
  input: "conv9/dw/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_150"
  op: "IsVariableInitialized"
  input: "conv9/dw/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_151"
  op: "IsVariableInitialized"
  input: "conv9/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_152"
  op: "IsVariableInitialized"
  input: "conv9/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_153"
  op: "IsVariableInitialized"
  input: "conv9/dw/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_154"
  op: "IsVariableInitialized"
  input: "conv9/dw/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_155"
  op: "IsVariableInitialized"
  input: "conv9/dw/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_156"
  op: "IsVariableInitialized"
  input: "conv9/dw/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_157"
  op: "IsVariableInitialized"
  input: "conv9/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_158"
  op: "IsVariableInitialized"
  input: "conv9/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_159"
  op: "IsVariableInitialized"
  input: "conv9/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_160"
  op: "IsVariableInitialized"
  input: "conv9/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_161"
  op: "IsVariableInitialized"
  input: "conv9/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_162"
  op: "IsVariableInitialized"
  input: "conv9/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_163"
  op: "IsVariableInitialized"
  input: "conv9/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_164"
  op: "IsVariableInitialized"
  input: "conv9/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_165"
  op: "IsVariableInitialized"
  input: "conv9/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_166"
  op: "IsVariableInitialized"
  input: "conv10/dw/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_167"
  op: "IsVariableInitialized"
  input: "conv10/dw/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_168"
  op: "IsVariableInitialized"
  input: "conv10/dw/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_169"
  op: "IsVariableInitialized"
  input: "conv10/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_170"
  op: "IsVariableInitialized"
  input: "conv10/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_171"
  op: "IsVariableInitialized"
  input: "conv10/dw/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_172"
  op: "IsVariableInitialized"
  input: "conv10/dw/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_173"
  op: "IsVariableInitialized"
  input: "conv10/dw/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_174"
  op: "IsVariableInitialized"
  input: "conv10/dw/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_175"
  op: "IsVariableInitialized"
  input: "conv10/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_176"
  op: "IsVariableInitialized"
  input: "conv10/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_177"
  op: "IsVariableInitialized"
  input: "conv10/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_178"
  op: "IsVariableInitialized"
  input: "conv10/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_179"
  op: "IsVariableInitialized"
  input: "conv10/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_180"
  op: "IsVariableInitialized"
  input: "conv10/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_181"
  op: "IsVariableInitialized"
  input: "conv10/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_182"
  op: "IsVariableInitialized"
  input: "conv10/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_183"
  op: "IsVariableInitialized"
  input: "conv10/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_184"
  op: "IsVariableInitialized"
  input: "conv11/dw/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_185"
  op: "IsVariableInitialized"
  input: "conv11/dw/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_186"
  op: "IsVariableInitialized"
  input: "conv11/dw/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_187"
  op: "IsVariableInitialized"
  input: "conv11/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_188"
  op: "IsVariableInitialized"
  input: "conv11/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_189"
  op: "IsVariableInitialized"
  input: "conv11/dw/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_190"
  op: "IsVariableInitialized"
  input: "conv11/dw/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_191"
  op: "IsVariableInitialized"
  input: "conv11/dw/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_192"
  op: "IsVariableInitialized"
  input: "conv11/dw/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_193"
  op: "IsVariableInitialized"
  input: "conv11/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_194"
  op: "IsVariableInitialized"
  input: "conv11/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_195"
  op: "IsVariableInitialized"
  input: "conv11/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_196"
  op: "IsVariableInitialized"
  input: "conv11/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_197"
  op: "IsVariableInitialized"
  input: "conv11/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_198"
  op: "IsVariableInitialized"
  input: "conv11/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_199"
  op: "IsVariableInitialized"
  input: "conv11/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_200"
  op: "IsVariableInitialized"
  input: "conv11/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_201"
  op: "IsVariableInitialized"
  input: "conv11/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_202"
  op: "IsVariableInitialized"
  input: "conv12/dw/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_203"
  op: "IsVariableInitialized"
  input: "conv12/dw/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_204"
  op: "IsVariableInitialized"
  input: "conv12/dw/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_205"
  op: "IsVariableInitialized"
  input: "conv12/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_206"
  op: "IsVariableInitialized"
  input: "conv12/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_207"
  op: "IsVariableInitialized"
  input: "conv12/dw/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_208"
  op: "IsVariableInitialized"
  input: "conv12/dw/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_209"
  op: "IsVariableInitialized"
  input: "conv12/dw/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_210"
  op: "IsVariableInitialized"
  input: "conv12/dw/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_211"
  op: "IsVariableInitialized"
  input: "conv12/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_212"
  op: "IsVariableInitialized"
  input: "conv12/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_213"
  op: "IsVariableInitialized"
  input: "conv12/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_214"
  op: "IsVariableInitialized"
  input: "conv12/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_215"
  op: "IsVariableInitialized"
  input: "conv12/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_216"
  op: "IsVariableInitialized"
  input: "conv12/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_217"
  op: "IsVariableInitialized"
  input: "conv12/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_218"
  op: "IsVariableInitialized"
  input: "conv12/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_219"
  op: "IsVariableInitialized"
  input: "conv12/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_220"
  op: "IsVariableInitialized"
  input: "conv13/dw/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_221"
  op: "IsVariableInitialized"
  input: "conv13/dw/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_222"
  op: "IsVariableInitialized"
  input: "conv13/dw/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_223"
  op: "IsVariableInitialized"
  input: "conv13/dw/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_224"
  op: "IsVariableInitialized"
  input: "conv13/dw/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_225"
  op: "IsVariableInitialized"
  input: "conv13/dw/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_226"
  op: "IsVariableInitialized"
  input: "conv13/dw/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_227"
  op: "IsVariableInitialized"
  input: "conv13/dw/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_228"
  op: "IsVariableInitialized"
  input: "conv13/dw/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_229"
  op: "IsVariableInitialized"
  input: "conv13/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_230"
  op: "IsVariableInitialized"
  input: "conv13/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_231"
  op: "IsVariableInitialized"
  input: "conv13/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_232"
  op: "IsVariableInitialized"
  input: "conv13/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_233"
  op: "IsVariableInitialized"
  input: "conv13/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_234"
  op: "IsVariableInitialized"
  input: "conv13/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_235"
  op: "IsVariableInitialized"
  input: "conv13/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_236"
  op: "IsVariableInitialized"
  input: "conv13/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_237"
  op: "IsVariableInitialized"
  input: "conv13/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_238"
  op: "IsVariableInitialized"
  input: "conv14_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_239"
  op: "IsVariableInitialized"
  input: "conv14_1/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_240"
  op: "IsVariableInitialized"
  input: "conv14_1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_241"
  op: "IsVariableInitialized"
  input: "conv14_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_242"
  op: "IsVariableInitialized"
  input: "conv14_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_243"
  op: "IsVariableInitialized"
  input: "conv14_1/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_244"
  op: "IsVariableInitialized"
  input: "conv14_1/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_245"
  op: "IsVariableInitialized"
  input: "conv14_1/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_246"
  op: "IsVariableInitialized"
  input: "conv14_1/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_247"
  op: "IsVariableInitialized"
  input: "conv14_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_248"
  op: "IsVariableInitialized"
  input: "conv14_2/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_249"
  op: "IsVariableInitialized"
  input: "conv14_2/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_250"
  op: "IsVariableInitialized"
  input: "conv14_2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_251"
  op: "IsVariableInitialized"
  input: "conv14_2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_252"
  op: "IsVariableInitialized"
  input: "conv14_2/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_253"
  op: "IsVariableInitialized"
  input: "conv14_2/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_254"
  op: "IsVariableInitialized"
  input: "conv14_2/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_255"
  op: "IsVariableInitialized"
  input: "conv14_2/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_256"
  op: "IsVariableInitialized"
  input: "conv15_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_257"
  op: "IsVariableInitialized"
  input: "conv15_1/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_258"
  op: "IsVariableInitialized"
  input: "conv15_1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_259"
  op: "IsVariableInitialized"
  input: "conv15_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_260"
  op: "IsVariableInitialized"
  input: "conv15_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_261"
  op: "IsVariableInitialized"
  input: "conv15_1/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_262"
  op: "IsVariableInitialized"
  input: "conv15_1/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_263"
  op: "IsVariableInitialized"
  input: "conv15_1/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_264"
  op: "IsVariableInitialized"
  input: "conv15_1/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_265"
  op: "IsVariableInitialized"
  input: "conv15_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_266"
  op: "IsVariableInitialized"
  input: "conv15_2/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_267"
  op: "IsVariableInitialized"
  input: "conv15_2/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_268"
  op: "IsVariableInitialized"
  input: "conv15_2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_269"
  op: "IsVariableInitialized"
  input: "conv15_2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_270"
  op: "IsVariableInitialized"
  input: "conv15_2/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_271"
  op: "IsVariableInitialized"
  input: "conv15_2/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_272"
  op: "IsVariableInitialized"
  input: "conv15_2/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_273"
  op: "IsVariableInitialized"
  input: "conv15_2/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_274"
  op: "IsVariableInitialized"
  input: "conv16_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_275"
  op: "IsVariableInitialized"
  input: "conv16_1/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_276"
  op: "IsVariableInitialized"
  input: "conv16_1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_277"
  op: "IsVariableInitialized"
  input: "conv16_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_278"
  op: "IsVariableInitialized"
  input: "conv16_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_279"
  op: "IsVariableInitialized"
  input: "conv16_1/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_280"
  op: "IsVariableInitialized"
  input: "conv16_1/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_281"
  op: "IsVariableInitialized"
  input: "conv16_1/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_282"
  op: "IsVariableInitialized"
  input: "conv16_1/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_283"
  op: "IsVariableInitialized"
  input: "conv16_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_284"
  op: "IsVariableInitialized"
  input: "conv16_2/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_285"
  op: "IsVariableInitialized"
  input: "conv16_2/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_286"
  op: "IsVariableInitialized"
  input: "conv16_2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_287"
  op: "IsVariableInitialized"
  input: "conv16_2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_288"
  op: "IsVariableInitialized"
  input: "conv16_2/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_289"
  op: "IsVariableInitialized"
  input: "conv16_2/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_290"
  op: "IsVariableInitialized"
  input: "conv16_2/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_291"
  op: "IsVariableInitialized"
  input: "conv16_2/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_292"
  op: "IsVariableInitialized"
  input: "conv17_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_293"
  op: "IsVariableInitialized"
  input: "conv17_1/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_294"
  op: "IsVariableInitialized"
  input: "conv17_1/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_295"
  op: "IsVariableInitialized"
  input: "conv17_1/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_296"
  op: "IsVariableInitialized"
  input: "conv17_1/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_297"
  op: "IsVariableInitialized"
  input: "conv17_1/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_298"
  op: "IsVariableInitialized"
  input: "conv17_1/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_299"
  op: "IsVariableInitialized"
  input: "conv17_1/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_300"
  op: "IsVariableInitialized"
  input: "conv17_1/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_301"
  op: "IsVariableInitialized"
  input: "conv17_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_302"
  op: "IsVariableInitialized"
  input: "conv17_2/bn/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_303"
  op: "IsVariableInitialized"
  input: "conv17_2/bn/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_304"
  op: "IsVariableInitialized"
  input: "conv17_2/bn/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_305"
  op: "IsVariableInitialized"
  input: "conv17_2/bn/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_306"
  op: "IsVariableInitialized"
  input: "conv17_2/bn/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_307"
  op: "IsVariableInitialized"
  input: "conv17_2/bn/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_308"
  op: "IsVariableInitialized"
  input: "conv17_2/bn/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_309"
  op: "IsVariableInitialized"
  input: "conv17_2/bn/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_310"
  op: "IsVariableInitialized"
  input: "conv11_mbox_conf/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_conf/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_311"
  op: "IsVariableInitialized"
  input: "conv11_mbox_conf/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_conf/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_312"
  op: "IsVariableInitialized"
  input: "conv13_mbox_conf/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_conf/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_313"
  op: "IsVariableInitialized"
  input: "conv13_mbox_conf/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_conf/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_314"
  op: "IsVariableInitialized"
  input: "conv14_2_mbox_conf/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_conf/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_315"
  op: "IsVariableInitialized"
  input: "conv14_2_mbox_conf/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_conf/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_316"
  op: "IsVariableInitialized"
  input: "conv15_2_mbox_conf/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_conf/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_317"
  op: "IsVariableInitialized"
  input: "conv15_2_mbox_conf/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_conf/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_318"
  op: "IsVariableInitialized"
  input: "conv16_2_mbox_conf/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_conf/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_319"
  op: "IsVariableInitialized"
  input: "conv16_2_mbox_conf/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_conf/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_320"
  op: "IsVariableInitialized"
  input: "conv17_2_mbox_conf/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_conf/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_321"
  op: "IsVariableInitialized"
  input: "conv17_2_mbox_conf/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_conf/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_322"
  op: "IsVariableInitialized"
  input: "conv11_mbox_loc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_loc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_323"
  op: "IsVariableInitialized"
  input: "conv11_mbox_loc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_loc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_324"
  op: "IsVariableInitialized"
  input: "conv13_mbox_loc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_loc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_325"
  op: "IsVariableInitialized"
  input: "conv13_mbox_loc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_loc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_326"
  op: "IsVariableInitialized"
  input: "conv14_2_mbox_loc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_loc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_327"
  op: "IsVariableInitialized"
  input: "conv14_2_mbox_loc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_loc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_328"
  op: "IsVariableInitialized"
  input: "conv15_2_mbox_loc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_loc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_329"
  op: "IsVariableInitialized"
  input: "conv15_2_mbox_loc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_loc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_330"
  op: "IsVariableInitialized"
  input: "conv16_2_mbox_loc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_loc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_331"
  op: "IsVariableInitialized"
  input: "conv16_2_mbox_loc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_loc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_332"
  op: "IsVariableInitialized"
  input: "conv17_2_mbox_loc/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_loc/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_333"
  op: "IsVariableInitialized"
  input: "conv17_2_mbox_loc/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_loc/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_334"
  op: "IsVariableInitialized"
  input: "conv0_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_335"
  op: "IsVariableInitialized"
  input: "conv0/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_336"
  op: "IsVariableInitialized"
  input: "conv0/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_337"
  op: "IsVariableInitialized"
  input: "conv0/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_338"
  op: "IsVariableInitialized"
  input: "conv0/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_339"
  op: "IsVariableInitialized"
  input: "conv0/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_340"
  op: "IsVariableInitialized"
  input: "conv0/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_341"
  op: "IsVariableInitialized"
  input: "conv0/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_342"
  op: "IsVariableInitialized"
  input: "conv0/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv0/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_343"
  op: "IsVariableInitialized"
  input: "conv1/dw_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_344"
  op: "IsVariableInitialized"
  input: "conv1/dw/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_345"
  op: "IsVariableInitialized"
  input: "conv1/dw/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_346"
  op: "IsVariableInitialized"
  input: "conv1/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_347"
  op: "IsVariableInitialized"
  input: "conv1/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_348"
  op: "IsVariableInitialized"
  input: "conv1/dw/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_349"
  op: "IsVariableInitialized"
  input: "conv1/dw/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_350"
  op: "IsVariableInitialized"
  input: "conv1/dw/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_351"
  op: "IsVariableInitialized"
  input: "conv1/dw/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_352"
  op: "IsVariableInitialized"
  input: "conv1_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_353"
  op: "IsVariableInitialized"
  input: "conv1/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_354"
  op: "IsVariableInitialized"
  input: "conv1/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_355"
  op: "IsVariableInitialized"
  input: "conv1/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_356"
  op: "IsVariableInitialized"
  input: "conv1/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_357"
  op: "IsVariableInitialized"
  input: "conv1/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_358"
  op: "IsVariableInitialized"
  input: "conv1/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_359"
  op: "IsVariableInitialized"
  input: "conv1/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_360"
  op: "IsVariableInitialized"
  input: "conv1/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_361"
  op: "IsVariableInitialized"
  input: "conv2/dw_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_362"
  op: "IsVariableInitialized"
  input: "conv2/dw/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_363"
  op: "IsVariableInitialized"
  input: "conv2/dw/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_364"
  op: "IsVariableInitialized"
  input: "conv2/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_365"
  op: "IsVariableInitialized"
  input: "conv2/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_366"
  op: "IsVariableInitialized"
  input: "conv2/dw/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_367"
  op: "IsVariableInitialized"
  input: "conv2/dw/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_368"
  op: "IsVariableInitialized"
  input: "conv2/dw/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_369"
  op: "IsVariableInitialized"
  input: "conv2/dw/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_370"
  op: "IsVariableInitialized"
  input: "conv2_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_371"
  op: "IsVariableInitialized"
  input: "conv2/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_372"
  op: "IsVariableInitialized"
  input: "conv2/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_373"
  op: "IsVariableInitialized"
  input: "conv2/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_374"
  op: "IsVariableInitialized"
  input: "conv2/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_375"
  op: "IsVariableInitialized"
  input: "conv2/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_376"
  op: "IsVariableInitialized"
  input: "conv2/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_377"
  op: "IsVariableInitialized"
  input: "conv2/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_378"
  op: "IsVariableInitialized"
  input: "conv2/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_379"
  op: "IsVariableInitialized"
  input: "conv3/dw_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_380"
  op: "IsVariableInitialized"
  input: "conv3/dw/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_381"
  op: "IsVariableInitialized"
  input: "conv3/dw/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_382"
  op: "IsVariableInitialized"
  input: "conv3/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_383"
  op: "IsVariableInitialized"
  input: "conv3/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_384"
  op: "IsVariableInitialized"
  input: "conv3/dw/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_385"
  op: "IsVariableInitialized"
  input: "conv3/dw/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_386"
  op: "IsVariableInitialized"
  input: "conv3/dw/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_387"
  op: "IsVariableInitialized"
  input: "conv3/dw/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_388"
  op: "IsVariableInitialized"
  input: "conv3_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_389"
  op: "IsVariableInitialized"
  input: "conv3/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_390"
  op: "IsVariableInitialized"
  input: "conv3/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_391"
  op: "IsVariableInitialized"
  input: "conv3/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_392"
  op: "IsVariableInitialized"
  input: "conv3/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_393"
  op: "IsVariableInitialized"
  input: "conv3/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_394"
  op: "IsVariableInitialized"
  input: "conv3/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_395"
  op: "IsVariableInitialized"
  input: "conv3/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_396"
  op: "IsVariableInitialized"
  input: "conv3/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv3/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_397"
  op: "IsVariableInitialized"
  input: "conv4/dw_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_398"
  op: "IsVariableInitialized"
  input: "conv4/dw/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_399"
  op: "IsVariableInitialized"
  input: "conv4/dw/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_400"
  op: "IsVariableInitialized"
  input: "conv4/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_401"
  op: "IsVariableInitialized"
  input: "conv4/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_402"
  op: "IsVariableInitialized"
  input: "conv4/dw/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_403"
  op: "IsVariableInitialized"
  input: "conv4/dw/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_404"
  op: "IsVariableInitialized"
  input: "conv4/dw/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_405"
  op: "IsVariableInitialized"
  input: "conv4/dw/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_406"
  op: "IsVariableInitialized"
  input: "conv4_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_407"
  op: "IsVariableInitialized"
  input: "conv4/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_408"
  op: "IsVariableInitialized"
  input: "conv4/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_409"
  op: "IsVariableInitialized"
  input: "conv4/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_410"
  op: "IsVariableInitialized"
  input: "conv4/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_411"
  op: "IsVariableInitialized"
  input: "conv4/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_412"
  op: "IsVariableInitialized"
  input: "conv4/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_413"
  op: "IsVariableInitialized"
  input: "conv4/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_414"
  op: "IsVariableInitialized"
  input: "conv4/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv4/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_415"
  op: "IsVariableInitialized"
  input: "conv5/dw_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_416"
  op: "IsVariableInitialized"
  input: "conv5/dw/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_417"
  op: "IsVariableInitialized"
  input: "conv5/dw/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_418"
  op: "IsVariableInitialized"
  input: "conv5/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_419"
  op: "IsVariableInitialized"
  input: "conv5/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_420"
  op: "IsVariableInitialized"
  input: "conv5/dw/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_421"
  op: "IsVariableInitialized"
  input: "conv5/dw/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_422"
  op: "IsVariableInitialized"
  input: "conv5/dw/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_423"
  op: "IsVariableInitialized"
  input: "conv5/dw/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_424"
  op: "IsVariableInitialized"
  input: "conv5_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_425"
  op: "IsVariableInitialized"
  input: "conv5/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_426"
  op: "IsVariableInitialized"
  input: "conv5/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_427"
  op: "IsVariableInitialized"
  input: "conv5/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_428"
  op: "IsVariableInitialized"
  input: "conv5/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_429"
  op: "IsVariableInitialized"
  input: "conv5/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_430"
  op: "IsVariableInitialized"
  input: "conv5/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_431"
  op: "IsVariableInitialized"
  input: "conv5/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_432"
  op: "IsVariableInitialized"
  input: "conv5/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv5/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_433"
  op: "IsVariableInitialized"
  input: "conv6/dw_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_434"
  op: "IsVariableInitialized"
  input: "conv6/dw/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_435"
  op: "IsVariableInitialized"
  input: "conv6/dw/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_436"
  op: "IsVariableInitialized"
  input: "conv6/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_437"
  op: "IsVariableInitialized"
  input: "conv6/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_438"
  op: "IsVariableInitialized"
  input: "conv6/dw/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_439"
  op: "IsVariableInitialized"
  input: "conv6/dw/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_440"
  op: "IsVariableInitialized"
  input: "conv6/dw/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_441"
  op: "IsVariableInitialized"
  input: "conv6/dw/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_442"
  op: "IsVariableInitialized"
  input: "conv6_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_443"
  op: "IsVariableInitialized"
  input: "conv6/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_444"
  op: "IsVariableInitialized"
  input: "conv6/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_445"
  op: "IsVariableInitialized"
  input: "conv6/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_446"
  op: "IsVariableInitialized"
  input: "conv6/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_447"
  op: "IsVariableInitialized"
  input: "conv6/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_448"
  op: "IsVariableInitialized"
  input: "conv6/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_449"
  op: "IsVariableInitialized"
  input: "conv6/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_450"
  op: "IsVariableInitialized"
  input: "conv6/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv6/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_451"
  op: "IsVariableInitialized"
  input: "conv7/dw_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_452"
  op: "IsVariableInitialized"
  input: "conv7/dw/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_453"
  op: "IsVariableInitialized"
  input: "conv7/dw/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_454"
  op: "IsVariableInitialized"
  input: "conv7/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_455"
  op: "IsVariableInitialized"
  input: "conv7/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_456"
  op: "IsVariableInitialized"
  input: "conv7/dw/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_457"
  op: "IsVariableInitialized"
  input: "conv7/dw/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_458"
  op: "IsVariableInitialized"
  input: "conv7/dw/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_459"
  op: "IsVariableInitialized"
  input: "conv7/dw/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_460"
  op: "IsVariableInitialized"
  input: "conv7_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_461"
  op: "IsVariableInitialized"
  input: "conv7/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_462"
  op: "IsVariableInitialized"
  input: "conv7/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_463"
  op: "IsVariableInitialized"
  input: "conv7/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_464"
  op: "IsVariableInitialized"
  input: "conv7/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_465"
  op: "IsVariableInitialized"
  input: "conv7/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_466"
  op: "IsVariableInitialized"
  input: "conv7/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_467"
  op: "IsVariableInitialized"
  input: "conv7/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_468"
  op: "IsVariableInitialized"
  input: "conv7/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv7/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_469"
  op: "IsVariableInitialized"
  input: "conv8/dw_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_470"
  op: "IsVariableInitialized"
  input: "conv8/dw/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_471"
  op: "IsVariableInitialized"
  input: "conv8/dw/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_472"
  op: "IsVariableInitialized"
  input: "conv8/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_473"
  op: "IsVariableInitialized"
  input: "conv8/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_474"
  op: "IsVariableInitialized"
  input: "conv8/dw/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_475"
  op: "IsVariableInitialized"
  input: "conv8/dw/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_476"
  op: "IsVariableInitialized"
  input: "conv8/dw/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_477"
  op: "IsVariableInitialized"
  input: "conv8/dw/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_478"
  op: "IsVariableInitialized"
  input: "conv8_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_479"
  op: "IsVariableInitialized"
  input: "conv8/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_480"
  op: "IsVariableInitialized"
  input: "conv8/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_481"
  op: "IsVariableInitialized"
  input: "conv8/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_482"
  op: "IsVariableInitialized"
  input: "conv8/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_483"
  op: "IsVariableInitialized"
  input: "conv8/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_484"
  op: "IsVariableInitialized"
  input: "conv8/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_485"
  op: "IsVariableInitialized"
  input: "conv8/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_486"
  op: "IsVariableInitialized"
  input: "conv8/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv8/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_487"
  op: "IsVariableInitialized"
  input: "conv9/dw_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_488"
  op: "IsVariableInitialized"
  input: "conv9/dw/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_489"
  op: "IsVariableInitialized"
  input: "conv9/dw/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_490"
  op: "IsVariableInitialized"
  input: "conv9/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_491"
  op: "IsVariableInitialized"
  input: "conv9/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_492"
  op: "IsVariableInitialized"
  input: "conv9/dw/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_493"
  op: "IsVariableInitialized"
  input: "conv9/dw/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_494"
  op: "IsVariableInitialized"
  input: "conv9/dw/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_495"
  op: "IsVariableInitialized"
  input: "conv9/dw/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_496"
  op: "IsVariableInitialized"
  input: "conv9_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_497"
  op: "IsVariableInitialized"
  input: "conv9/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_498"
  op: "IsVariableInitialized"
  input: "conv9/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_499"
  op: "IsVariableInitialized"
  input: "conv9/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_500"
  op: "IsVariableInitialized"
  input: "conv9/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_501"
  op: "IsVariableInitialized"
  input: "conv9/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_502"
  op: "IsVariableInitialized"
  input: "conv9/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_503"
  op: "IsVariableInitialized"
  input: "conv9/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_504"
  op: "IsVariableInitialized"
  input: "conv9/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv9/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_505"
  op: "IsVariableInitialized"
  input: "conv10/dw_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_506"
  op: "IsVariableInitialized"
  input: "conv10/dw/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_507"
  op: "IsVariableInitialized"
  input: "conv10/dw/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_508"
  op: "IsVariableInitialized"
  input: "conv10/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_509"
  op: "IsVariableInitialized"
  input: "conv10/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_510"
  op: "IsVariableInitialized"
  input: "conv10/dw/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_511"
  op: "IsVariableInitialized"
  input: "conv10/dw/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_512"
  op: "IsVariableInitialized"
  input: "conv10/dw/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_513"
  op: "IsVariableInitialized"
  input: "conv10/dw/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_514"
  op: "IsVariableInitialized"
  input: "conv10_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_515"
  op: "IsVariableInitialized"
  input: "conv10/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_516"
  op: "IsVariableInitialized"
  input: "conv10/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_517"
  op: "IsVariableInitialized"
  input: "conv10/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_518"
  op: "IsVariableInitialized"
  input: "conv10/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_519"
  op: "IsVariableInitialized"
  input: "conv10/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_520"
  op: "IsVariableInitialized"
  input: "conv10/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_521"
  op: "IsVariableInitialized"
  input: "conv10/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_522"
  op: "IsVariableInitialized"
  input: "conv10/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv10/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_523"
  op: "IsVariableInitialized"
  input: "conv11/dw_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_524"
  op: "IsVariableInitialized"
  input: "conv11/dw/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_525"
  op: "IsVariableInitialized"
  input: "conv11/dw/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_526"
  op: "IsVariableInitialized"
  input: "conv11/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_527"
  op: "IsVariableInitialized"
  input: "conv11/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_528"
  op: "IsVariableInitialized"
  input: "conv11/dw/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_529"
  op: "IsVariableInitialized"
  input: "conv11/dw/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_530"
  op: "IsVariableInitialized"
  input: "conv11/dw/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_531"
  op: "IsVariableInitialized"
  input: "conv11/dw/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_532"
  op: "IsVariableInitialized"
  input: "conv11_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_533"
  op: "IsVariableInitialized"
  input: "conv11/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_534"
  op: "IsVariableInitialized"
  input: "conv11/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_535"
  op: "IsVariableInitialized"
  input: "conv11/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_536"
  op: "IsVariableInitialized"
  input: "conv11/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_537"
  op: "IsVariableInitialized"
  input: "conv11/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_538"
  op: "IsVariableInitialized"
  input: "conv11/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_539"
  op: "IsVariableInitialized"
  input: "conv11/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_540"
  op: "IsVariableInitialized"
  input: "conv11/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_541"
  op: "IsVariableInitialized"
  input: "conv12/dw_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_542"
  op: "IsVariableInitialized"
  input: "conv12/dw/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_543"
  op: "IsVariableInitialized"
  input: "conv12/dw/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_544"
  op: "IsVariableInitialized"
  input: "conv12/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_545"
  op: "IsVariableInitialized"
  input: "conv12/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_546"
  op: "IsVariableInitialized"
  input: "conv12/dw/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_547"
  op: "IsVariableInitialized"
  input: "conv12/dw/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_548"
  op: "IsVariableInitialized"
  input: "conv12/dw/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_549"
  op: "IsVariableInitialized"
  input: "conv12/dw/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_550"
  op: "IsVariableInitialized"
  input: "conv12_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_551"
  op: "IsVariableInitialized"
  input: "conv12/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_552"
  op: "IsVariableInitialized"
  input: "conv12/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_553"
  op: "IsVariableInitialized"
  input: "conv12/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_554"
  op: "IsVariableInitialized"
  input: "conv12/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_555"
  op: "IsVariableInitialized"
  input: "conv12/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_556"
  op: "IsVariableInitialized"
  input: "conv12/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_557"
  op: "IsVariableInitialized"
  input: "conv12/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_558"
  op: "IsVariableInitialized"
  input: "conv12/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv12/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_559"
  op: "IsVariableInitialized"
  input: "conv13/dw_1/depthwise_kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw_1/depthwise_kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_560"
  op: "IsVariableInitialized"
  input: "conv13/dw/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_561"
  op: "IsVariableInitialized"
  input: "conv13/dw/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_562"
  op: "IsVariableInitialized"
  input: "conv13/dw/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_563"
  op: "IsVariableInitialized"
  input: "conv13/dw/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_564"
  op: "IsVariableInitialized"
  input: "conv13/dw/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_565"
  op: "IsVariableInitialized"
  input: "conv13/dw/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_566"
  op: "IsVariableInitialized"
  input: "conv13/dw/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_567"
  op: "IsVariableInitialized"
  input: "conv13/dw/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/dw/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_568"
  op: "IsVariableInitialized"
  input: "conv13_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_569"
  op: "IsVariableInitialized"
  input: "conv13/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_570"
  op: "IsVariableInitialized"
  input: "conv13/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_571"
  op: "IsVariableInitialized"
  input: "conv13/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_572"
  op: "IsVariableInitialized"
  input: "conv13/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_573"
  op: "IsVariableInitialized"
  input: "conv13/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_574"
  op: "IsVariableInitialized"
  input: "conv13/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_575"
  op: "IsVariableInitialized"
  input: "conv13/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_576"
  op: "IsVariableInitialized"
  input: "conv13/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_577"
  op: "IsVariableInitialized"
  input: "conv14_1_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_578"
  op: "IsVariableInitialized"
  input: "conv14_1/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_579"
  op: "IsVariableInitialized"
  input: "conv14_1/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_580"
  op: "IsVariableInitialized"
  input: "conv14_1/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_581"
  op: "IsVariableInitialized"
  input: "conv14_1/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_582"
  op: "IsVariableInitialized"
  input: "conv14_1/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_583"
  op: "IsVariableInitialized"
  input: "conv14_1/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_584"
  op: "IsVariableInitialized"
  input: "conv14_1/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_585"
  op: "IsVariableInitialized"
  input: "conv14_1/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_586"
  op: "IsVariableInitialized"
  input: "conv14_2_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_587"
  op: "IsVariableInitialized"
  input: "conv14_2/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_588"
  op: "IsVariableInitialized"
  input: "conv14_2/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_589"
  op: "IsVariableInitialized"
  input: "conv14_2/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_590"
  op: "IsVariableInitialized"
  input: "conv14_2/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_591"
  op: "IsVariableInitialized"
  input: "conv14_2/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_592"
  op: "IsVariableInitialized"
  input: "conv14_2/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_593"
  op: "IsVariableInitialized"
  input: "conv14_2/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_594"
  op: "IsVariableInitialized"
  input: "conv14_2/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_595"
  op: "IsVariableInitialized"
  input: "conv15_1_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_596"
  op: "IsVariableInitialized"
  input: "conv15_1/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_597"
  op: "IsVariableInitialized"
  input: "conv15_1/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_598"
  op: "IsVariableInitialized"
  input: "conv15_1/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_599"
  op: "IsVariableInitialized"
  input: "conv15_1/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_600"
  op: "IsVariableInitialized"
  input: "conv15_1/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_601"
  op: "IsVariableInitialized"
  input: "conv15_1/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_602"
  op: "IsVariableInitialized"
  input: "conv15_1/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_603"
  op: "IsVariableInitialized"
  input: "conv15_1/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_604"
  op: "IsVariableInitialized"
  input: "conv15_2_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_605"
  op: "IsVariableInitialized"
  input: "conv15_2/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_606"
  op: "IsVariableInitialized"
  input: "conv15_2/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_607"
  op: "IsVariableInitialized"
  input: "conv15_2/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_608"
  op: "IsVariableInitialized"
  input: "conv15_2/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_609"
  op: "IsVariableInitialized"
  input: "conv15_2/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_610"
  op: "IsVariableInitialized"
  input: "conv15_2/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_611"
  op: "IsVariableInitialized"
  input: "conv15_2/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_612"
  op: "IsVariableInitialized"
  input: "conv15_2/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_613"
  op: "IsVariableInitialized"
  input: "conv16_1_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_614"
  op: "IsVariableInitialized"
  input: "conv16_1/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_615"
  op: "IsVariableInitialized"
  input: "conv16_1/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_616"
  op: "IsVariableInitialized"
  input: "conv16_1/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_617"
  op: "IsVariableInitialized"
  input: "conv16_1/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_618"
  op: "IsVariableInitialized"
  input: "conv16_1/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_619"
  op: "IsVariableInitialized"
  input: "conv16_1/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_620"
  op: "IsVariableInitialized"
  input: "conv16_1/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_621"
  op: "IsVariableInitialized"
  input: "conv16_1/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_622"
  op: "IsVariableInitialized"
  input: "conv16_2_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_623"
  op: "IsVariableInitialized"
  input: "conv16_2/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_624"
  op: "IsVariableInitialized"
  input: "conv16_2/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_625"
  op: "IsVariableInitialized"
  input: "conv16_2/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_626"
  op: "IsVariableInitialized"
  input: "conv16_2/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_627"
  op: "IsVariableInitialized"
  input: "conv16_2/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_628"
  op: "IsVariableInitialized"
  input: "conv16_2/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_629"
  op: "IsVariableInitialized"
  input: "conv16_2/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_630"
  op: "IsVariableInitialized"
  input: "conv16_2/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_631"
  op: "IsVariableInitialized"
  input: "conv17_1_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_632"
  op: "IsVariableInitialized"
  input: "conv17_1/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_633"
  op: "IsVariableInitialized"
  input: "conv17_1/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_634"
  op: "IsVariableInitialized"
  input: "conv17_1/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_635"
  op: "IsVariableInitialized"
  input: "conv17_1/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_636"
  op: "IsVariableInitialized"
  input: "conv17_1/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_637"
  op: "IsVariableInitialized"
  input: "conv17_1/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_638"
  op: "IsVariableInitialized"
  input: "conv17_1/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_639"
  op: "IsVariableInitialized"
  input: "conv17_1/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_1/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_640"
  op: "IsVariableInitialized"
  input: "conv17_2_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_641"
  op: "IsVariableInitialized"
  input: "conv17_2/bn_1/gamma"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/gamma"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_642"
  op: "IsVariableInitialized"
  input: "conv17_2/bn_1/beta"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_643"
  op: "IsVariableInitialized"
  input: "conv17_2/bn_1/moving_mean"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_644"
  op: "IsVariableInitialized"
  input: "conv17_2/bn_1/moving_variance"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_645"
  op: "IsVariableInitialized"
  input: "conv17_2/bn_1/moving_mean/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_646"
  op: "IsVariableInitialized"
  input: "conv17_2/bn_1/moving_mean/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_647"
  op: "IsVariableInitialized"
  input: "conv17_2/bn_1/moving_variance/biased"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_648"
  op: "IsVariableInitialized"
  input: "conv17_2/bn_1/moving_variance/local_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2/bn_1/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_649"
  op: "IsVariableInitialized"
  input: "conv11_mbox_conf_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_650"
  op: "IsVariableInitialized"
  input: "conv11_mbox_conf_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_651"
  op: "IsVariableInitialized"
  input: "conv13_mbox_conf_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_652"
  op: "IsVariableInitialized"
  input: "conv13_mbox_conf_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_653"
  op: "IsVariableInitialized"
  input: "conv14_2_mbox_conf_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_654"
  op: "IsVariableInitialized"
  input: "conv14_2_mbox_conf_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_655"
  op: "IsVariableInitialized"
  input: "conv15_2_mbox_conf_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_656"
  op: "IsVariableInitialized"
  input: "conv15_2_mbox_conf_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_657"
  op: "IsVariableInitialized"
  input: "conv16_2_mbox_conf_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_658"
  op: "IsVariableInitialized"
  input: "conv16_2_mbox_conf_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_659"
  op: "IsVariableInitialized"
  input: "conv17_2_mbox_conf_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_conf_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_660"
  op: "IsVariableInitialized"
  input: "conv17_2_mbox_conf_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_conf_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_661"
  op: "IsVariableInitialized"
  input: "conv11_mbox_loc_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_662"
  op: "IsVariableInitialized"
  input: "conv11_mbox_loc_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv11_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_663"
  op: "IsVariableInitialized"
  input: "conv13_mbox_loc_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_664"
  op: "IsVariableInitialized"
  input: "conv13_mbox_loc_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv13_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_665"
  op: "IsVariableInitialized"
  input: "conv14_2_mbox_loc_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_666"
  op: "IsVariableInitialized"
  input: "conv14_2_mbox_loc_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv14_2_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_667"
  op: "IsVariableInitialized"
  input: "conv15_2_mbox_loc_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_668"
  op: "IsVariableInitialized"
  input: "conv15_2_mbox_loc_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv15_2_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_669"
  op: "IsVariableInitialized"
  input: "conv16_2_mbox_loc_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_670"
  op: "IsVariableInitialized"
  input: "conv16_2_mbox_loc_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv16_2_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_671"
  op: "IsVariableInitialized"
  input: "conv17_2_mbox_loc_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_loc_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_672"
  op: "IsVariableInitialized"
  input: "conv17_2_mbox_loc_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv17_2_mbox_loc_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^conv0/bn/moving_mean/biased/Assign"
  input: "^conv0/bn/moving_mean/local_step/Assign"
  input: "^conv0/bn/moving_variance/biased/Assign"
  input: "^conv0/bn/moving_variance/local_step/Assign"
  input: "^conv0/bn_1/beta/Assign"
  input: "^conv0/bn_1/gamma/Assign"
  input: "^conv0/bn_1/moving_mean/Assign"
  input: "^conv0/bn_1/moving_mean/biased/Assign"
  input: "^conv0/bn_1/moving_mean/local_step/Assign"
  input: "^conv0/bn_1/moving_variance/Assign"
  input: "^conv0/bn_1/moving_variance/biased/Assign"
  input: "^conv0/bn_1/moving_variance/local_step/Assign"
  input: "^conv0_1/kernel/Assign"
  input: "^conv1/bn/beta/Assign"
  input: "^conv1/bn/gamma/Assign"
  input: "^conv1/bn/moving_mean/Assign"
  input: "^conv1/bn/moving_mean/biased/Assign"
  input: "^conv1/bn/moving_mean/local_step/Assign"
  input: "^conv1/bn/moving_variance/Assign"
  input: "^conv1/bn/moving_variance/biased/Assign"
  input: "^conv1/bn/moving_variance/local_step/Assign"
  input: "^conv1/bn_1/beta/Assign"
  input: "^conv1/bn_1/gamma/Assign"
  input: "^conv1/bn_1/moving_mean/Assign"
  input: "^conv1/bn_1/moving_mean/biased/Assign"
  input: "^conv1/bn_1/moving_mean/local_step/Assign"
  input: "^conv1/bn_1/moving_variance/Assign"
  input: "^conv1/bn_1/moving_variance/biased/Assign"
  input: "^conv1/bn_1/moving_variance/local_step/Assign"
  input: "^conv1/dw/bn/beta/Assign"
  input: "^conv1/dw/bn/gamma/Assign"
  input: "^conv1/dw/bn/moving_mean/Assign"
  input: "^conv1/dw/bn/moving_mean/biased/Assign"
  input: "^conv1/dw/bn/moving_mean/local_step/Assign"
  input: "^conv1/dw/bn/moving_variance/Assign"
  input: "^conv1/dw/bn/moving_variance/biased/Assign"
  input: "^conv1/dw/bn/moving_variance/local_step/Assign"
  input: "^conv1/dw/bn_1/beta/Assign"
  input: "^conv1/dw/bn_1/gamma/Assign"
  input: "^conv1/dw/bn_1/moving_mean/Assign"
  input: "^conv1/dw/bn_1/moving_mean/biased/Assign"
  input: "^conv1/dw/bn_1/moving_mean/local_step/Assign"
  input: "^conv1/dw/bn_1/moving_variance/Assign"
  input: "^conv1/dw/bn_1/moving_variance/biased/Assign"
  input: "^conv1/dw/bn_1/moving_variance/local_step/Assign"
  input: "^conv1/dw/depthwise_kernel/Assign"
  input: "^conv1/dw_1/depthwise_kernel/Assign"
  input: "^conv1/kernel/Assign"
  input: "^conv10/bn/beta/Assign"
  input: "^conv10/bn/gamma/Assign"
  input: "^conv10/bn/moving_mean/Assign"
  input: "^conv10/bn/moving_mean/biased/Assign"
  input: "^conv10/bn/moving_mean/local_step/Assign"
  input: "^conv10/bn/moving_variance/Assign"
  input: "^conv10/bn/moving_variance/biased/Assign"
  input: "^conv10/bn/moving_variance/local_step/Assign"
  input: "^conv10/bn_1/beta/Assign"
  input: "^conv10/bn_1/gamma/Assign"
  input: "^conv10/bn_1/moving_mean/Assign"
  input: "^conv10/bn_1/moving_mean/biased/Assign"
  input: "^conv10/bn_1/moving_mean/local_step/Assign"
  input: "^conv10/bn_1/moving_variance/Assign"
  input: "^conv10/bn_1/moving_variance/biased/Assign"
  input: "^conv10/bn_1/moving_variance/local_step/Assign"
  input: "^conv10/dw/bn/beta/Assign"
  input: "^conv10/dw/bn/gamma/Assign"
  input: "^conv10/dw/bn/moving_mean/Assign"
  input: "^conv10/dw/bn/moving_mean/biased/Assign"
  input: "^conv10/dw/bn/moving_mean/local_step/Assign"
  input: "^conv10/dw/bn/moving_variance/Assign"
  input: "^conv10/dw/bn/moving_variance/biased/Assign"
  input: "^conv10/dw/bn/moving_variance/local_step/Assign"
  input: "^conv10/dw/bn_1/beta/Assign"
  input: "^conv10/dw/bn_1/gamma/Assign"
  input: "^conv10/dw/bn_1/moving_mean/Assign"
  input: "^conv10/dw/bn_1/moving_mean/biased/Assign"
  input: "^conv10/dw/bn_1/moving_mean/local_step/Assign"
  input: "^conv10/dw/bn_1/moving_variance/Assign"
  input: "^conv10/dw/bn_1/moving_variance/biased/Assign"
  input: "^conv10/dw/bn_1/moving_variance/local_step/Assign"
  input: "^conv10/dw/depthwise_kernel/Assign"
  input: "^conv10/dw_1/depthwise_kernel/Assign"
  input: "^conv10/kernel/Assign"
  input: "^conv10_1/kernel/Assign"
  input: "^conv11/bn/beta/Assign"
  input: "^conv11/bn/gamma/Assign"
  input: "^conv11/bn/moving_mean/Assign"
  input: "^conv11/bn/moving_mean/biased/Assign"
  input: "^conv11/bn/moving_mean/local_step/Assign"
  input: "^conv11/bn/moving_variance/Assign"
  input: "^conv11/bn/moving_variance/biased/Assign"
  input: "^conv11/bn/moving_variance/local_step/Assign"
  input: "^conv11/bn_1/beta/Assign"
  input: "^conv11/bn_1/gamma/Assign"
  input: "^conv11/bn_1/moving_mean/Assign"
  input: "^conv11/bn_1/moving_mean/biased/Assign"
  input: "^conv11/bn_1/moving_mean/local_step/Assign"
  input: "^conv11/bn_1/moving_variance/Assign"
  input: "^conv11/bn_1/moving_variance/biased/Assign"
  input: "^conv11/bn_1/moving_variance/local_step/Assign"
  input: "^conv11/dw/bn/beta/Assign"
  input: "^conv11/dw/bn/gamma/Assign"
  input: "^conv11/dw/bn/moving_mean/Assign"
  input: "^conv11/dw/bn/moving_mean/biased/Assign"
  input: "^conv11/dw/bn/moving_mean/local_step/Assign"
  input: "^conv11/dw/bn/moving_variance/Assign"
  input: "^conv11/dw/bn/moving_variance/biased/Assign"
  input: "^conv11/dw/bn/moving_variance/local_step/Assign"
  input: "^conv11/dw/bn_1/beta/Assign"
  input: "^conv11/dw/bn_1/gamma/Assign"
  input: "^conv11/dw/bn_1/moving_mean/Assign"
  input: "^conv11/dw/bn_1/moving_mean/biased/Assign"
  input: "^conv11/dw/bn_1/moving_mean/local_step/Assign"
  input: "^conv11/dw/bn_1/moving_variance/Assign"
  input: "^conv11/dw/bn_1/moving_variance/biased/Assign"
  input: "^conv11/dw/bn_1/moving_variance/local_step/Assign"
  input: "^conv11/dw/depthwise_kernel/Assign"
  input: "^conv11/dw_1/depthwise_kernel/Assign"
  input: "^conv11/kernel/Assign"
  input: "^conv11_1/kernel/Assign"
  input: "^conv11_mbox_conf/bias/Assign"
  input: "^conv11_mbox_conf/kernel/Assign"
  input: "^conv11_mbox_conf_1/bias/Assign"
  input: "^conv11_mbox_conf_1/kernel/Assign"
  input: "^conv11_mbox_loc/bias/Assign"
  input: "^conv11_mbox_loc/kernel/Assign"
  input: "^conv11_mbox_loc_1/bias/Assign"
  input: "^conv11_mbox_loc_1/kernel/Assign"
  input: "^conv12/bn/beta/Assign"
  input: "^conv12/bn/gamma/Assign"
  input: "^conv12/bn/moving_mean/Assign"
  input: "^conv12/bn/moving_mean/biased/Assign"
  input: "^conv12/bn/moving_mean/local_step/Assign"
  input: "^conv12/bn/moving_variance/Assign"
  input: "^conv12/bn/moving_variance/biased/Assign"
  input: "^conv12/bn/moving_variance/local_step/Assign"
  input: "^conv12/bn_1/beta/Assign"
  input: "^conv12/bn_1/gamma/Assign"
  input: "^conv12/bn_1/moving_mean/Assign"
  input: "^conv12/bn_1/moving_mean/biased/Assign"
  input: "^conv12/bn_1/moving_mean/local_step/Assign"
  input: "^conv12/bn_1/moving_variance/Assign"
  input: "^conv12/bn_1/moving_variance/biased/Assign"
  input: "^conv12/bn_1/moving_variance/local_step/Assign"
  input: "^conv12/dw/bn/beta/Assign"
  input: "^conv12/dw/bn/gamma/Assign"
  input: "^conv12/dw/bn/moving_mean/Assign"
  input: "^conv12/dw/bn/moving_mean/biased/Assign"
  input: "^conv12/dw/bn/moving_mean/local_step/Assign"
  input: "^conv12/dw/bn/moving_variance/Assign"
  input: "^conv12/dw/bn/moving_variance/biased/Assign"
  input: "^conv12/dw/bn/moving_variance/local_step/Assign"
  input: "^conv12/dw/bn_1/beta/Assign"
  input: "^conv12/dw/bn_1/gamma/Assign"
  input: "^conv12/dw/bn_1/moving_mean/Assign"
  input: "^conv12/dw/bn_1/moving_mean/biased/Assign"
  input: "^conv12/dw/bn_1/moving_mean/local_step/Assign"
  input: "^conv12/dw/bn_1/moving_variance/Assign"
  input: "^conv12/dw/bn_1/moving_variance/biased/Assign"
  input: "^conv12/dw/bn_1/moving_variance/local_step/Assign"
  input: "^conv12/dw/depthwise_kernel/Assign"
  input: "^conv12/dw_1/depthwise_kernel/Assign"
  input: "^conv12/kernel/Assign"
  input: "^conv12_1/kernel/Assign"
  input: "^conv13/bn/beta/Assign"
  input: "^conv13/bn/gamma/Assign"
  input: "^conv13/bn/moving_mean/Assign"
  input: "^conv13/bn/moving_mean/biased/Assign"
  input: "^conv13/bn/moving_mean/local_step/Assign"
  input: "^conv13/bn/moving_variance/Assign"
  input: "^conv13/bn/moving_variance/biased/Assign"
  input: "^conv13/bn/moving_variance/local_step/Assign"
  input: "^conv13/bn_1/beta/Assign"
  input: "^conv13/bn_1/gamma/Assign"
  input: "^conv13/bn_1/moving_mean/Assign"
  input: "^conv13/bn_1/moving_mean/biased/Assign"
  input: "^conv13/bn_1/moving_mean/local_step/Assign"
  input: "^conv13/bn_1/moving_variance/Assign"
  input: "^conv13/bn_1/moving_variance/biased/Assign"
  input: "^conv13/bn_1/moving_variance/local_step/Assign"
  input: "^conv13/dw/bn/beta/Assign"
  input: "^conv13/dw/bn/gamma/Assign"
  input: "^conv13/dw/bn/moving_mean/Assign"
  input: "^conv13/dw/bn/moving_mean/biased/Assign"
  input: "^conv13/dw/bn/moving_mean/local_step/Assign"
  input: "^conv13/dw/bn/moving_variance/Assign"
  input: "^conv13/dw/bn/moving_variance/biased/Assign"
  input: "^conv13/dw/bn/moving_variance/local_step/Assign"
  input: "^conv13/dw/bn_1/beta/Assign"
  input: "^conv13/dw/bn_1/gamma/Assign"
  input: "^conv13/dw/bn_1/moving_mean/Assign"
  input: "^conv13/dw/bn_1/moving_mean/biased/Assign"
  input: "^conv13/dw/bn_1/moving_mean/local_step/Assign"
  input: "^conv13/dw/bn_1/moving_variance/Assign"
  input: "^conv13/dw/bn_1/moving_variance/biased/Assign"
  input: "^conv13/dw/bn_1/moving_variance/local_step/Assign"
  input: "^conv13/dw/depthwise_kernel/Assign"
  input: "^conv13/dw_1/depthwise_kernel/Assign"
  input: "^conv13/kernel/Assign"
  input: "^conv13_1/kernel/Assign"
  input: "^conv13_mbox_conf/bias/Assign"
  input: "^conv13_mbox_conf/kernel/Assign"
  input: "^conv13_mbox_conf_1/bias/Assign"
  input: "^conv13_mbox_conf_1/kernel/Assign"
  input: "^conv13_mbox_loc/bias/Assign"
  input: "^conv13_mbox_loc/kernel/Assign"
  input: "^conv13_mbox_loc_1/bias/Assign"
  input: "^conv13_mbox_loc_1/kernel/Assign"
  input: "^conv14_1/bn/beta/Assign"
  input: "^conv14_1/bn/gamma/Assign"
  input: "^conv14_1/bn/moving_mean/Assign"
  input: "^conv14_1/bn/moving_mean/biased/Assign"
  input: "^conv14_1/bn/moving_mean/local_step/Assign"
  input: "^conv14_1/bn/moving_variance/Assign"
  input: "^conv14_1/bn/moving_variance/biased/Assign"
  input: "^conv14_1/bn/moving_variance/local_step/Assign"
  input: "^conv14_1/bn_1/beta/Assign"
  input: "^conv14_1/bn_1/gamma/Assign"
  input: "^conv14_1/bn_1/moving_mean/Assign"
  input: "^conv14_1/bn_1/moving_mean/biased/Assign"
  input: "^conv14_1/bn_1/moving_mean/local_step/Assign"
  input: "^conv14_1/bn_1/moving_variance/Assign"
  input: "^conv14_1/bn_1/moving_variance/biased/Assign"
  input: "^conv14_1/bn_1/moving_variance/local_step/Assign"
  input: "^conv14_1/kernel/Assign"
  input: "^conv14_1_1/kernel/Assign"
  input: "^conv14_2/bn/beta/Assign"
  input: "^conv14_2/bn/gamma/Assign"
  input: "^conv14_2/bn/moving_mean/Assign"
  input: "^conv14_2/bn/moving_mean/biased/Assign"
  input: "^conv14_2/bn/moving_mean/local_step/Assign"
  input: "^conv14_2/bn/moving_variance/Assign"
  input: "^conv14_2/bn/moving_variance/biased/Assign"
  input: "^conv14_2/bn/moving_variance/local_step/Assign"
  input: "^conv14_2/bn_1/beta/Assign"
  input: "^conv14_2/bn_1/gamma/Assign"
  input: "^conv14_2/bn_1/moving_mean/Assign"
  input: "^conv14_2/bn_1/moving_mean/biased/Assign"
  input: "^conv14_2/bn_1/moving_mean/local_step/Assign"
  input: "^conv14_2/bn_1/moving_variance/Assign"
  input: "^conv14_2/bn_1/moving_variance/biased/Assign"
  input: "^conv14_2/bn_1/moving_variance/local_step/Assign"
  input: "^conv14_2/kernel/Assign"
  input: "^conv14_2_1/kernel/Assign"
  input: "^conv14_2_mbox_conf/bias/Assign"
  input: "^conv14_2_mbox_conf/kernel/Assign"
  input: "^conv14_2_mbox_conf_1/bias/Assign"
  input: "^conv14_2_mbox_conf_1/kernel/Assign"
  input: "^conv14_2_mbox_loc/bias/Assign"
  input: "^conv14_2_mbox_loc/kernel/Assign"
  input: "^conv14_2_mbox_loc_1/bias/Assign"
  input: "^conv14_2_mbox_loc_1/kernel/Assign"
  input: "^conv15_1/bn/beta/Assign"
  input: "^conv15_1/bn/gamma/Assign"
  input: "^conv15_1/bn/moving_mean/Assign"
  input: "^conv15_1/bn/moving_mean/biased/Assign"
  input: "^conv15_1/bn/moving_mean/local_step/Assign"
  input: "^conv15_1/bn/moving_variance/Assign"
  input: "^conv15_1/bn/moving_variance/biased/Assign"
  input: "^conv15_1/bn/moving_variance/local_step/Assign"
  input: "^conv15_1/bn_1/beta/Assign"
  input: "^conv15_1/bn_1/gamma/Assign"
  input: "^conv15_1/bn_1/moving_mean/Assign"
  input: "^conv15_1/bn_1/moving_mean/biased/Assign"
  input: "^conv15_1/bn_1/moving_mean/local_step/Assign"
  input: "^conv15_1/bn_1/moving_variance/Assign"
  input: "^conv15_1/bn_1/moving_variance/biased/Assign"
  input: "^conv15_1/bn_1/moving_variance/local_step/Assign"
  input: "^conv15_1/kernel/Assign"
  input: "^conv15_1_1/kernel/Assign"
  input: "^conv15_2/bn/beta/Assign"
  input: "^conv15_2/bn/gamma/Assign"
  input: "^conv15_2/bn/moving_mean/Assign"
  input: "^conv15_2/bn/moving_mean/biased/Assign"
  input: "^conv15_2/bn/moving_mean/local_step/Assign"
  input: "^conv15_2/bn/moving_variance/Assign"
  input: "^conv15_2/bn/moving_variance/biased/Assign"
  input: "^conv15_2/bn/moving_variance/local_step/Assign"
  input: "^conv15_2/bn_1/beta/Assign"
  input: "^conv15_2/bn_1/gamma/Assign"
  input: "^conv15_2/bn_1/moving_mean/Assign"
  input: "^conv15_2/bn_1/moving_mean/biased/Assign"
  input: "^conv15_2/bn_1/moving_mean/local_step/Assign"
  input: "^conv15_2/bn_1/moving_variance/Assign"
  input: "^conv15_2/bn_1/moving_variance/biased/Assign"
  input: "^conv15_2/bn_1/moving_variance/local_step/Assign"
  input: "^conv15_2/kernel/Assign"
  input: "^conv15_2_1/kernel/Assign"
  input: "^conv15_2_mbox_conf/bias/Assign"
  input: "^conv15_2_mbox_conf/kernel/Assign"
  input: "^conv15_2_mbox_conf_1/bias/Assign"
  input: "^conv15_2_mbox_conf_1/kernel/Assign"
  input: "^conv15_2_mbox_loc/bias/Assign"
  input: "^conv15_2_mbox_loc/kernel/Assign"
  input: "^conv15_2_mbox_loc_1/bias/Assign"
  input: "^conv15_2_mbox_loc_1/kernel/Assign"
  input: "^conv16_1/bn/beta/Assign"
  input: "^conv16_1/bn/gamma/Assign"
  input: "^conv16_1/bn/moving_mean/Assign"
  input: "^conv16_1/bn/moving_mean/biased/Assign"
  input: "^conv16_1/bn/moving_mean/local_step/Assign"
  input: "^conv16_1/bn/moving_variance/Assign"
  input: "^conv16_1/bn/moving_variance/biased/Assign"
  input: "^conv16_1/bn/moving_variance/local_step/Assign"
  input: "^conv16_1/bn_1/beta/Assign"
  input: "^conv16_1/bn_1/gamma/Assign"
  input: "^conv16_1/bn_1/moving_mean/Assign"
  input: "^conv16_1/bn_1/moving_mean/biased/Assign"
  input: "^conv16_1/bn_1/moving_mean/local_step/Assign"
  input: "^conv16_1/bn_1/moving_variance/Assign"
  input: "^conv16_1/bn_1/moving_variance/biased/Assign"
  input: "^conv16_1/bn_1/moving_variance/local_step/Assign"
  input: "^conv16_1/kernel/Assign"
  input: "^conv16_1_1/kernel/Assign"
  input: "^conv16_2/bn/beta/Assign"
  input: "^conv16_2/bn/gamma/Assign"
  input: "^conv16_2/bn/moving_mean/Assign"
  input: "^conv16_2/bn/moving_mean/biased/Assign"
  input: "^conv16_2/bn/moving_mean/local_step/Assign"
  input: "^conv16_2/bn/moving_variance/Assign"
  input: "^conv16_2/bn/moving_variance/biased/Assign"
  input: "^conv16_2/bn/moving_variance/local_step/Assign"
  input: "^conv16_2/bn_1/beta/Assign"
  input: "^conv16_2/bn_1/gamma/Assign"
  input: "^conv16_2/bn_1/moving_mean/Assign"
  input: "^conv16_2/bn_1/moving_mean/biased/Assign"
  input: "^conv16_2/bn_1/moving_mean/local_step/Assign"
  input: "^conv16_2/bn_1/moving_variance/Assign"
  input: "^conv16_2/bn_1/moving_variance/biased/Assign"
  input: "^conv16_2/bn_1/moving_variance/local_step/Assign"
  input: "^conv16_2/kernel/Assign"
  input: "^conv16_2_1/kernel/Assign"
  input: "^conv16_2_mbox_conf/bias/Assign"
  input: "^conv16_2_mbox_conf/kernel/Assign"
  input: "^conv16_2_mbox_conf_1/bias/Assign"
  input: "^conv16_2_mbox_conf_1/kernel/Assign"
  input: "^conv16_2_mbox_loc/bias/Assign"
  input: "^conv16_2_mbox_loc/kernel/Assign"
  input: "^conv16_2_mbox_loc_1/bias/Assign"
  input: "^conv16_2_mbox_loc_1/kernel/Assign"
  input: "^conv17_1/bn/beta/Assign"
  input: "^conv17_1/bn/gamma/Assign"
  input: "^conv17_1/bn/moving_mean/Assign"
  input: "^conv17_1/bn/moving_mean/biased/Assign"
  input: "^conv17_1/bn/moving_mean/local_step/Assign"
  input: "^conv17_1/bn/moving_variance/Assign"
  input: "^conv17_1/bn/moving_variance/biased/Assign"
  input: "^conv17_1/bn/moving_variance/local_step/Assign"
  input: "^conv17_1/bn_1/beta/Assign"
  input: "^conv17_1/bn_1/gamma/Assign"
  input: "^conv17_1/bn_1/moving_mean/Assign"
  input: "^conv17_1/bn_1/moving_mean/biased/Assign"
  input: "^conv17_1/bn_1/moving_mean/local_step/Assign"
  input: "^conv17_1/bn_1/moving_variance/Assign"
  input: "^conv17_1/bn_1/moving_variance/biased/Assign"
  input: "^conv17_1/bn_1/moving_variance/local_step/Assign"
  input: "^conv17_1/kernel/Assign"
  input: "^conv17_1_1/kernel/Assign"
  input: "^conv17_2/bn/beta/Assign"
  input: "^conv17_2/bn/gamma/Assign"
  input: "^conv17_2/bn/moving_mean/Assign"
  input: "^conv17_2/bn/moving_mean/biased/Assign"
  input: "^conv17_2/bn/moving_mean/local_step/Assign"
  input: "^conv17_2/bn/moving_variance/Assign"
  input: "^conv17_2/bn/moving_variance/biased/Assign"
  input: "^conv17_2/bn/moving_variance/local_step/Assign"
  input: "^conv17_2/bn_1/beta/Assign"
  input: "^conv17_2/bn_1/gamma/Assign"
  input: "^conv17_2/bn_1/moving_mean/Assign"
  input: "^conv17_2/bn_1/moving_mean/biased/Assign"
  input: "^conv17_2/bn_1/moving_mean/local_step/Assign"
  input: "^conv17_2/bn_1/moving_variance/Assign"
  input: "^conv17_2/bn_1/moving_variance/biased/Assign"
  input: "^conv17_2/bn_1/moving_variance/local_step/Assign"
  input: "^conv17_2/kernel/Assign"
  input: "^conv17_2_1/kernel/Assign"
  input: "^conv17_2_mbox_conf/bias/Assign"
  input: "^conv17_2_mbox_conf/kernel/Assign"
  input: "^conv17_2_mbox_conf_1/bias/Assign"
  input: "^conv17_2_mbox_conf_1/kernel/Assign"
  input: "^conv17_2_mbox_loc/bias/Assign"
  input: "^conv17_2_mbox_loc/kernel/Assign"
  input: "^conv17_2_mbox_loc_1/bias/Assign"
  input: "^conv17_2_mbox_loc_1/kernel/Assign"
  input: "^conv1_1/kernel/Assign"
  input: "^conv2/bn/beta/Assign"
  input: "^conv2/bn/gamma/Assign"
  input: "^conv2/bn/moving_mean/Assign"
  input: "^conv2/bn/moving_mean/biased/Assign"
  input: "^conv2/bn/moving_mean/local_step/Assign"
  input: "^conv2/bn/moving_variance/Assign"
  input: "^conv2/bn/moving_variance/biased/Assign"
  input: "^conv2/bn/moving_variance/local_step/Assign"
  input: "^conv2/bn_1/beta/Assign"
  input: "^conv2/bn_1/gamma/Assign"
  input: "^conv2/bn_1/moving_mean/Assign"
  input: "^conv2/bn_1/moving_mean/biased/Assign"
  input: "^conv2/bn_1/moving_mean/local_step/Assign"
  input: "^conv2/bn_1/moving_variance/Assign"
  input: "^conv2/bn_1/moving_variance/biased/Assign"
  input: "^conv2/bn_1/moving_variance/local_step/Assign"
  input: "^conv2/dw/bn/beta/Assign"
  input: "^conv2/dw/bn/gamma/Assign"
  input: "^conv2/dw/bn/moving_mean/Assign"
  input: "^conv2/dw/bn/moving_mean/biased/Assign"
  input: "^conv2/dw/bn/moving_mean/local_step/Assign"
  input: "^conv2/dw/bn/moving_variance/Assign"
  input: "^conv2/dw/bn/moving_variance/biased/Assign"
  input: "^conv2/dw/bn/moving_variance/local_step/Assign"
  input: "^conv2/dw/bn_1/beta/Assign"
  input: "^conv2/dw/bn_1/gamma/Assign"
  input: "^conv2/dw/bn_1/moving_mean/Assign"
  input: "^conv2/dw/bn_1/moving_mean/biased/Assign"
  input: "^conv2/dw/bn_1/moving_mean/local_step/Assign"
  input: "^conv2/dw/bn_1/moving_variance/Assign"
  input: "^conv2/dw/bn_1/moving_variance/biased/Assign"
  input: "^conv2/dw/bn_1/moving_variance/local_step/Assign"
  input: "^conv2/dw/depthwise_kernel/Assign"
  input: "^conv2/dw_1/depthwise_kernel/Assign"
  input: "^conv2/kernel/Assign"
  input: "^conv2_1/kernel/Assign"
  input: "^conv3/bn/beta/Assign"
  input: "^conv3/bn/gamma/Assign"
  input: "^conv3/bn/moving_mean/Assign"
  input: "^conv3/bn/moving_mean/biased/Assign"
  input: "^conv3/bn/moving_mean/local_step/Assign"
  input: "^conv3/bn/moving_variance/Assign"
  input: "^conv3/bn/moving_variance/biased/Assign"
  input: "^conv3/bn/moving_variance/local_step/Assign"
  input: "^conv3/bn_1/beta/Assign"
  input: "^conv3/bn_1/gamma/Assign"
  input: "^conv3/bn_1/moving_mean/Assign"
  input: "^conv3/bn_1/moving_mean/biased/Assign"
  input: "^conv3/bn_1/moving_mean/local_step/Assign"
  input: "^conv3/bn_1/moving_variance/Assign"
  input: "^conv3/bn_1/moving_variance/biased/Assign"
  input: "^conv3/bn_1/moving_variance/local_step/Assign"
  input: "^conv3/dw/bn/beta/Assign"
  input: "^conv3/dw/bn/gamma/Assign"
  input: "^conv3/dw/bn/moving_mean/Assign"
  input: "^conv3/dw/bn/moving_mean/biased/Assign"
  input: "^conv3/dw/bn/moving_mean/local_step/Assign"
  input: "^conv3/dw/bn/moving_variance/Assign"
  input: "^conv3/dw/bn/moving_variance/biased/Assign"
  input: "^conv3/dw/bn/moving_variance/local_step/Assign"
  input: "^conv3/dw/bn_1/beta/Assign"
  input: "^conv3/dw/bn_1/gamma/Assign"
  input: "^conv3/dw/bn_1/moving_mean/Assign"
  input: "^conv3/dw/bn_1/moving_mean/biased/Assign"
  input: "^conv3/dw/bn_1/moving_mean/local_step/Assign"
  input: "^conv3/dw/bn_1/moving_variance/Assign"
  input: "^conv3/dw/bn_1/moving_variance/biased/Assign"
  input: "^conv3/dw/bn_1/moving_variance/local_step/Assign"
  input: "^conv3/dw/depthwise_kernel/Assign"
  input: "^conv3/dw_1/depthwise_kernel/Assign"
  input: "^conv3/kernel/Assign"
  input: "^conv3_1/kernel/Assign"
  input: "^conv4/bn/beta/Assign"
  input: "^conv4/bn/gamma/Assign"
  input: "^conv4/bn/moving_mean/Assign"
  input: "^conv4/bn/moving_mean/biased/Assign"
  input: "^conv4/bn/moving_mean/local_step/Assign"
  input: "^conv4/bn/moving_variance/Assign"
  input: "^conv4/bn/moving_variance/biased/Assign"
  input: "^conv4/bn/moving_variance/local_step/Assign"
  input: "^conv4/bn_1/beta/Assign"
  input: "^conv4/bn_1/gamma/Assign"
  input: "^conv4/bn_1/moving_mean/Assign"
  input: "^conv4/bn_1/moving_mean/biased/Assign"
  input: "^conv4/bn_1/moving_mean/local_step/Assign"
  input: "^conv4/bn_1/moving_variance/Assign"
  input: "^conv4/bn_1/moving_variance/biased/Assign"
  input: "^conv4/bn_1/moving_variance/local_step/Assign"
  input: "^conv4/dw/bn/beta/Assign"
  input: "^conv4/dw/bn/gamma/Assign"
  input: "^conv4/dw/bn/moving_mean/Assign"
  input: "^conv4/dw/bn/moving_mean/biased/Assign"
  input: "^conv4/dw/bn/moving_mean/local_step/Assign"
  input: "^conv4/dw/bn/moving_variance/Assign"
  input: "^conv4/dw/bn/moving_variance/biased/Assign"
  input: "^conv4/dw/bn/moving_variance/local_step/Assign"
  input: "^conv4/dw/bn_1/beta/Assign"
  input: "^conv4/dw/bn_1/gamma/Assign"
  input: "^conv4/dw/bn_1/moving_mean/Assign"
  input: "^conv4/dw/bn_1/moving_mean/biased/Assign"
  input: "^conv4/dw/bn_1/moving_mean/local_step/Assign"
  input: "^conv4/dw/bn_1/moving_variance/Assign"
  input: "^conv4/dw/bn_1/moving_variance/biased/Assign"
  input: "^conv4/dw/bn_1/moving_variance/local_step/Assign"
  input: "^conv4/dw/depthwise_kernel/Assign"
  input: "^conv4/dw_1/depthwise_kernel/Assign"
  input: "^conv4/kernel/Assign"
  input: "^conv4_1/kernel/Assign"
  input: "^conv5/bn/beta/Assign"
  input: "^conv5/bn/gamma/Assign"
  input: "^conv5/bn/moving_mean/Assign"
  input: "^conv5/bn/moving_mean/biased/Assign"
  input: "^conv5/bn/moving_mean/local_step/Assign"
  input: "^conv5/bn/moving_variance/Assign"
  input: "^conv5/bn/moving_variance/biased/Assign"
  input: "^conv5/bn/moving_variance/local_step/Assign"
  input: "^conv5/bn_1/beta/Assign"
  input: "^conv5/bn_1/gamma/Assign"
  input: "^conv5/bn_1/moving_mean/Assign"
  input: "^conv5/bn_1/moving_mean/biased/Assign"
  input: "^conv5/bn_1/moving_mean/local_step/Assign"
  input: "^conv5/bn_1/moving_variance/Assign"
  input: "^conv5/bn_1/moving_variance/biased/Assign"
  input: "^conv5/bn_1/moving_variance/local_step/Assign"
  input: "^conv5/dw/bn/beta/Assign"
  input: "^conv5/dw/bn/gamma/Assign"
  input: "^conv5/dw/bn/moving_mean/Assign"
  input: "^conv5/dw/bn/moving_mean/biased/Assign"
  input: "^conv5/dw/bn/moving_mean/local_step/Assign"
  input: "^conv5/dw/bn/moving_variance/Assign"
  input: "^conv5/dw/bn/moving_variance/biased/Assign"
  input: "^conv5/dw/bn/moving_variance/local_step/Assign"
  input: "^conv5/dw/bn_1/beta/Assign"
  input: "^conv5/dw/bn_1/gamma/Assign"
  input: "^conv5/dw/bn_1/moving_mean/Assign"
  input: "^conv5/dw/bn_1/moving_mean/biased/Assign"
  input: "^conv5/dw/bn_1/moving_mean/local_step/Assign"
  input: "^conv5/dw/bn_1/moving_variance/Assign"
  input: "^conv5/dw/bn_1/moving_variance/biased/Assign"
  input: "^conv5/dw/bn_1/moving_variance/local_step/Assign"
  input: "^conv5/dw/depthwise_kernel/Assign"
  input: "^conv5/dw_1/depthwise_kernel/Assign"
  input: "^conv5/kernel/Assign"
  input: "^conv5_1/kernel/Assign"
  input: "^conv6/bn/beta/Assign"
  input: "^conv6/bn/gamma/Assign"
  input: "^conv6/bn/moving_mean/Assign"
  input: "^conv6/bn/moving_mean/biased/Assign"
  input: "^conv6/bn/moving_mean/local_step/Assign"
  input: "^conv6/bn/moving_variance/Assign"
  input: "^conv6/bn/moving_variance/biased/Assign"
  input: "^conv6/bn/moving_variance/local_step/Assign"
  input: "^conv6/bn_1/beta/Assign"
  input: "^conv6/bn_1/gamma/Assign"
  input: "^conv6/bn_1/moving_mean/Assign"
  input: "^conv6/bn_1/moving_mean/biased/Assign"
  input: "^conv6/bn_1/moving_mean/local_step/Assign"
  input: "^conv6/bn_1/moving_variance/Assign"
  input: "^conv6/bn_1/moving_variance/biased/Assign"
  input: "^conv6/bn_1/moving_variance/local_step/Assign"
  input: "^conv6/dw/bn/beta/Assign"
  input: "^conv6/dw/bn/gamma/Assign"
  input: "^conv6/dw/bn/moving_mean/Assign"
  input: "^conv6/dw/bn/moving_mean/biased/Assign"
  input: "^conv6/dw/bn/moving_mean/local_step/Assign"
  input: "^conv6/dw/bn/moving_variance/Assign"
  input: "^conv6/dw/bn/moving_variance/biased/Assign"
  input: "^conv6/dw/bn/moving_variance/local_step/Assign"
  input: "^conv6/dw/bn_1/beta/Assign"
  input: "^conv6/dw/bn_1/gamma/Assign"
  input: "^conv6/dw/bn_1/moving_mean/Assign"
  input: "^conv6/dw/bn_1/moving_mean/biased/Assign"
  input: "^conv6/dw/bn_1/moving_mean/local_step/Assign"
  input: "^conv6/dw/bn_1/moving_variance/Assign"
  input: "^conv6/dw/bn_1/moving_variance/biased/Assign"
  input: "^conv6/dw/bn_1/moving_variance/local_step/Assign"
  input: "^conv6/dw/depthwise_kernel/Assign"
  input: "^conv6/dw_1/depthwise_kernel/Assign"
  input: "^conv6/kernel/Assign"
  input: "^conv6_1/kernel/Assign"
  input: "^conv7/bn/beta/Assign"
  input: "^conv7/bn/gamma/Assign"
  input: "^conv7/bn/moving_mean/Assign"
  input: "^conv7/bn/moving_mean/biased/Assign"
  input: "^conv7/bn/moving_mean/local_step/Assign"
  input: "^conv7/bn/moving_variance/Assign"
  input: "^conv7/bn/moving_variance/biased/Assign"
  input: "^conv7/bn/moving_variance/local_step/Assign"
  input: "^conv7/bn_1/beta/Assign"
  input: "^conv7/bn_1/gamma/Assign"
  input: "^conv7/bn_1/moving_mean/Assign"
  input: "^conv7/bn_1/moving_mean/biased/Assign"
  input: "^conv7/bn_1/moving_mean/local_step/Assign"
  input: "^conv7/bn_1/moving_variance/Assign"
  input: "^conv7/bn_1/moving_variance/biased/Assign"
  input: "^conv7/bn_1/moving_variance/local_step/Assign"
  input: "^conv7/dw/bn/beta/Assign"
  input: "^conv7/dw/bn/gamma/Assign"
  input: "^conv7/dw/bn/moving_mean/Assign"
  input: "^conv7/dw/bn/moving_mean/biased/Assign"
  input: "^conv7/dw/bn/moving_mean/local_step/Assign"
  input: "^conv7/dw/bn/moving_variance/Assign"
  input: "^conv7/dw/bn/moving_variance/biased/Assign"
  input: "^conv7/dw/bn/moving_variance/local_step/Assign"
  input: "^conv7/dw/bn_1/beta/Assign"
  input: "^conv7/dw/bn_1/gamma/Assign"
  input: "^conv7/dw/bn_1/moving_mean/Assign"
  input: "^conv7/dw/bn_1/moving_mean/biased/Assign"
  input: "^conv7/dw/bn_1/moving_mean/local_step/Assign"
  input: "^conv7/dw/bn_1/moving_variance/Assign"
  input: "^conv7/dw/bn_1/moving_variance/biased/Assign"
  input: "^conv7/dw/bn_1/moving_variance/local_step/Assign"
  input: "^conv7/dw/depthwise_kernel/Assign"
  input: "^conv7/dw_1/depthwise_kernel/Assign"
  input: "^conv7/kernel/Assign"
  input: "^conv7_1/kernel/Assign"
  input: "^conv8/bn/beta/Assign"
  input: "^conv8/bn/gamma/Assign"
  input: "^conv8/bn/moving_mean/Assign"
  input: "^conv8/bn/moving_mean/biased/Assign"
  input: "^conv8/bn/moving_mean/local_step/Assign"
  input: "^conv8/bn/moving_variance/Assign"
  input: "^conv8/bn/moving_variance/biased/Assign"
  input: "^conv8/bn/moving_variance/local_step/Assign"
  input: "^conv8/bn_1/beta/Assign"
  input: "^conv8/bn_1/gamma/Assign"
  input: "^conv8/bn_1/moving_mean/Assign"
  input: "^conv8/bn_1/moving_mean/biased/Assign"
  input: "^conv8/bn_1/moving_mean/local_step/Assign"
  input: "^conv8/bn_1/moving_variance/Assign"
  input: "^conv8/bn_1/moving_variance/biased/Assign"
  input: "^conv8/bn_1/moving_variance/local_step/Assign"
  input: "^conv8/dw/bn/beta/Assign"
  input: "^conv8/dw/bn/gamma/Assign"
  input: "^conv8/dw/bn/moving_mean/Assign"
  input: "^conv8/dw/bn/moving_mean/biased/Assign"
  input: "^conv8/dw/bn/moving_mean/local_step/Assign"
  input: "^conv8/dw/bn/moving_variance/Assign"
  input: "^conv8/dw/bn/moving_variance/biased/Assign"
  input: "^conv8/dw/bn/moving_variance/local_step/Assign"
  input: "^conv8/dw/bn_1/beta/Assign"
  input: "^conv8/dw/bn_1/gamma/Assign"
  input: "^conv8/dw/bn_1/moving_mean/Assign"
  input: "^conv8/dw/bn_1/moving_mean/biased/Assign"
  input: "^conv8/dw/bn_1/moving_mean/local_step/Assign"
  input: "^conv8/dw/bn_1/moving_variance/Assign"
  input: "^conv8/dw/bn_1/moving_variance/biased/Assign"
  input: "^conv8/dw/bn_1/moving_variance/local_step/Assign"
  input: "^conv8/dw/depthwise_kernel/Assign"
  input: "^conv8/dw_1/depthwise_kernel/Assign"
  input: "^conv8/kernel/Assign"
  input: "^conv8_1/kernel/Assign"
  input: "^conv9/bn/beta/Assign"
  input: "^conv9/bn/gamma/Assign"
  input: "^conv9/bn/moving_mean/Assign"
  input: "^conv9/bn/moving_mean/biased/Assign"
  input: "^conv9/bn/moving_mean/local_step/Assign"
  input: "^conv9/bn/moving_variance/Assign"
  input: "^conv9/bn/moving_variance/biased/Assign"
  input: "^conv9/bn/moving_variance/local_step/Assign"
  input: "^conv9/bn_1/beta/Assign"
  input: "^conv9/bn_1/gamma/Assign"
  input: "^conv9/bn_1/moving_mean/Assign"
  input: "^conv9/bn_1/moving_mean/biased/Assign"
  input: "^conv9/bn_1/moving_mean/local_step/Assign"
  input: "^conv9/bn_1/moving_variance/Assign"
  input: "^conv9/bn_1/moving_variance/biased/Assign"
  input: "^conv9/bn_1/moving_variance/local_step/Assign"
  input: "^conv9/dw/bn/beta/Assign"
  input: "^conv9/dw/bn/gamma/Assign"
  input: "^conv9/dw/bn/moving_mean/Assign"
  input: "^conv9/dw/bn/moving_mean/biased/Assign"
  input: "^conv9/dw/bn/moving_mean/local_step/Assign"
  input: "^conv9/dw/bn/moving_variance/Assign"
  input: "^conv9/dw/bn/moving_variance/biased/Assign"
  input: "^conv9/dw/bn/moving_variance/local_step/Assign"
  input: "^conv9/dw/bn_1/beta/Assign"
  input: "^conv9/dw/bn_1/gamma/Assign"
  input: "^conv9/dw/bn_1/moving_mean/Assign"
  input: "^conv9/dw/bn_1/moving_mean/biased/Assign"
  input: "^conv9/dw/bn_1/moving_mean/local_step/Assign"
  input: "^conv9/dw/bn_1/moving_variance/Assign"
  input: "^conv9/dw/bn_1/moving_variance/biased/Assign"
  input: "^conv9/dw/bn_1/moving_variance/local_step/Assign"
  input: "^conv9/dw/depthwise_kernel/Assign"
  input: "^conv9/dw_1/depthwise_kernel/Assign"
  input: "^conv9/kernel/Assign"
  input: "^conv9_1/kernel/Assign"
}
versions {
  producer: 26
}
